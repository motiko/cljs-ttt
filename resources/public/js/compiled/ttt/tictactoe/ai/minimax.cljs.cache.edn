{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name tictactoe.ai.minimax, :imports nil, :requires nil, :uses nil, :defs {X {:name tictactoe.ai.minimax/X, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 5, :column 1, :end-line 5, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 5, :column 6, :end-line 5, :end-column 7}}, vertical-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 26, :column 7, :end-line 26, :end-column 22, :arglists (quote ([y]))}, :name tictactoe.ai.minimax/vertical-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 22, :method-params ([y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([y]))}, get-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 41, :column 7, :end-line 41, :end-column 17, :arglists (quote ([board coords]))}, :name tictactoe.ai.minimax/get-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 17, :method-params ([board coords]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board coords]))}, find-best-move {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 75, :column 7, :end-line 75, :end-column 21, :arglists (quote ([board]))}, :name tictactoe.ai.minimax/find-best-move, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 21, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, horizontal-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 29, :column 7, :end-line 29, :end-column 24, :arglists (quote ([x]))}, :name tictactoe.ai.minimax/horizontal-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, opponent {:name tictactoe.ai.minimax/opponent, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 12, :column 6, :end-line 12, :end-column 14}}, winning-k {:name tictactoe.ai.minimax/winning-k, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 3, :column 1, :end-line 3, :end-column 15, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 3, :column 6, :end-line 3, :end-column 15}}, winning-by? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 52, :column 7, :end-line 52, :end-column 18, :arglists (quote ([player line]))}, :name tictactoe.ai.minimax/winning-by?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 18, :method-params ([player line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player line]))}, evaluate-moves-deep {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 64, :column 7, :end-line 64, :end-column 26, :arglists (quote ([board player max-depth computer & last-move])), :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(board player max-depth computer last-move)], :arglists ([board player max-depth computer & last-move]), :arglists-meta (nil)}}, :name tictactoe.ai.minimax/evaluate-moves-deep, :variadic true, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(board player max-depth computer last-move)], :arglists ([board player max-depth computer & last-move]), :arglists-meta (nil)}, :method-params [(board player max-depth computer last-move)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 4, :fn-var true, :arglists ([board player max-depth computer & last-move])}, all-lines-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 44, :column 7, :end-line 44, :end-column 23, :arglists (quote ([]))}, :name tictactoe.ai.minimax/all-lines-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, diagonal {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([sx sy dx dy]))}, :name tictactoe.ai.minimax/diagonal, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 15, :method-params ([sx sy dx dy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 4, :fn-var true, :arglists (quote ([sx sy dx dy]))}, O {:name tictactoe.ai.minimax/O, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 6, :column 1, :end-line 6, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 6, :column 6, :end-line 6, :end-column 7}}, free-spots {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([board] [board line-coords])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([board] [board line-coords]), :arglists ([board] [board line-coords]), :arglists-meta (nil nil)}}, :name tictactoe.ai.minimax/free-spots, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([board] [board line-coords]), :arglists ([board] [board line-coords]), :arglists-meta (nil nil)}, :method-params ([board] [board line-coords]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists ([board] [board line-coords])}, all-lines {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 49, :column 7, :end-line 49, :end-column 16, :arglists (quote ([board]))}, :name tictactoe.ai.minimax/all-lines, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 16, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, board-size {:name tictactoe.ai.minimax/board-size, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 10, :column 1, :end-line 10, :end-column 16, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 10, :column 6, :end-line 10, :end-column 16}}, B {:name tictactoe.ai.minimax/B, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 7, :column 1, :end-line 7, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 7, :column 6, :end-line 7, :end-column 7}}, diagonal-up-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 38, :column 7, :end-line 38, :end-column 25, :arglists (quote ([]))}, :name tictactoe.ai.minimax/diagonal-up-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, winning? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 55, :column 7, :end-line 55, :end-column 15, :arglists (quote ([board player]))}, :name tictactoe.ai.minimax/winning?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 15, :method-params ([board player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board player]))}, draw? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([board]))}, :name tictactoe.ai.minimax/draw?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 12, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, evaluate-board {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 58, :column 7, :end-line 58, :end-column 21, :arglists (quote ([board player]))}, :name tictactoe.ai.minimax/evaluate-board, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 21, :method-params ([board player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board player]))}, diagonal-down-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 35, :column 7, :end-line 35, :end-column 27, :arglists (quote ([]))}, :name tictactoe.ai.minimax/diagonal-down-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :move :score :board}, :order [:else :score :move :board]}, :doc nil}