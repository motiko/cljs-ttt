{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name tictactoe.ai.minimax, :imports nil, :requires nil, :uses nil, :defs {X {:name tictactoe.ai.minimax/X, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 5, :column 1, :end-line 5, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 5, :column 6, :end-line 5, :end-column 7}}, vertical-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 25, :column 7, :end-line 25, :end-column 22, :arglists (quote ([y]))}, :name tictactoe.ai.minimax/vertical-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 22, :method-params ([y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([y]))}, get-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 37, :column 7, :end-line 37, :end-column 17, :arglists (quote ([board coords]))}, :name tictactoe.ai.minimax/get-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 17, :method-params ([board coords]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board coords]))}, find-best-move {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 71, :column 7, :end-line 71, :end-column 21, :arglists (quote ([board]))}, :name tictactoe.ai.minimax/find-best-move, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 21, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, horizontal-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 28, :column 7, :end-line 28, :end-column 24, :arglists (quote ([x]))}, :name tictactoe.ai.minimax/horizontal-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, opponent {:name tictactoe.ai.minimax/opponent, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 11, :column 6, :end-line 11, :end-column 14}}, winning-k {:name tictactoe.ai.minimax/winning-k, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 3, :column 1, :end-line 3, :end-column 15, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 3, :column 6, :end-line 3, :end-column 15}}, winning-by? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 48, :column 7, :end-line 48, :end-column 18, :arglists (quote ([player line]))}, :name tictactoe.ai.minimax/winning-by?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 18, :method-params ([player line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player line]))}, evaluate-moves-deep {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 60, :column 7, :end-line 60, :end-column 26, :arglists (quote ([board player max-depth computer & last-move])), :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(board player max-depth computer last-move)], :arglists ([board player max-depth computer & last-move]), :arglists-meta (nil)}}, :name tictactoe.ai.minimax/evaluate-moves-deep, :variadic true, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(board player max-depth computer last-move)], :arglists ([board player max-depth computer & last-move]), :arglists-meta (nil)}, :method-params [(board player max-depth computer last-move)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 4, :fn-var true, :arglists ([board player max-depth computer & last-move])}, all-lines-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 40, :column 7, :end-line 40, :end-column 23, :arglists (quote ([]))}, :name tictactoe.ai.minimax/all-lines-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, O {:name tictactoe.ai.minimax/O, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 6, :column 1, :end-line 6, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 6, :column 6, :end-line 6, :end-column 7}}, free-spots {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([board] [board line-coords])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([board] [board line-coords]), :arglists ([board] [board line-coords]), :arglists-meta (nil nil)}}, :name tictactoe.ai.minimax/free-spots, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([board] [board line-coords]), :arglists ([board] [board line-coords]), :arglists-meta (nil nil)}, :method-params ([board] [board line-coords]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists ([board] [board line-coords])}, all-lines {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 45, :column 7, :end-line 45, :end-column 16, :arglists (quote ([board]))}, :name tictactoe.ai.minimax/all-lines, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 16, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, board-size {:name tictactoe.ai.minimax/board-size, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 9, :column 1, :end-line 9, :end-column 16, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 9, :column 6, :end-line 9, :end-column 16}}, B {:name tictactoe.ai.minimax/B, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 7, :column 1, :end-line 7, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 7, :column 6, :end-line 7, :end-column 7}}, diagonal-up-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 34, :column 7, :end-line 34, :end-column 25, :arglists (quote ([]))}, :name tictactoe.ai.minimax/diagonal-up-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, winning? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 51, :column 7, :end-line 51, :end-column 15, :arglists (quote ([board player]))}, :name tictactoe.ai.minimax/winning?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 15, :method-params ([board player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board player]))}, draw? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 22, :column 7, :end-line 22, :end-column 12, :arglists (quote ([board]))}, :name tictactoe.ai.minimax/draw?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 12, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, evaluate-board {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 54, :column 7, :end-line 54, :end-column 21, :arglists (quote ([board player]))}, :name tictactoe.ai.minimax/evaluate-board, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 21, :method-params ([board player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board player]))}, diagonal-down-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :line 31, :column 7, :end-line 31, :end-column 27, :arglists (quote ([]))}, :name tictactoe.ai.minimax/diagonal-down-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/ai/minimax.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :move :score :board}, :order [:else :score :move :board]}, :doc nil}