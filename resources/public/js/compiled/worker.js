if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(loadFlags["lang"]))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.transpiledLanguages_) {
          goog.transpiledLanguages_ = {"es5":true, "es6":true, "es6-impl":true};
          try {
            goog.transpiledLanguages_["es5"] = eval("[1,].length!\x3d1");
            var es6implTest = "let a\x3d{};const X\x3dclass{constructor(){}x(z){return new Map([" + "...arguments]).get(z[0])\x3d\x3d3}};return new X().x([a,3])";
            var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
            if (eval('(()\x3d\x3e{"use strict";' + es6implTest + "})()")) {
              goog.transpiledLanguages_["es6-impl"] = false;
            }
            if (eval('(()\x3d\x3e{"use strict";' + es6fullTest + "})()")) {
              goog.transpiledLanguages_["es6"] = false;
            }
          } catch (err) {
          }
        }
      }
    }
    return !!goog.transpiledLanguages_[lang];
  };
  goog.transpiledLanguages_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var needsTranspile = goog.needsTranspile_(loadFlags["lang"]);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0;i < separators.length;i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / (v2);
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call((opt_obj), obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call((opt_obj), obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call((opt_obj), obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call((opt_this), obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1;i >= 0;i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0;value >= pow;i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0;i < this.bits_.length;i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0;i < len;i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0;i < arr_index;i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0;i <= len;i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0;i < 2 * len;i++) {
    arr[i] = 0;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    for (var j = 0;j < other.bits_.length;j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0;i < len;i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len;i < 2 * len;i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call((opt_obj), val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call((opt_obj), arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call((opt_obj), arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call((opt_obj), element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call((opt_obj), val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = (compareFn)(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0;i < arr.length;i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call((opt_obj), value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call((opt_obj), element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
      return new goog.math.Long(val | 0, val < 0 ? -1 : 0);
    });
  } else {
    return new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ZERO, function() {
    return goog.math.Long.fromInt(0);
  });
};
goog.math.Long.getOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ONE, function() {
    return goog.math.Long.fromInt(1);
  });
};
goog.math.Long.getNegOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.NEG_ONE, function() {
    return goog.math.Long.fromInt(-1);
  });
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, ZERO:3, ONE:4, NEG_ONE:5, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.9.229";
cljs.core._STAR_unchecked_if_STAR_ = false;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__34822__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__34822 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__34823__i = 0, G__34823__a = new Array(arguments.length - 0);
        while (G__34823__i < G__34823__a.length) {
          G__34823__a[G__34823__i] = arguments[G__34823__i + 0];
          ++G__34823__i;
        }
        args = new cljs.core.IndexedSeq(G__34823__a, 0);
      }
      return G__34822__delegate.call(this, args);
    };
    G__34822.cljs$lang$maxFixedArity = 0;
    G__34822.cljs$lang$applyTo = function(arglist__34824) {
      var args = cljs.core.seq(arglist__34824);
      return G__34822__delegate(args);
    };
    G__34822.cljs$core$IFn$_invoke$arity$variadic = G__34822__delegate;
    return G__34822;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__34825__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__34825 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__34826__i = 0, G__34826__a = new Array(arguments.length - 0);
        while (G__34826__i < G__34826__a.length) {
          G__34826__a[G__34826__i] = arguments[G__34826__i + 0];
          ++G__34826__i;
        }
        args = new cljs.core.IndexedSeq(G__34826__a, 0);
      }
      return G__34825__delegate.call(this, args);
    };
    G__34825.cljs$lang$maxFixedArity = 0;
    G__34825.cljs$lang$applyTo = function(arglist__34827) {
      var args = cljs.core.seq(arglist__34827);
      return G__34825__delegate(args);
    };
    G__34825.cljs$core$IFn$_invoke$arity$variadic = G__34825__delegate;
    return G__34825;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__26228__auto__ = ty;
    if (cljs.core.truth_(and__26228__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__26228__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args34828 = [];
  var len__27315__auto___34834 = arguments.length;
  var i__27316__auto___34835 = 0;
  while (true) {
    if (i__27316__auto___34835 < len__27315__auto___34834) {
      args34828.push(arguments[i__27316__auto___34835]);
      var G__34836 = i__27316__auto___34835 + 1;
      i__27316__auto___34835 = G__34836;
      continue;
    } else {
    }
    break;
  }
  var G__34833 = args34828.length;
  switch(G__34833) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args34828.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__27155__auto___34838 = dimarray.length;
  var i_34839 = 0;
  while (true) {
    if (i_34839 < n__27155__auto___34838) {
      dimarray[i_34839] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__34840 = i_34839 + 1;
      i_34839 = G__34840;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq34829) {
  var G__34830 = cljs.core.first(seq34829);
  var seq34829__$1 = cljs.core.next(seq34829);
  var G__34831 = cljs.core.first(seq34829__$1);
  var seq34829__$2 = cljs.core.next(seq34829__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__34830, G__34831, seq34829__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__27155__auto___34841 = len;
  var i_34842 = 0;
  while (true) {
    if (i_34842 < n__27155__auto___34841) {
      new_arr[i_34842] = arr[i_34842];
      var G__34843 = i_34842 + 1;
      i_34842 = G__34843;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__34844 = i + 1;
      i = G__34844;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args34845 = [];
  var len__27315__auto___34854 = arguments.length;
  var i__27316__auto___34855 = 0;
  while (true) {
    if (i__27316__auto___34855 < len__27315__auto___34854) {
      args34845.push(arguments[i__27316__auto___34855]);
      var G__34856 = i__27316__auto___34855 + 1;
      i__27316__auto___34855 = G__34856;
      continue;
    } else {
    }
    break;
  }
  var G__34850 = args34845.length;
  switch(G__34850) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args34845.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__34851 = cljs.core.aget;
  var G__34852 = array[i];
  var G__34853 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__34851, G__34852, G__34853) : cljs.core.apply.call(null, G__34851, G__34852, G__34853);
};
cljs.core.aget.cljs$lang$applyTo = function(seq34846) {
  var G__34847 = cljs.core.first(seq34846);
  var seq34846__$1 = cljs.core.next(seq34846);
  var G__34848 = cljs.core.first(seq34846__$1);
  var seq34846__$2 = cljs.core.next(seq34846__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__34847, G__34848, seq34846__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args34858 = [];
  var len__27315__auto___34869 = arguments.length;
  var i__27316__auto___34870 = 0;
  while (true) {
    if (i__27316__auto___34870 < len__27315__auto___34869) {
      args34858.push(arguments[i__27316__auto___34870]);
      var G__34871 = i__27316__auto___34870 + 1;
      i__27316__auto___34870 = G__34871;
      continue;
    } else {
    }
    break;
  }
  var G__34864 = args34858.length;
  switch(G__34864) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args34858.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__34865 = cljs.core.aset;
  var G__34866 = array[idx];
  var G__34867 = idx2;
  var G__34868 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__34865, G__34866, G__34867, G__34868) : cljs.core.apply.call(null, G__34865, G__34866, G__34867, G__34868);
};
cljs.core.aset.cljs$lang$applyTo = function(seq34859) {
  var G__34860 = cljs.core.first(seq34859);
  var seq34859__$1 = cljs.core.next(seq34859);
  var G__34861 = cljs.core.first(seq34859__$1);
  var seq34859__$2 = cljs.core.next(seq34859__$1);
  var G__34862 = cljs.core.first(seq34859__$2);
  var seq34859__$3 = cljs.core.next(seq34859__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__34860, G__34861, G__34862, seq34859__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args34873 = [];
  var len__27315__auto___34879 = arguments.length;
  var i__27316__auto___34880 = 0;
  while (true) {
    if (i__27316__auto___34880 < len__27315__auto___34879) {
      args34873.push(arguments[i__27316__auto___34880]);
      var G__34881 = i__27316__auto___34880 + 1;
      i__27316__auto___34880 = G__34881;
      continue;
    } else {
    }
    break;
  }
  var G__34875 = args34873.length;
  switch(G__34875) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34873.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__34876 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__34877 = [];
  var G__34878 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__34876, G__34877, G__34878) : cljs.core.reduce.call(null, G__34876, G__34877, G__34878);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___34886 = arguments.length;
  var i__27316__auto___34887 = 0;
  while (true) {
    if (i__27316__auto___34887 < len__27315__auto___34886) {
      args__27322__auto__.push(arguments[i__27316__auto___34887]);
      var G__34888 = i__27316__auto___34887 + 1;
      i__27316__auto___34887 = G__34888;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq34883) {
  var G__34884 = cljs.core.first(seq34883);
  var seq34883__$1 = cljs.core.next(seq34883);
  var G__34885 = cljs.core.first(seq34883__$1);
  var seq34883__$2 = cljs.core.next(seq34883__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__34884, G__34885, seq34883__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args34889 = [];
  var len__27315__auto___34892 = arguments.length;
  var i__27316__auto___34893 = 0;
  while (true) {
    if (i__27316__auto___34893 < len__27315__auto___34892) {
      args34889.push(arguments[i__27316__auto___34893]);
      var G__34894 = i__27316__auto___34893 + 1;
      i__27316__auto___34893 = G__34894;
      continue;
    } else {
    }
    break;
  }
  var G__34891 = args34889.length;
  switch(G__34891) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34889.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__26904__auto__.call(null, this$);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__26904__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__26904__auto__.call(null, this$, a);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__26904__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__26904__auto__.call(null, this$, a, b);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__26904__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__26904__auto__.call(null, this$, a, b, c);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__26904__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__26904__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__26904__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$6 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__26904__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__26904__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$7 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__26904__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$8 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$9 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$10 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$11 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$12 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$13 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$14 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$15 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$16 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$17 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$18 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$19 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$20 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$21 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$22 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__26903__auto__ = value == null ? null : value;
    var m__26904__auto__ = cljs.core._clone[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__26904__auto__.call(null, value);
    } else {
      var m__26904__auto____$1 = cljs.core._clone["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__26904__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._count[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._count["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._empty[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._empty["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._conj[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__26904__auto__.call(null, coll, o);
    } else {
      var m__26904__auto____$1 = cljs.core._conj["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__26904__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args34896 = [];
  var len__27315__auto___34899 = arguments.length;
  var i__27316__auto___34900 = 0;
  while (true) {
    if (i__27316__auto___34900 < len__27315__auto___34899) {
      args34896.push(arguments[i__27316__auto___34900]);
      var G__34901 = i__27316__auto___34900 + 1;
      i__27316__auto___34900 = G__34901;
      continue;
    } else {
    }
    break;
  }
  var G__34898 = args34896.length;
  switch(G__34898) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34896.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._nth[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__26904__auto__.call(null, coll, n);
    } else {
      var m__26904__auto____$1 = cljs.core._nth["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__26904__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._nth[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__26904__auto__.call(null, coll, n, not_found);
    } else {
      var m__26904__auto____$1 = cljs.core._nth["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__26904__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._first[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._first["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._rest[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._rest["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._next[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._next["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args34903 = [];
  var len__27315__auto___34906 = arguments.length;
  var i__27316__auto___34907 = 0;
  while (true) {
    if (i__27316__auto___34907 < len__27315__auto___34906) {
      args34903.push(arguments[i__27316__auto___34907]);
      var G__34908 = i__27316__auto___34907 + 1;
      i__27316__auto___34907 = G__34908;
      continue;
    } else {
    }
    break;
  }
  var G__34905 = args34903.length;
  switch(G__34905) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34903.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._lookup[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__26904__auto__.call(null, o, k);
    } else {
      var m__26904__auto____$1 = cljs.core._lookup["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__26904__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._lookup[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__26904__auto__.call(null, o, k, not_found);
    } else {
      var m__26904__auto____$1 = cljs.core._lookup["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__26904__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto__.call(null, coll, k);
    } else {
      var m__26904__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._assoc[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__26904__auto__.call(null, coll, k, v);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__26904__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._dissoc[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto__.call(null, coll, k);
    } else {
      var m__26904__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._key[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._key["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._val[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._val["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._disjoin[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__26904__auto__.call(null, coll, v);
    } else {
      var m__26904__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__26904__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._peek[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._peek["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._pop[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._pop["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._assoc_n[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__26904__auto__.call(null, coll, n, val);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__26904__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._deref[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._deref["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__26904__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__26904__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__26904__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._meta[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._meta["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._with_meta[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__26904__auto__.call(null, o, meta);
    } else {
      var m__26904__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__26904__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args34910 = [];
  var len__27315__auto___34913 = arguments.length;
  var i__27316__auto___34914 = 0;
  while (true) {
    if (i__27316__auto___34914 < len__27315__auto___34913) {
      args34910.push(arguments[i__27316__auto___34914]);
      var G__34915 = i__27316__auto___34914 + 1;
      i__27316__auto___34914 = G__34915;
      continue;
    } else {
    }
    break;
  }
  var G__34912 = args34910.length;
  switch(G__34912) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34910.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._reduce[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__26904__auto__.call(null, coll, f);
    } else {
      var m__26904__auto____$1 = cljs.core._reduce["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__26904__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._reduce[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__26904__auto__.call(null, coll, f, start);
    } else {
      var m__26904__auto____$1 = cljs.core._reduce["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__26904__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._kv_reduce[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__26904__auto__.call(null, coll, f, init);
    } else {
      var m__26904__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__26904__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._equiv[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__26904__auto__.call(null, o, other);
    } else {
      var m__26904__auto____$1 = cljs.core._equiv["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__26904__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._hash[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._hash["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._seq[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._seq["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._rseq[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._rseq["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._sorted_seq[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__26904__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__26904__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__26904__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__26904__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__26904__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__26904__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._entry_key[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__26904__auto__.call(null, coll, entry);
    } else {
      var m__26904__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__26904__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._comparator[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._comparator["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__26903__auto__ = writer == null ? null : writer;
    var m__26904__auto__ = cljs.core._write[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__26904__auto__.call(null, writer, s);
    } else {
      var m__26904__auto____$1 = cljs.core._write["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__26904__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__26903__auto__ = writer == null ? null : writer;
    var m__26904__auto__ = cljs.core._flush[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__26904__auto__.call(null, writer);
    } else {
      var m__26904__auto____$1 = cljs.core._flush["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__26904__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._pr_writer[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__26904__auto__.call(null, o, writer, opts);
    } else {
      var m__26904__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__26904__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._notify_watches[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__26904__auto__.call(null, this$, oldval, newval);
    } else {
      var m__26904__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__26904__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._add_watch[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__26904__auto__.call(null, this$, key, f);
    } else {
      var m__26904__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__26904__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._remove_watch[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__26904__auto__.call(null, this$, key);
    } else {
      var m__26904__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__26904__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._as_transient[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__26904__auto__.call(null, tcoll, val);
    } else {
      var m__26904__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__26904__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto__.call(null, tcoll);
    } else {
      var m__26904__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__26904__auto__.call(null, tcoll, key, val);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__26904__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__26904__auto__.call(null, tcoll, key);
    } else {
      var m__26904__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__26904__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__26904__auto__.call(null, tcoll, n, val);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__26904__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto__.call(null, tcoll);
    } else {
      var m__26904__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__26904__auto__.call(null, tcoll, v);
    } else {
      var m__26904__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__26904__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._compare[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__26904__auto__.call(null, x, y);
    } else {
      var m__26904__auto____$1 = cljs.core._compare["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__26904__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._drop_first[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._chunked_first[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._chunked_rest[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._chunked_next[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._name[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._name["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._namespace[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._namespace["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto__.call(null, o, new_value);
    } else {
      var m__26904__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args34917 = [];
  var len__27315__auto___34920 = arguments.length;
  var i__27316__auto___34921 = 0;
  while (true) {
    if (i__27316__auto___34921 < len__27315__auto___34920) {
      args34917.push(arguments[i__27316__auto___34921]);
      var G__34922 = i__27316__auto___34921 + 1;
      i__27316__auto___34921 = G__34922;
      continue;
    } else {
    }
    break;
  }
  var G__34919 = args34917.length;
  switch(G__34919) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34917.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__26904__auto__.call(null, o, f);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__26904__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__26904__auto__.call(null, o, f, a);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__26904__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__26904__auto__.call(null, o, f, a, b);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__26904__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__26904__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__26904__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto__.call(null, o, new_value);
    } else {
      var m__26904__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._iterator[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._iterator["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__34924 = i + 2;
        var G__34925 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__34924;
        h1 = G__34925;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__34928 = i + 1;
          var G__34929 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__34928;
          hash = G__34929;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__34937 = o;
        switch(G__34937) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = cljs.core.not(a.ns);
      if (and__26228__auto__) {
        return b.ns;
      } else {
        return and__26228__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__34945 = a.ns;
            var G__34946 = b.ns;
            return goog.array.defaultCompare(G__34945, G__34946);
          }();
          if (0 === nsc) {
            var G__34947 = a.name;
            var G__34948 = b.name;
            return goog.array.defaultCompare(G__34947, G__34948);
          } else {
            return nsc;
          }
        }
      } else {
        var G__34949 = a.name;
        var G__34950 = b.name;
        return goog.array.defaultCompare(G__34949, G__34950);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__34952 = null;
  var G__34952__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__34952__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__34952 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34952__2.call(this, self__, coll);
      case 3:
        return G__34952__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34952.cljs$core$IFn$_invoke$arity$2 = G__34952__2;
  G__34952.cljs$core$IFn$_invoke$arity$3 = G__34952__3;
  return G__34952;
}();
cljs.core.Symbol.prototype.apply = function(self__, args34951) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34951)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__26675__auto__ = self__._hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args34953 = [];
  var len__27315__auto___34956 = arguments.length;
  var i__27316__auto___34957 = 0;
  while (true) {
    if (i__27316__auto___34957 < len__27315__auto___34956) {
      args34953.push(arguments[i__27316__auto___34957]);
      var G__34958 = i__27316__auto___34957 + 1;
      i__27316__auto___34957 = G__34958;
      continue;
    } else {
    }
    break;
  }
  var G__34955 = args34953.length;
  switch(G__34955) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34953.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str("#'"), cljs.core.str(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__34961 = this$__$1.sym;
    var G__34962 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__34961, G__34962) : cljs.core._EQ_.call(null, G__34961, G__34962);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__35007 = null;
  var G__35007__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__35007__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__35007__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__35007__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__35007__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__35007__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__35007__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__35007__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__35007__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__35007__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__35007__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__35007__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__35007__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__35007__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__35007__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__35007__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__35007__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__35007__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__35007__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__35007__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__35007__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__35007__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__34963 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__34964 = a;
    var G__34965 = b;
    var G__34966 = c;
    var G__34967 = d;
    var G__34968 = e;
    var G__34969 = f;
    var G__34970 = g;
    var G__34971 = h;
    var G__34972 = i;
    var G__34973 = j;
    var G__34974 = k;
    var G__34975 = l;
    var G__34976 = m;
    var G__34977 = n;
    var G__34978 = o;
    var G__34979 = p;
    var G__34980 = q;
    var G__34981 = r;
    var G__34982 = s;
    var G__34983 = t;
    var G__34984 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__34963, G__34964, G__34965, G__34966, G__34967, G__34968, G__34969, G__34970, G__34971, G__34972, G__34973, G__34974, G__34975, G__34976, G__34977, G__34978, G__34979, G__34980, G__34981, G__34982, G__34983, G__34984) : cljs.core.apply.call(null, G__34963, G__34964, G__34965, G__34966, G__34967, G__34968, G__34969, G__34970, G__34971, G__34972, G__34973, G__34974, G__34975, G__34976, G__34977, 
    G__34978, G__34979, G__34980, G__34981, G__34982, G__34983, G__34984);
  };
  G__35007 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__35007__1.call(this, self__);
      case 2:
        return G__35007__2.call(this, self__, a);
      case 3:
        return G__35007__3.call(this, self__, a, b);
      case 4:
        return G__35007__4.call(this, self__, a, b, c);
      case 5:
        return G__35007__5.call(this, self__, a, b, c, d);
      case 6:
        return G__35007__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__35007__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__35007__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__35007__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__35007__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__35007__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__35007__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__35007__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__35007__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__35007__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__35007__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__35007__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__35007__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__35007__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__35007__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__35007__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__35007__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35007.cljs$core$IFn$_invoke$arity$1 = G__35007__1;
  G__35007.cljs$core$IFn$_invoke$arity$2 = G__35007__2;
  G__35007.cljs$core$IFn$_invoke$arity$3 = G__35007__3;
  G__35007.cljs$core$IFn$_invoke$arity$4 = G__35007__4;
  G__35007.cljs$core$IFn$_invoke$arity$5 = G__35007__5;
  G__35007.cljs$core$IFn$_invoke$arity$6 = G__35007__6;
  G__35007.cljs$core$IFn$_invoke$arity$7 = G__35007__7;
  G__35007.cljs$core$IFn$_invoke$arity$8 = G__35007__8;
  G__35007.cljs$core$IFn$_invoke$arity$9 = G__35007__9;
  G__35007.cljs$core$IFn$_invoke$arity$10 = G__35007__10;
  G__35007.cljs$core$IFn$_invoke$arity$11 = G__35007__11;
  G__35007.cljs$core$IFn$_invoke$arity$12 = G__35007__12;
  G__35007.cljs$core$IFn$_invoke$arity$13 = G__35007__13;
  G__35007.cljs$core$IFn$_invoke$arity$14 = G__35007__14;
  G__35007.cljs$core$IFn$_invoke$arity$15 = G__35007__15;
  G__35007.cljs$core$IFn$_invoke$arity$16 = G__35007__16;
  G__35007.cljs$core$IFn$_invoke$arity$17 = G__35007__17;
  G__35007.cljs$core$IFn$_invoke$arity$18 = G__35007__18;
  G__35007.cljs$core$IFn$_invoke$arity$19 = G__35007__19;
  G__35007.cljs$core$IFn$_invoke$arity$20 = G__35007__20;
  G__35007.cljs$core$IFn$_invoke$arity$21 = G__35007__21;
  G__35007.cljs$core$IFn$_invoke$arity$22 = G__35007__22;
  return G__35007;
}();
cljs.core.Var.prototype.apply = function(self__, args34960) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34960)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__34985 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__34986 = a;
  var G__34987 = b;
  var G__34988 = c;
  var G__34989 = d;
  var G__34990 = e;
  var G__34991 = f;
  var G__34992 = g;
  var G__34993 = h;
  var G__34994 = i;
  var G__34995 = j;
  var G__34996 = k;
  var G__34997 = l;
  var G__34998 = m;
  var G__34999 = n;
  var G__35000 = o;
  var G__35001 = p;
  var G__35002 = q;
  var G__35003 = r;
  var G__35004 = s;
  var G__35005 = t;
  var G__35006 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__34985, G__34986, G__34987, G__34988, G__34989, G__34990, G__34991, G__34992, G__34993, G__34994, G__34995, G__34996, G__34997, G__34998, G__34999, G__35000, G__35001, G__35002, G__35003, G__35004, G__35005, G__35006) : cljs.core.apply.call(null, G__34985, G__34986, G__34987, G__34988, G__34989, G__34990, G__34991, G__34992, G__34993, G__34994, G__34995, G__34996, G__34997, G__34998, G__34999, 
  G__35000, G__35001, G__35002, G__35003, G__35004, G__35005, G__35006);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args35020 = [];
  var len__27315__auto___35026 = arguments.length;
  var i__27316__auto___35027 = 0;
  while (true) {
    if (i__27316__auto___35027 < len__27315__auto___35026) {
      args35020.push(arguments[i__27316__auto___35027]);
      var G__35028 = i__27316__auto___35027 + 1;
      i__27316__auto___35027 = G__35028;
      continue;
    } else {
    }
    break;
  }
  var G__35025 = args35020.length;
  switch(G__35025) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35020.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__35030 = y;
        var G__35031 = cljs.core.first(more);
        var G__35032 = cljs.core.next(more);
        x = G__35030;
        y = G__35031;
        more = G__35032;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq35021) {
  var G__35022 = cljs.core.first(seq35021);
  var seq35021__$1 = cljs.core.next(seq35021);
  var G__35023 = cljs.core.first(seq35021__$1);
  var seq35021__$2 = cljs.core.next(seq35021__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__35022, G__35023, seq35021__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__35033 = n + 1;
      var G__35034 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__35035 = cljs.core.next(coll__$1);
      n = G__35033;
      hash_code = G__35034;
      coll__$1 = G__35035;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__35036 = n + 1;
      var G__35037 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__35038 = cljs.core.next(coll__$1);
      n = G__35036;
      hash_code = G__35037;
      coll__$1 = G__35038;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__35039 = this$__$1.valueOf();
    var G__35040 = other.valueOf();
    return goog.array.defaultCompare(G__35039, G__35040);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__26903__auto__ = inst == null ? null : inst;
    var m__26904__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__26904__auto__.call(null, inst);
    } else {
      var m__26904__auto____$1 = cljs.core.inst_ms_STAR_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(inst) : m__26904__auto____$1.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = true;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args35043 = [];
  var len__27315__auto___35052 = arguments.length;
  var i__27316__auto___35053 = 0;
  while (true) {
    if (i__27316__auto___35053 < len__27315__auto___35052) {
      args35043.push(arguments[i__27316__auto___35053]);
      var G__35054 = i__27316__auto___35053 + 1;
      i__27316__auto___35053 = G__35054;
      continue;
    } else {
    }
    break;
  }
  var G__35045 = args35043.length;
  switch(G__35045) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35043.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__35046 = val;
          var G__35047 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35046, G__35047) : f.call(null, G__35046, G__35047);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__35056 = nval;
          var G__35057 = n + 1;
          val = G__35056;
          n = G__35057;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__35048 = val__$1;
        var G__35049 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35048, G__35049) : f.call(null, G__35048, G__35049);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__35058 = nval;
        var G__35059 = n + 1;
        val__$1 = G__35058;
        n = G__35059;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__35050 = val__$1;
        var G__35051 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35050, G__35051) : f.call(null, G__35050, G__35051);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__35060 = nval;
        var G__35061 = n + 1;
        val__$1 = G__35060;
        n = G__35061;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args35062 = [];
  var len__27315__auto___35071 = arguments.length;
  var i__27316__auto___35072 = 0;
  while (true) {
    if (i__27316__auto___35072 < len__27315__auto___35071) {
      args35062.push(arguments[i__27316__auto___35072]);
      var G__35073 = i__27316__auto___35072 + 1;
      i__27316__auto___35072 = G__35073;
      continue;
    } else {
    }
    break;
  }
  var G__35064 = args35062.length;
  switch(G__35064) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35062.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__35065 = val;
          var G__35066 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35065, G__35066) : f.call(null, G__35065, G__35066);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__35075 = nval;
          var G__35076 = n + 1;
          val = G__35075;
          n = G__35076;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__35067 = val__$1;
        var G__35068 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35067, G__35068) : f.call(null, G__35067, G__35068);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__35077 = nval;
        var G__35078 = n + 1;
        val__$1 = G__35077;
        n = G__35078;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__35069 = val__$1;
        var G__35070 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35069, G__35070) : f.call(null, G__35069, G__35070);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__35079 = nval;
        var G__35080 = n + 1;
        val__$1 = G__35079;
        n = G__35080;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args35085 = [];
  var len__27315__auto___35088 = arguments.length;
  var i__27316__auto___35089 = 0;
  while (true) {
    if (i__27316__auto___35089 < len__27315__auto___35088) {
      args35085.push(arguments[i__27316__auto___35089]);
      var G__35090 = i__27316__auto___35089 + 1;
      i__27316__auto___35089 = G__35090;
      continue;
    } else {
    }
    break;
  }
  var G__35087 = args35085.length;
  switch(G__35087) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35085.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__26571__auto__ = 0;
      var y__26572__auto__ = start + len;
      return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__35092 = idx + 1;
          idx = G__35092;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args35093 = [];
  var len__27315__auto___35096 = arguments.length;
  var i__27316__auto___35097 = 0;
  while (true) {
    if (i__27316__auto___35097 < len__27315__auto___35096) {
      args35093.push(arguments[i__27316__auto___35097]);
      var G__35098 = i__27316__auto___35097 + 1;
      i__27316__auto___35097 = G__35098;
      continue;
    } else {
    }
    break;
  }
  var G__35095 = args35093.length;
  switch(G__35095) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35093.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__26578__auto__ = len - 1;
      var y__26579__auto__ = start;
      return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__35100 = idx - 1;
          idx = G__35100;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__35101 = null;
  var G__35101__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35101__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35101 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35101__1.call(this, x);
      case 2:
        return G__35101__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35101.cljs$core$IFn$_invoke$arity$1 = G__35101__1;
  G__35101.cljs$core$IFn$_invoke$arity$2 = G__35101__2;
  return G__35101;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__35102 = null;
  var G__35102__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__35102__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35102 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35102__1.call(this, x);
      case 2:
        return G__35102__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35102.cljs$core$IFn$_invoke$arity$1 = G__35102__1;
  G__35102.cljs$core$IFn$_invoke$arity$2 = G__35102__2;
  return G__35102;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__26571__auto__ = 0;
  var y__26572__auto__ = self__.arr.length - self__.i;
  return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args35103 = [];
  var len__27315__auto___35106 = arguments.length;
  var i__27316__auto___35107 = 0;
  while (true) {
    if (i__27316__auto___35107 < len__27315__auto___35106) {
      args35103.push(arguments[i__27316__auto___35107]);
      var G__35108 = i__27316__auto___35107 + 1;
      i__27316__auto___35107 = G__35108;
      continue;
    } else {
    }
    break;
  }
  var G__35105 = args35103.length;
  switch(G__35105) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35103.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args35110 = [];
  var len__27315__auto___35113 = arguments.length;
  var i__27316__auto___35114 = 0;
  while (true) {
    if (i__27316__auto___35114 < len__27315__auto___35113) {
      args35110.push(arguments[i__27316__auto___35114]);
      var G__35115 = i__27316__auto___35114 + 1;
      i__27316__auto___35114 = G__35115;
      continue;
    } else {
    }
    break;
  }
  var G__35112 = args35110.length;
  switch(G__35112) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35110.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__35119 = null;
  var G__35119__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35119__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35119 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35119__1.call(this, x);
      case 2:
        return G__35119__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35119.cljs$core$IFn$_invoke$arity$1 = G__35119__1;
  G__35119.cljs$core$IFn$_invoke$arity$2 = G__35119__2;
  return G__35119;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__35120 = null;
  var G__35120__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__35120__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35120 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35120__1.call(this, x);
      case 2:
        return G__35120__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35120.cljs$core$IFn$_invoke$arity$1 = G__35120__1;
  G__35120.cljs$core$IFn$_invoke$arity$2 = G__35120__2;
  return G__35120;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__35117 = cljs.core.List.EMPTY;
  var G__35118 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__35117, G__35118) : cljs.core.with_meta.call(null, G__35117, G__35118);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__35121 = sn;
      s = G__35121;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args35122 = [];
  var len__27315__auto___35128 = arguments.length;
  var i__27316__auto___35129 = 0;
  while (true) {
    if (i__27316__auto___35129 < len__27315__auto___35128) {
      args35122.push(arguments[i__27316__auto___35129]);
      var G__35130 = i__27316__auto___35129 + 1;
      i__27316__auto___35129 = G__35130;
      continue;
    } else {
    }
    break;
  }
  var G__35127 = args35122.length;
  switch(G__35127) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35122.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    var x__27074__auto__ = x;
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__35132 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__35133 = cljs.core.first(xs);
      var G__35134 = cljs.core.next(xs);
      coll = G__35132;
      x = G__35133;
      xs = G__35134;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq35123) {
  var G__35124 = cljs.core.first(seq35123);
  var seq35123__$1 = cljs.core.next(seq35123);
  var G__35125 = cljs.core.first(seq35123__$1);
  var seq35123__$2 = cljs.core.next(seq35123__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__35124, G__35125, seq35123__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__35135 = cljs.core.next(s);
      var G__35136 = acc + 1;
      s = G__35135;
      acc = G__35136;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args35141 = [];
  var len__27315__auto___35144 = arguments.length;
  var i__27316__auto___35145 = 0;
  while (true) {
    if (i__27316__auto___35145 < len__27315__auto___35144) {
      args35141.push(arguments[i__27316__auto___35145]);
      var G__35146 = i__27316__auto___35145 + 1;
      i__27316__auto___35145 = G__35146;
      continue;
    } else {
    }
    break;
  }
  var G__35143 = args35141.length;
  switch(G__35143) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35141.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__35148 = cljs.core.next(coll);
            var G__35149 = n - 1;
            coll = G__35148;
            n = G__35149;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__35150 = cljs.core.next(coll);
            var G__35151 = n - 1;
            var G__35152 = not_found;
            coll = G__35150;
            n = G__35151;
            not_found = G__35152;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args35153 = [];
  var len__27315__auto___35160 = arguments.length;
  var i__27316__auto___35161 = 0;
  while (true) {
    if (i__27316__auto___35161 < len__27315__auto___35160) {
      args35153.push(arguments[i__27316__auto___35161]);
      var G__35162 = i__27316__auto___35161 + 1;
      i__27316__auto___35161 = G__35162;
      continue;
    } else {
    }
    break;
  }
  var G__35155 = args35153.length;
  switch(G__35155) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35153.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__35164 = n__$1 - 1;
      var G__35165 = cljs.core.rest(xs);
      n__$1 = G__35164;
      xs = G__35165;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args35166 = [];
  var len__27315__auto___35171 = arguments.length;
  var i__27316__auto___35172 = 0;
  while (true) {
    if (i__27316__auto___35172 < len__27315__auto___35171) {
      args35166.push(arguments[i__27316__auto___35172]);
      var G__35173 = i__27316__auto___35172 + 1;
      i__27316__auto___35172 = G__35173;
      continue;
    } else {
    }
    break;
  }
  var G__35168 = args35166.length;
  switch(G__35168) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35166.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args35175 = [];
  var len__27315__auto___35182 = arguments.length;
  var i__27316__auto___35183 = 0;
  while (true) {
    if (i__27316__auto___35183 < len__27315__auto___35182) {
      args35175.push(arguments[i__27316__auto___35183]);
      var G__35184 = i__27316__auto___35183 + 1;
      i__27316__auto___35183 = G__35184;
      continue;
    } else {
    }
    break;
  }
  var G__35181 = args35175.length;
  switch(G__35181) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35175.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__35186 = ret;
      var G__35187 = cljs.core.first(kvs);
      var G__35188 = cljs.core.second(kvs);
      var G__35189 = cljs.core.nnext(kvs);
      coll = G__35186;
      k = G__35187;
      v = G__35188;
      kvs = G__35189;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq35176) {
  var G__35177 = cljs.core.first(seq35176);
  var seq35176__$1 = cljs.core.next(seq35176);
  var G__35178 = cljs.core.first(seq35176__$1);
  var seq35176__$2 = cljs.core.next(seq35176__$1);
  var G__35179 = cljs.core.first(seq35176__$2);
  var seq35176__$3 = cljs.core.next(seq35176__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__35177, G__35178, G__35179, seq35176__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args35190 = [];
  var len__27315__auto___35196 = arguments.length;
  var i__27316__auto___35197 = 0;
  while (true) {
    if (i__27316__auto___35197 < len__27315__auto___35196) {
      args35190.push(arguments[i__27316__auto___35197]);
      var G__35198 = i__27316__auto___35197 + 1;
      i__27316__auto___35197 = G__35198;
      continue;
    } else {
    }
    break;
  }
  var G__35195 = args35190.length;
  switch(G__35195) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35190.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__35200 = ret;
        var G__35201 = cljs.core.first(ks);
        var G__35202 = cljs.core.next(ks);
        coll = G__35200;
        k = G__35201;
        ks = G__35202;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq35191) {
  var G__35192 = cljs.core.first(seq35191);
  var seq35191__$1 = cljs.core.next(seq35191);
  var G__35193 = cljs.core.first(seq35191__$1);
  var seq35191__$2 = cljs.core.next(seq35191__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__35192, G__35193, seq35191__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__26240__auto__ = goog.isFunction(f);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__35208 = null;
  var G__35208__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__35208__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__35208__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__35208__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__35208__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__35208__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__35208__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__35208__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__35208__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__35208__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__35208__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__35208__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__35208__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__35208__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__35208__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__35208__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__35208__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__35208__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__35208__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__35208__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__35208__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__35208__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__35208 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__35208__1.call(this, self__);
      case 2:
        return G__35208__2.call(this, self__, a);
      case 3:
        return G__35208__3.call(this, self__, a, b);
      case 4:
        return G__35208__4.call(this, self__, a, b, c);
      case 5:
        return G__35208__5.call(this, self__, a, b, c, d);
      case 6:
        return G__35208__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__35208__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__35208__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__35208__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__35208__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__35208__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__35208__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__35208__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__35208__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__35208__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__35208__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__35208__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__35208__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__35208__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__35208__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__35208__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__35208__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35208.cljs$core$IFn$_invoke$arity$1 = G__35208__1;
  G__35208.cljs$core$IFn$_invoke$arity$2 = G__35208__2;
  G__35208.cljs$core$IFn$_invoke$arity$3 = G__35208__3;
  G__35208.cljs$core$IFn$_invoke$arity$4 = G__35208__4;
  G__35208.cljs$core$IFn$_invoke$arity$5 = G__35208__5;
  G__35208.cljs$core$IFn$_invoke$arity$6 = G__35208__6;
  G__35208.cljs$core$IFn$_invoke$arity$7 = G__35208__7;
  G__35208.cljs$core$IFn$_invoke$arity$8 = G__35208__8;
  G__35208.cljs$core$IFn$_invoke$arity$9 = G__35208__9;
  G__35208.cljs$core$IFn$_invoke$arity$10 = G__35208__10;
  G__35208.cljs$core$IFn$_invoke$arity$11 = G__35208__11;
  G__35208.cljs$core$IFn$_invoke$arity$12 = G__35208__12;
  G__35208.cljs$core$IFn$_invoke$arity$13 = G__35208__13;
  G__35208.cljs$core$IFn$_invoke$arity$14 = G__35208__14;
  G__35208.cljs$core$IFn$_invoke$arity$15 = G__35208__15;
  G__35208.cljs$core$IFn$_invoke$arity$16 = G__35208__16;
  G__35208.cljs$core$IFn$_invoke$arity$17 = G__35208__17;
  G__35208.cljs$core$IFn$_invoke$arity$18 = G__35208__18;
  G__35208.cljs$core$IFn$_invoke$arity$19 = G__35208__19;
  G__35208.cljs$core$IFn$_invoke$arity$20 = G__35208__20;
  G__35208.cljs$core$IFn$_invoke$arity$21 = G__35208__21;
  G__35208.cljs$core$IFn$_invoke$arity$22 = G__35208__22;
  return G__35208;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args35207) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args35207)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__26228__auto__ = !(o == null);
    if (and__26228__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__26228__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args35213 = [];
  var len__27315__auto___35219 = arguments.length;
  var i__27316__auto___35220 = 0;
  while (true) {
    if (i__27316__auto___35220 < len__27315__auto___35219) {
      args35213.push(arguments[i__27316__auto___35220]);
      var G__35221 = i__27316__auto___35220 + 1;
      i__27316__auto___35220 = G__35221;
      continue;
    } else {
    }
    break;
  }
  var G__35218 = args35213.length;
  switch(G__35218) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35213.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__35223 = ret;
        var G__35224 = cljs.core.first(ks);
        var G__35225 = cljs.core.next(ks);
        coll = G__35223;
        k = G__35224;
        ks = G__35225;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq35214) {
  var G__35215 = cljs.core.first(seq35214);
  var seq35214__$1 = cljs.core.next(seq35214);
  var G__35216 = cljs.core.first(seq35214__$1);
  var seq35214__$2 = cljs.core.next(seq35214__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__35215, G__35216, seq35214__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args35246 = [];
  var len__27315__auto___35252 = arguments.length;
  var i__27316__auto___35253 = 0;
  while (true) {
    if (i__27316__auto___35253 < len__27315__auto___35252) {
      args35246.push(arguments[i__27316__auto___35253]);
      var G__35254 = i__27316__auto___35253 + 1;
      i__27316__auto___35253 = G__35254;
      continue;
    } else {
    }
    break;
  }
  var G__35249 = args35246.length;
  switch(G__35249) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35246.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__27334__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq35247) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35247));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__35258_35260 = obj;
  var G__35259_35261 = function(G__35258_35260, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__35258_35260, keys);
  goog.object.forEach(G__35258_35260, G__35259_35261);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__35262 = i__$1 + 1;
      var G__35263 = j__$1 + 1;
      var G__35264 = len__$1 - 1;
      i__$1 = G__35262;
      j__$1 = G__35263;
      len__$1 = G__35264;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__35265 = i__$1 - 1;
      var G__35266 = j__$1 - 1;
      var G__35267 = len__$1 - 1;
      i__$1 = G__35265;
      j__$1 = G__35266;
      len__$1 = G__35267;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__26240__auto__ = cljs.core.fn_QMARK_(f);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0) || x === 0;
  } else {
    if (x instanceof goog.math.Integer) {
      var or__26240__auto__ = cljs.core.not(x.isNegative());
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        return x.isZero();
      }
    } else {
      if (x instanceof goog.math.Long) {
        var or__26240__auto__ = cljs.core.not(x.isNegative());
        if (or__26240__auto__) {
          return or__26240__auto__;
        } else {
          return x.isZero();
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args35278 = [];
  var len__27315__auto___35284 = arguments.length;
  var i__27316__auto___35285 = 0;
  while (true) {
    if (i__27316__auto___35285 < len__27315__auto___35284) {
      args35278.push(arguments[i__27316__auto___35285]);
      var G__35286 = i__27316__auto___35285 + 1;
      i__27316__auto___35285 = G__35286;
      continue;
    } else {
    }
    break;
  }
  var G__35283 = args35278.length;
  switch(G__35283) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35278.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__35288 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__35289 = etc;
          s = G__35288;
          xs = G__35289;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq35279) {
  var G__35280 = cljs.core.first(seq35279);
  var seq35279__$1 = cljs.core.next(seq35279);
  var G__35281 = cljs.core.first(seq35279__$1);
  var seq35279__$2 = cljs.core.next(seq35279__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__35280, G__35281, seq35279__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args35292 = [];
  var len__27315__auto___35295 = arguments.length;
  var i__27316__auto___35296 = 0;
  while (true) {
    if (i__27316__auto___35296 < len__27315__auto___35295) {
      args35292.push(arguments[i__27316__auto___35296]);
      var G__35297 = i__27316__auto___35296 + 1;
      i__27316__auto___35296 = G__35297;
      continue;
    } else {
    }
    break;
  }
  var G__35294 = args35292.length;
  switch(G__35294) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35292.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__35299 = xs;
      var G__35300 = ys;
      var G__35301 = len;
      var G__35302 = n + 1;
      xs = G__35299;
      ys = G__35300;
      len = G__35301;
      n = G__35302;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args35303 = [];
  var len__27315__auto___35308 = arguments.length;
  var i__27316__auto___35309 = 0;
  while (true) {
    if (i__27316__auto___35309 < len__27315__auto___35308) {
      args35303.push(arguments[i__27316__auto___35309]);
      var G__35310 = i__27316__auto___35309 + 1;
      i__27316__auto___35309 = G__35310;
      continue;
    } else {
    }
    break;
  }
  var G__35305 = args35303.length;
  switch(G__35305) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35303.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__35306_35312 = a;
    var G__35307_35313 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__35306_35312, G__35307_35313);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args35314 = [];
  var len__27315__auto___35317 = arguments.length;
  var i__27316__auto___35318 = 0;
  while (true) {
    if (i__27316__auto___35318 < len__27315__auto___35317) {
      args35314.push(arguments[i__27316__auto___35318]);
      var G__35319 = i__27316__auto___35318 + 1;
      i__27316__auto___35318 = G__35319;
      continue;
    } else {
    }
    break;
  }
  var G__35316 = args35314.length;
  switch(G__35316) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35314.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args35321 = [];
  var len__27315__auto___35329 = arguments.length;
  var i__27316__auto___35330 = 0;
  while (true) {
    if (i__27316__auto___35330 < len__27315__auto___35329) {
      args35321.push(arguments[i__27316__auto___35330]);
      var G__35331 = i__27316__auto___35330 + 1;
      i__27316__auto___35330 = G__35331;
      continue;
    } else {
    }
    break;
  }
  var G__35323 = args35321.length;
  switch(G__35323) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35321.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__35324 = f;
    var G__35325 = cljs.core.first(s);
    var G__35326 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__35324, G__35325, G__35326) : cljs.core.reduce.call(null, G__35324, G__35325, G__35326);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__35327 = val__$1;
        var G__35328 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35327, G__35328) : f.call(null, G__35327, G__35328);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__35333 = nval;
        var G__35334 = cljs.core.next(coll__$1);
        val__$1 = G__35333;
        coll__$1 = G__35334;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args35335 = [];
  var len__27315__auto___35340 = arguments.length;
  var i__27316__auto___35341 = 0;
  while (true) {
    if (i__27316__auto___35341 < len__27315__auto___35340) {
      args35335.push(arguments[i__27316__auto___35341]);
      var G__35342 = i__27316__auto___35341 + 1;
      i__27316__auto___35341 = G__35342;
      continue;
    } else {
    }
    break;
  }
  var G__35337 = args35335.length;
  switch(G__35337) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35335.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args35344 = [];
  var len__27315__auto___35347 = arguments.length;
  var i__27316__auto___35348 = 0;
  while (true) {
    if (i__27316__auto___35348 < len__27315__auto___35347) {
      args35344.push(arguments[i__27316__auto___35348]);
      var G__35349 = i__27316__auto___35348 + 1;
      i__27316__auto___35348 = G__35349;
      continue;
    } else {
    }
    break;
  }
  var G__35346 = args35344.length;
  switch(G__35346) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35344.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__35351 = null;
    var G__35351__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__35351__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__35351__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__35351 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__35351__0.call(this);
        case 1:
          return G__35351__1.call(this, x);
        case 2:
          return G__35351__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__35351.cljs$core$IFn$_invoke$arity$0 = G__35351__0;
    G__35351.cljs$core$IFn$_invoke$arity$1 = G__35351__1;
    G__35351.cljs$core$IFn$_invoke$arity$2 = G__35351__2;
    return G__35351;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args35352 = [];
  var len__27315__auto___35355 = arguments.length;
  var i__27316__auto___35356 = 0;
  while (true) {
    if (i__27316__auto___35356 < len__27315__auto___35355) {
      args35352.push(arguments[i__27316__auto___35356]);
      var G__35357 = i__27316__auto___35356 + 1;
      i__27316__auto___35356 = G__35357;
      continue;
    } else {
    }
    break;
  }
  var G__35354 = args35352.length;
  switch(G__35354) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35352.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args35359 = [];
  var len__27315__auto___35365 = arguments.length;
  var i__27316__auto___35366 = 0;
  while (true) {
    if (i__27316__auto___35366 < len__27315__auto___35365) {
      args35359.push(arguments[i__27316__auto___35366]);
      var G__35367 = i__27316__auto___35366 + 1;
      i__27316__auto___35366 = G__35367;
      continue;
    } else {
    }
    break;
  }
  var G__35364 = args35359.length;
  switch(G__35364) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35359.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq35360) {
  var G__35361 = cljs.core.first(seq35360);
  var seq35360__$1 = cljs.core.next(seq35360);
  var G__35362 = cljs.core.first(seq35360__$1);
  var seq35360__$2 = cljs.core.next(seq35360__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__35361, G__35362, seq35360__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args35369 = [];
  var len__27315__auto___35375 = arguments.length;
  var i__27316__auto___35376 = 0;
  while (true) {
    if (i__27316__auto___35376 < len__27315__auto___35375) {
      args35369.push(arguments[i__27316__auto___35376]);
      var G__35377 = i__27316__auto___35376 + 1;
      i__27316__auto___35376 = G__35377;
      continue;
    } else {
    }
    break;
  }
  var G__35374 = args35369.length;
  switch(G__35374) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35369.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq35370) {
  var G__35371 = cljs.core.first(seq35370);
  var seq35370__$1 = cljs.core.next(seq35370);
  var G__35372 = cljs.core.first(seq35370__$1);
  var seq35370__$2 = cljs.core.next(seq35370__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__35371, G__35372, seq35370__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args35379 = [];
  var len__27315__auto___35385 = arguments.length;
  var i__27316__auto___35386 = 0;
  while (true) {
    if (i__27316__auto___35386 < len__27315__auto___35385) {
      args35379.push(arguments[i__27316__auto___35386]);
      var G__35387 = i__27316__auto___35386 + 1;
      i__27316__auto___35386 = G__35387;
      continue;
    } else {
    }
    break;
  }
  var G__35384 = args35379.length;
  switch(G__35384) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35379.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq35380) {
  var G__35381 = cljs.core.first(seq35380);
  var seq35380__$1 = cljs.core.next(seq35380);
  var G__35382 = cljs.core.first(seq35380__$1);
  var seq35380__$2 = cljs.core.next(seq35380__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__35381, G__35382, seq35380__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args35389 = [];
  var len__27315__auto___35395 = arguments.length;
  var i__27316__auto___35396 = 0;
  while (true) {
    if (i__27316__auto___35396 < len__27315__auto___35395) {
      args35389.push(arguments[i__27316__auto___35396]);
      var G__35397 = i__27316__auto___35396 + 1;
      i__27316__auto___35396 = G__35397;
      continue;
    } else {
    }
    break;
  }
  var G__35394 = args35389.length;
  switch(G__35394) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35389.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq35390) {
  var G__35391 = cljs.core.first(seq35390);
  var seq35390__$1 = cljs.core.next(seq35390);
  var G__35392 = cljs.core.first(seq35390__$1);
  var seq35390__$2 = cljs.core.next(seq35390__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__35391, G__35392, seq35390__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args35399 = [];
  var len__27315__auto___35405 = arguments.length;
  var i__27316__auto___35406 = 0;
  while (true) {
    if (i__27316__auto___35406 < len__27315__auto___35405) {
      args35399.push(arguments[i__27316__auto___35406]);
      var G__35407 = i__27316__auto___35406 + 1;
      i__27316__auto___35406 = G__35407;
      continue;
    } else {
    }
    break;
  }
  var G__35404 = args35399.length;
  switch(G__35404) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35399.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__35409 = y;
        var G__35410 = cljs.core.first(more);
        var G__35411 = cljs.core.next(more);
        x = G__35409;
        y = G__35410;
        more = G__35411;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq35400) {
  var G__35401 = cljs.core.first(seq35400);
  var seq35400__$1 = cljs.core.next(seq35400);
  var G__35402 = cljs.core.first(seq35400__$1);
  var seq35400__$2 = cljs.core.next(seq35400__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__35401, G__35402, seq35400__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args35412 = [];
  var len__27315__auto___35418 = arguments.length;
  var i__27316__auto___35419 = 0;
  while (true) {
    if (i__27316__auto___35419 < len__27315__auto___35418) {
      args35412.push(arguments[i__27316__auto___35419]);
      var G__35420 = i__27316__auto___35419 + 1;
      i__27316__auto___35419 = G__35420;
      continue;
    } else {
    }
    break;
  }
  var G__35417 = args35412.length;
  switch(G__35417) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35412.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__35422 = y;
        var G__35423 = cljs.core.first(more);
        var G__35424 = cljs.core.next(more);
        x = G__35422;
        y = G__35423;
        more = G__35424;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq35413) {
  var G__35414 = cljs.core.first(seq35413);
  var seq35413__$1 = cljs.core.next(seq35413);
  var G__35415 = cljs.core.first(seq35413__$1);
  var seq35413__$2 = cljs.core.next(seq35413__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__35414, G__35415, seq35413__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args35425 = [];
  var len__27315__auto___35431 = arguments.length;
  var i__27316__auto___35432 = 0;
  while (true) {
    if (i__27316__auto___35432 < len__27315__auto___35431) {
      args35425.push(arguments[i__27316__auto___35432]);
      var G__35433 = i__27316__auto___35432 + 1;
      i__27316__auto___35432 = G__35433;
      continue;
    } else {
    }
    break;
  }
  var G__35430 = args35425.length;
  switch(G__35430) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35425.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__35435 = y;
        var G__35436 = cljs.core.first(more);
        var G__35437 = cljs.core.next(more);
        x = G__35435;
        y = G__35436;
        more = G__35437;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq35426) {
  var G__35427 = cljs.core.first(seq35426);
  var seq35426__$1 = cljs.core.next(seq35426);
  var G__35428 = cljs.core.first(seq35426__$1);
  var seq35426__$2 = cljs.core.next(seq35426__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__35427, G__35428, seq35426__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args35438 = [];
  var len__27315__auto___35444 = arguments.length;
  var i__27316__auto___35445 = 0;
  while (true) {
    if (i__27316__auto___35445 < len__27315__auto___35444) {
      args35438.push(arguments[i__27316__auto___35445]);
      var G__35446 = i__27316__auto___35445 + 1;
      i__27316__auto___35445 = G__35446;
      continue;
    } else {
    }
    break;
  }
  var G__35443 = args35438.length;
  switch(G__35443) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35438.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__35448 = y;
        var G__35449 = cljs.core.first(more);
        var G__35450 = cljs.core.next(more);
        x = G__35448;
        y = G__35449;
        more = G__35450;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq35439) {
  var G__35440 = cljs.core.first(seq35439);
  var seq35439__$1 = cljs.core.next(seq35439);
  var G__35441 = cljs.core.first(seq35439__$1);
  var seq35439__$2 = cljs.core.next(seq35439__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__35440, G__35441, seq35439__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args35451 = [];
  var len__27315__auto___35457 = arguments.length;
  var i__27316__auto___35458 = 0;
  while (true) {
    if (i__27316__auto___35458 < len__27315__auto___35457) {
      args35451.push(arguments[i__27316__auto___35458]);
      var G__35459 = i__27316__auto___35458 + 1;
      i__27316__auto___35458 = G__35459;
      continue;
    } else {
    }
    break;
  }
  var G__35456 = args35451.length;
  switch(G__35456) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35451.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__26571__auto__ = x;
  var y__26572__auto__ = y;
  return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__26571__auto__ = x;
    var y__26572__auto__ = y;
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq35452) {
  var G__35453 = cljs.core.first(seq35452);
  var seq35452__$1 = cljs.core.next(seq35452);
  var G__35454 = cljs.core.first(seq35452__$1);
  var seq35452__$2 = cljs.core.next(seq35452__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__35453, G__35454, seq35452__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args35461 = [];
  var len__27315__auto___35467 = arguments.length;
  var i__27316__auto___35468 = 0;
  while (true) {
    if (i__27316__auto___35468 < len__27315__auto___35467) {
      args35461.push(arguments[i__27316__auto___35468]);
      var G__35469 = i__27316__auto___35468 + 1;
      i__27316__auto___35468 = G__35469;
      continue;
    } else {
    }
    break;
  }
  var G__35466 = args35461.length;
  switch(G__35466) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35461.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__26578__auto__ = x;
  var y__26579__auto__ = y;
  return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__26578__auto__ = x;
    var y__26579__auto__ = y;
    return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq35462) {
  var G__35463 = cljs.core.first(seq35462);
  var seq35462__$1 = cljs.core.next(seq35462);
  var G__35464 = cljs.core.first(seq35462__$1);
  var seq35462__$2 = cljs.core.next(seq35462__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__35463, G__35464, seq35462__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args35471 = [];
  var len__27315__auto___35477 = arguments.length;
  var i__27316__auto___35478 = 0;
  while (true) {
    if (i__27316__auto___35478 < len__27315__auto___35477) {
      args35471.push(arguments[i__27316__auto___35478]);
      var G__35479 = i__27316__auto___35478 + 1;
      i__27316__auto___35478 = G__35479;
      continue;
    } else {
    }
    break;
  }
  var G__35476 = args35471.length;
  switch(G__35476) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35471.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq35472) {
  var G__35473 = cljs.core.first(seq35472);
  var seq35472__$1 = cljs.core.next(seq35472);
  var G__35474 = cljs.core.first(seq35472__$1);
  var seq35472__$2 = cljs.core.next(seq35472__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__35473, G__35474, seq35472__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args35481 = [];
  var len__27315__auto___35487 = arguments.length;
  var i__27316__auto___35488 = 0;
  while (true) {
    if (i__27316__auto___35488 < len__27315__auto___35487) {
      args35481.push(arguments[i__27316__auto___35488]);
      var G__35489 = i__27316__auto___35488 + 1;
      i__27316__auto___35488 = G__35489;
      continue;
    } else {
    }
    break;
  }
  var G__35486 = args35481.length;
  switch(G__35486) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35481.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq35482) {
  var G__35483 = cljs.core.first(seq35482);
  var seq35482__$1 = cljs.core.next(seq35482);
  var G__35484 = cljs.core.first(seq35482__$1);
  var seq35482__$2 = cljs.core.next(seq35482__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__35483, G__35484, seq35482__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args35491 = [];
  var len__27315__auto___35497 = arguments.length;
  var i__27316__auto___35498 = 0;
  while (true) {
    if (i__27316__auto___35498 < len__27315__auto___35497) {
      args35491.push(arguments[i__27316__auto___35498]);
      var G__35499 = i__27316__auto___35498 + 1;
      i__27316__auto___35498 = G__35499;
      continue;
    } else {
    }
    break;
  }
  var G__35496 = args35491.length;
  switch(G__35496) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35491.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq35492) {
  var G__35493 = cljs.core.first(seq35492);
  var seq35492__$1 = cljs.core.next(seq35492);
  var G__35494 = cljs.core.first(seq35492__$1);
  var seq35492__$2 = cljs.core.next(seq35492__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__35493, G__35494, seq35492__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args35501 = [];
  var len__27315__auto___35507 = arguments.length;
  var i__27316__auto___35508 = 0;
  while (true) {
    if (i__27316__auto___35508 < len__27315__auto___35507) {
      args35501.push(arguments[i__27316__auto___35508]);
      var G__35509 = i__27316__auto___35508 + 1;
      i__27316__auto___35508 = G__35509;
      continue;
    } else {
    }
    break;
  }
  var G__35506 = args35501.length;
  switch(G__35506) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35501.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq35502) {
  var G__35503 = cljs.core.first(seq35502);
  var seq35502__$1 = cljs.core.next(seq35502);
  var G__35504 = cljs.core.first(seq35502__$1);
  var seq35502__$2 = cljs.core.next(seq35502__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__35503, G__35504, seq35502__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args35511 = [];
  var len__27315__auto___35517 = arguments.length;
  var i__27316__auto___35518 = 0;
  while (true) {
    if (i__27316__auto___35518 < len__27315__auto___35517) {
      args35511.push(arguments[i__27316__auto___35518]);
      var G__35519 = i__27316__auto___35518 + 1;
      i__27316__auto___35518 = G__35519;
      continue;
    } else {
    }
    break;
  }
  var G__35516 = args35511.length;
  switch(G__35516) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35511.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq35512) {
  var G__35513 = cljs.core.first(seq35512);
  var seq35512__$1 = cljs.core.next(seq35512);
  var G__35514 = cljs.core.first(seq35512__$1);
  var seq35512__$2 = cljs.core.next(seq35512__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__35513, G__35514, seq35512__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args35521 = [];
  var len__27315__auto___35527 = arguments.length;
  var i__27316__auto___35528 = 0;
  while (true) {
    if (i__27316__auto___35528 < len__27315__auto___35527) {
      args35521.push(arguments[i__27316__auto___35528]);
      var G__35529 = i__27316__auto___35528 + 1;
      i__27316__auto___35528 = G__35529;
      continue;
    } else {
    }
    break;
  }
  var G__35526 = args35521.length;
  switch(G__35526) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35521.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq35522) {
  var G__35523 = cljs.core.first(seq35522);
  var seq35522__$1 = cljs.core.next(seq35522);
  var G__35524 = cljs.core.first(seq35522__$1);
  var seq35522__$2 = cljs.core.next(seq35522__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__35523, G__35524, seq35522__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args35531 = [];
  var len__27315__auto___35537 = arguments.length;
  var i__27316__auto___35538 = 0;
  while (true) {
    if (i__27316__auto___35538 < len__27315__auto___35537) {
      args35531.push(arguments[i__27316__auto___35538]);
      var G__35539 = i__27316__auto___35538 + 1;
      i__27316__auto___35538 = G__35539;
      continue;
    } else {
    }
    break;
  }
  var G__35536 = args35531.length;
  switch(G__35536) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35531.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq35532) {
  var G__35533 = cljs.core.first(seq35532);
  var seq35532__$1 = cljs.core.next(seq35532);
  var G__35534 = cljs.core.first(seq35532__$1);
  var seq35532__$2 = cljs.core.next(seq35532__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__35533, G__35534, seq35532__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args35541 = [];
  var len__27315__auto___35547 = arguments.length;
  var i__27316__auto___35548 = 0;
  while (true) {
    if (i__27316__auto___35548 < len__27315__auto___35547) {
      args35541.push(arguments[i__27316__auto___35548]);
      var G__35549 = i__27316__auto___35548 + 1;
      i__27316__auto___35548 = G__35549;
      continue;
    } else {
    }
    break;
  }
  var G__35546 = args35541.length;
  switch(G__35546) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35541.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq35542) {
  var G__35543 = cljs.core.first(seq35542);
  var seq35542__$1 = cljs.core.next(seq35542);
  var G__35544 = cljs.core.first(seq35542__$1);
  var seq35542__$2 = cljs.core.next(seq35542__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__35543, G__35544, seq35542__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args35551 = [];
  var len__27315__auto___35557 = arguments.length;
  var i__27316__auto___35558 = 0;
  while (true) {
    if (i__27316__auto___35558 < len__27315__auto___35557) {
      args35551.push(arguments[i__27316__auto___35558]);
      var G__35559 = i__27316__auto___35558 + 1;
      i__27316__auto___35558 = G__35559;
      continue;
    } else {
    }
    break;
  }
  var G__35556 = args35551.length;
  switch(G__35556) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35551.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq35552) {
  var G__35553 = cljs.core.first(seq35552);
  var seq35552__$1 = cljs.core.next(seq35552);
  var G__35554 = cljs.core.first(seq35552__$1);
  var seq35552__$2 = cljs.core.next(seq35552__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__35553, G__35554, seq35552__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args35561 = [];
  var len__27315__auto___35567 = arguments.length;
  var i__27316__auto___35568 = 0;
  while (true) {
    if (i__27316__auto___35568 < len__27315__auto___35567) {
      args35561.push(arguments[i__27316__auto___35568]);
      var G__35569 = i__27316__auto___35568 + 1;
      i__27316__auto___35568 = G__35569;
      continue;
    } else {
    }
    break;
  }
  var G__35566 = args35561.length;
  switch(G__35566) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35561.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq35562) {
  var G__35563 = cljs.core.first(seq35562);
  var seq35562__$1 = cljs.core.next(seq35562);
  var G__35564 = cljs.core.first(seq35562__$1);
  var seq35562__$2 = cljs.core.next(seq35562__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__35563, G__35564, seq35562__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args35571 = [];
  var len__27315__auto___35577 = arguments.length;
  var i__27316__auto___35578 = 0;
  while (true) {
    if (i__27316__auto___35578 < len__27315__auto___35577) {
      args35571.push(arguments[i__27316__auto___35578]);
      var G__35579 = i__27316__auto___35578 + 1;
      i__27316__auto___35578 = G__35579;
      continue;
    } else {
    }
    break;
  }
  var G__35576 = args35571.length;
  switch(G__35576) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35571.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq35572) {
  var G__35573 = cljs.core.first(seq35572);
  var seq35572__$1 = cljs.core.next(seq35572);
  var G__35574 = cljs.core.first(seq35572__$1);
  var seq35572__$2 = cljs.core.next(seq35572__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__35573, G__35574, seq35572__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args35581 = [];
  var len__27315__auto___35587 = arguments.length;
  var i__27316__auto___35588 = 0;
  while (true) {
    if (i__27316__auto___35588 < len__27315__auto___35587) {
      args35581.push(arguments[i__27316__auto___35588]);
      var G__35589 = i__27316__auto___35588 + 1;
      i__27316__auto___35588 = G__35589;
      continue;
    } else {
    }
    break;
  }
  var G__35586 = args35581.length;
  switch(G__35586) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35581.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__35591 = y;
        var G__35592 = cljs.core.first(more);
        var G__35593 = cljs.core.next(more);
        x = G__35591;
        y = G__35592;
        more = G__35593;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq35582) {
  var G__35583 = cljs.core.first(seq35582);
  var seq35582__$1 = cljs.core.next(seq35582);
  var G__35584 = cljs.core.first(seq35582__$1);
  var seq35582__$2 = cljs.core.next(seq35582__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__35583, G__35584, seq35582__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__35594 = n__$1 - 1;
      var G__35595 = cljs.core.next(xs);
      n__$1 = G__35594;
      xs = G__35595;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args35596 = [];
  var len__27315__auto___35601 = arguments.length;
  var i__27316__auto___35602 = 0;
  while (true) {
    if (i__27316__auto___35602 < len__27315__auto___35601) {
      args35596.push(arguments[i__27316__auto___35602]);
      var G__35603 = i__27316__auto___35602 + 1;
      i__27316__auto___35602 = G__35603;
      continue;
    } else {
    }
    break;
  }
  var G__35600 = args35596.length;
  switch(G__35600) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35596.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__35605 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__35606 = cljs.core.next(more);
      sb = G__35605;
      more = G__35606;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq35597) {
  var G__35598 = cljs.core.first(seq35597);
  var seq35597__$1 = cljs.core.next(seq35597);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__35598, seq35597__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args35607 = [];
  var len__27315__auto___35610 = arguments.length;
  var i__27316__auto___35611 = 0;
  while (true) {
    if (i__27316__auto___35611 < len__27315__auto___35610) {
      args35607.push(arguments[i__27316__auto___35611]);
      var G__35612 = i__27316__auto___35611 + 1;
      i__27316__auto___35611 = G__35612;
      continue;
    } else {
    }
    break;
  }
  var G__35609 = args35607.length;
  switch(G__35609) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35607.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__35614 = cljs.core.next(xs);
            var G__35615 = cljs.core.next(ys);
            xs = G__35614;
            ys = G__35615;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__35616 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__35617 = cljs.core.next(s);
        res = G__35616;
        s = G__35617;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__35618 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__35619 = cljs.core.next(s);
      h = G__35618;
      s = G__35619;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__35620 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__35621 = cljs.core.next(s__$1);
      h = G__35620;
      s__$1 = G__35621;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__35632_35642 = cljs.core.seq(fn_map);
  var chunk__35633_35643 = null;
  var count__35634_35644 = 0;
  var i__35635_35645 = 0;
  while (true) {
    if (i__35635_35645 < count__35634_35644) {
      var vec__35636_35646 = chunk__35633_35643.cljs$core$IIndexed$_nth$arity$2(null, i__35635_35645);
      var key_name_35647 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35636_35646, 0, null);
      var f_35648 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35636_35646, 1, null);
      var str_name_35649 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_35647) : cljs.core.name.call(null, key_name_35647);
      obj[str_name_35649] = f_35648;
      var G__35650 = seq__35632_35642;
      var G__35651 = chunk__35633_35643;
      var G__35652 = count__35634_35644;
      var G__35653 = i__35635_35645 + 1;
      seq__35632_35642 = G__35650;
      chunk__35633_35643 = G__35651;
      count__35634_35644 = G__35652;
      i__35635_35645 = G__35653;
      continue;
    } else {
      var temp__4657__auto___35654 = cljs.core.seq(seq__35632_35642);
      if (temp__4657__auto___35654) {
        var seq__35632_35655__$1 = temp__4657__auto___35654;
        if (cljs.core.chunked_seq_QMARK_(seq__35632_35655__$1)) {
          var c__27051__auto___35656 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__35632_35655__$1) : cljs.core.chunk_first.call(null, seq__35632_35655__$1);
          var G__35657 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__35632_35655__$1) : cljs.core.chunk_rest.call(null, seq__35632_35655__$1);
          var G__35658 = c__27051__auto___35656;
          var G__35659 = cljs.core.count(c__27051__auto___35656);
          var G__35660 = 0;
          seq__35632_35642 = G__35657;
          chunk__35633_35643 = G__35658;
          count__35634_35644 = G__35659;
          i__35635_35645 = G__35660;
          continue;
        } else {
          var vec__35639_35661 = cljs.core.first(seq__35632_35655__$1);
          var key_name_35662 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35639_35661, 0, null);
          var f_35663 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35639_35661, 1, null);
          var str_name_35664 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_35662) : cljs.core.name.call(null, key_name_35662);
          obj[str_name_35664] = f_35663;
          var G__35665 = cljs.core.next(seq__35632_35655__$1);
          var G__35666 = null;
          var G__35667 = 0;
          var G__35668 = 0;
          seq__35632_35642 = G__35665;
          chunk__35633_35643 = G__35666;
          count__35634_35644 = G__35667;
          i__35635_35645 = G__35668;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__35669 = null;
  var G__35669__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35669__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35669 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35669__1.call(this, x);
      case 2:
        return G__35669__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35669.cljs$core$IFn$_invoke$arity$1 = G__35669__1;
  G__35669.cljs$core$IFn$_invoke$arity$2 = G__35669__2;
  return G__35669;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__35670 = null;
  var G__35670__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__35670__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35670 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35670__1.call(this, x);
      case 2:
        return G__35670__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35670.cljs$core$IFn$_invoke$arity$1 = G__35670__1;
  G__35670.cljs$core$IFn$_invoke$arity$2 = G__35670__2;
  return G__35670;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__35673 = null;
  var G__35673__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35673__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35673 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35673__1.call(this, x);
      case 2:
        return G__35673__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35673.cljs$core$IFn$_invoke$arity$1 = G__35673__1;
  G__35673.cljs$core$IFn$_invoke$arity$2 = G__35673__2;
  return G__35673;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__35674 = null;
  var G__35674__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__35674__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35674 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35674__1.call(this, x);
      case 2:
        return G__35674__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35674.cljs$core$IFn$_invoke$arity$1 = G__35674__1;
  G__35674.cljs$core$IFn$_invoke$arity$2 = G__35674__2;
  return G__35674;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___35678 = arguments.length;
  var i__27316__auto___35679 = 0;
  while (true) {
    if (i__27316__auto___35679 < len__27315__auto___35678) {
      args__27322__auto__.push(arguments[i__27316__auto___35679]);
      var G__35680 = i__27316__auto___35679 + 1;
      i__27316__auto___35679 = G__35680;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__35681 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__35681;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__35682 = i - 1;
      var G__35683 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__35682;
      r = G__35683;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq35677) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35677));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__35684 = null;
  var G__35684__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35684__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35684 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35684__1.call(this, x);
      case 2:
        return G__35684__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35684.cljs$core$IFn$_invoke$arity$1 = G__35684__1;
  G__35684.cljs$core$IFn$_invoke$arity$2 = G__35684__2;
  return G__35684;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__35685 = null;
  var G__35685__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__35685__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35685 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35685__1.call(this, x);
      case 2:
        return G__35685__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35685.cljs$core$IFn$_invoke$arity$1 = G__35685__1;
  G__35685.cljs$core$IFn$_invoke$arity$2 = G__35685__2;
  return G__35685;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__26240__auto__ = coll == null;
    if (or__26240__auto__) {
      return or__26240__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = cljs.core.not(a.ns);
      if (and__26228__auto__) {
        return b.ns;
      } else {
        return and__26228__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__35696 = a.ns;
            var G__35697 = b.ns;
            return goog.array.defaultCompare(G__35696, G__35697);
          }();
          if (0 === nsc) {
            var G__35698 = a.name;
            var G__35699 = b.name;
            return goog.array.defaultCompare(G__35698, G__35699);
          } else {
            return nsc;
          }
        }
      } else {
        var G__35700 = a.name;
        var G__35701 = b.name;
        return goog.array.defaultCompare(G__35700, G__35701);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__35703 = null;
  var G__35703__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__35703__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__35703 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__35703__2.call(this, self__, coll);
      case 3:
        return G__35703__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35703.cljs$core$IFn$_invoke$arity$2 = G__35703__2;
  G__35703.cljs$core$IFn$_invoke$arity$3 = G__35703__3;
  return G__35703;
}();
cljs.core.Keyword.prototype.apply = function(self__, args35702) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args35702)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__26675__auto__ = self__._hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  var and__26228__auto__ = cljs.core.ident_QMARK_(x);
  if (and__26228__auto__) {
    var and__26228__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__26228__auto____$1)) {
      return true;
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  var and__26228__auto__ = x instanceof cljs.core.Symbol;
  if (and__26228__auto__) {
    var and__26228__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__26228__auto____$1)) {
      return true;
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  var and__26228__auto__ = x instanceof cljs.core.Keyword;
  if (and__26228__auto__) {
    var and__26228__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__26228__auto____$1)) {
      return true;
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args35706 = [];
  var len__27315__auto___35709 = arguments.length;
  var i__27316__auto___35710 = 0;
  while (true) {
    if (i__27316__auto___35710 < len__27315__auto___35709) {
      args35706.push(arguments[i__27316__auto___35710]);
      var G__35711 = i__27316__auto___35710 + 1;
      i__27316__auto___35710 = G__35711;
      continue;
    } else {
    }
    break;
  }
  var G__35708 = args35706.length;
  switch(G__35708) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35706.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__35713 = null;
  var G__35713__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35713__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35713 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35713__1.call(this, x);
      case 2:
        return G__35713__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35713.cljs$core$IFn$_invoke$arity$1 = G__35713__1;
  G__35713.cljs$core$IFn$_invoke$arity$2 = G__35713__2;
  return G__35713;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__35714 = null;
  var G__35714__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__35714__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35714 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35714__1.call(this, x);
      case 2:
        return G__35714__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35714.cljs$core$IFn$_invoke$arity$1 = G__35714__1;
  G__35714.cljs$core$IFn$_invoke$arity$2 = G__35714__2;
  return G__35714;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__35715 = ls.sval();
        ls = G__35715;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args35716 = [];
  var len__27315__auto___35719 = arguments.length;
  var i__27316__auto___35720 = 0;
  while (true) {
    if (i__27316__auto___35720 < len__27315__auto___35719) {
      args35716.push(arguments[i__27316__auto___35720]);
      var G__35721 = i__27316__auto___35720 + 1;
      i__27316__auto___35720 = G__35721;
      continue;
    } else {
    }
    break;
  }
  var G__35718 = args35716.length;
  switch(G__35718) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35716.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__35723 = null;
  var G__35723__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35723__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35723 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35723__1.call(this, x);
      case 2:
        return G__35723__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35723.cljs$core$IFn$_invoke$arity$1 = G__35723__1;
  G__35723.cljs$core$IFn$_invoke$arity$2 = G__35723__2;
  return G__35723;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__35724 = null;
  var G__35724__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__35724__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35724 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35724__1.call(this, x);
      case 2:
        return G__35724__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35724.cljs$core$IFn$_invoke$arity$1 = G__35724__1;
  G__35724.cljs$core$IFn$_invoke$arity$2 = G__35724__2;
  return G__35724;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__35727 = cljs.core.next(s__$1);
      s__$1 = G__35727;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_35728 = 0;
  var xs_35729 = cljs.core.seq(coll);
  while (true) {
    if (xs_35729) {
      ret[i_35728] = cljs.core.to_array(cljs.core.first(xs_35729));
      var G__35730 = i_35728 + 1;
      var G__35731 = cljs.core.next(xs_35729);
      i_35728 = G__35730;
      xs_35729 = G__35731;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args35732 = [];
  var len__27315__auto___35735 = arguments.length;
  var i__27316__auto___35736 = 0;
  while (true) {
    if (i__27316__auto___35736 < len__27315__auto___35735) {
      args35732.push(arguments[i__27316__auto___35736]);
      var G__35737 = i__27316__auto___35736 + 1;
      i__27316__auto___35736 = G__35737;
      continue;
    } else {
    }
    break;
  }
  var G__35734 = args35732.length;
  switch(G__35734) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35732.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__35739 = i + 1;
        var G__35740 = cljs.core.next(s__$1);
        i = G__35739;
        s__$1 = G__35740;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___35741 = size;
    var i_35742 = 0;
    while (true) {
      if (i_35742 < n__27155__auto___35741) {
        a[i_35742] = init_val_or_seq;
        var G__35743 = i_35742 + 1;
        i_35742 = G__35743;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args35744 = [];
  var len__27315__auto___35747 = arguments.length;
  var i__27316__auto___35748 = 0;
  while (true) {
    if (i__27316__auto___35748 < len__27315__auto___35747) {
      args35744.push(arguments[i__27316__auto___35748]);
      var G__35749 = i__27316__auto___35748 + 1;
      i__27316__auto___35748 = G__35749;
      continue;
    } else {
    }
    break;
  }
  var G__35746 = args35744.length;
  switch(G__35746) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35744.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__35751 = i + 1;
        var G__35752 = cljs.core.next(s__$1);
        i = G__35751;
        s__$1 = G__35752;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___35753 = size;
    var i_35754 = 0;
    while (true) {
      if (i_35754 < n__27155__auto___35753) {
        a[i_35754] = init_val_or_seq;
        var G__35755 = i_35754 + 1;
        i_35754 = G__35755;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args35756 = [];
  var len__27315__auto___35759 = arguments.length;
  var i__27316__auto___35760 = 0;
  while (true) {
    if (i__27316__auto___35760 < len__27315__auto___35759) {
      args35756.push(arguments[i__27316__auto___35760]);
      var G__35761 = i__27316__auto___35760 + 1;
      i__27316__auto___35760 = G__35761;
      continue;
    } else {
    }
    break;
  }
  var G__35758 = args35756.length;
  switch(G__35758) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35756.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__35763 = i + 1;
        var G__35764 = cljs.core.next(s__$1);
        i = G__35763;
        s__$1 = G__35764;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___35765 = size;
    var i_35766 = 0;
    while (true) {
      if (i_35766 < n__27155__auto___35765) {
        a[i_35766] = init_val_or_seq;
        var G__35767 = i_35766 + 1;
        i_35766 = G__35767;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args35768 = [];
  var len__27315__auto___35771 = arguments.length;
  var i__27316__auto___35772 = 0;
  while (true) {
    if (i__27316__auto___35772 < len__27315__auto___35771) {
      args35768.push(arguments[i__27316__auto___35772]);
      var G__35773 = i__27316__auto___35772 + 1;
      i__27316__auto___35772 = G__35773;
      continue;
    } else {
    }
    break;
  }
  var G__35770 = args35768.length;
  switch(G__35770) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35768.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__35775 = i + 1;
        var G__35776 = cljs.core.next(s__$1);
        i = G__35775;
        s__$1 = G__35776;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___35777 = size;
    var i_35778 = 0;
    while (true) {
      if (i_35778 < n__27155__auto___35777) {
        a[i_35778] = init_val_or_seq;
        var G__35779 = i_35778 + 1;
        i_35778 = G__35779;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__35780 = i + 1;
        var G__35781 = cljs.core.next(s);
        i = G__35780;
        s = G__35781;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args35783 = [];
  var len__27315__auto___35795 = arguments.length;
  var i__27316__auto___35796 = 0;
  while (true) {
    if (i__27316__auto___35796 < len__27315__auto___35795) {
      args35783.push(arguments[i__27316__auto___35796]);
      var G__35797 = i__27316__auto___35796 + 1;
      i__27316__auto___35796 = G__35797;
      continue;
    } else {
    }
    break;
  }
  var G__35788 = args35783.length;
  switch(G__35788) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35783.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq35784) {
  var G__35785 = cljs.core.first(seq35784);
  var seq35784__$1 = cljs.core.next(seq35784);
  var G__35786 = cljs.core.first(seq35784__$1);
  var seq35784__$2 = cljs.core.next(seq35784__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__35785, G__35786, seq35784__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args35799 = [];
  var len__27315__auto___35807 = arguments.length;
  var i__27316__auto___35808 = 0;
  while (true) {
    if (i__27316__auto___35808 < len__27315__auto___35807) {
      args35799.push(arguments[i__27316__auto___35808]);
      var G__35809 = i__27316__auto___35808 + 1;
      i__27316__auto___35808 = G__35809;
      continue;
    } else {
    }
    break;
  }
  var G__35806 = args35799.length;
  switch(G__35806) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35799.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq35800) {
  var G__35801 = cljs.core.first(seq35800);
  var seq35800__$1 = cljs.core.next(seq35800);
  var G__35802 = cljs.core.first(seq35800__$1);
  var seq35800__$2 = cljs.core.next(seq35800__$1);
  var G__35803 = cljs.core.first(seq35800__$2);
  var seq35800__$3 = cljs.core.next(seq35800__$2);
  var G__35804 = cljs.core.first(seq35800__$3);
  var seq35800__$4 = cljs.core.next(seq35800__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__35801, G__35802, G__35803, G__35804, seq35800__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args35811 = [];
  var len__27315__auto___35817 = arguments.length;
  var i__27316__auto___35818 = 0;
  while (true) {
    if (i__27316__auto___35818 < len__27315__auto___35817) {
      args35811.push(arguments[i__27316__auto___35818]);
      var G__35819 = i__27316__auto___35818 + 1;
      i__27316__auto___35818 = G__35819;
      continue;
    } else {
    }
    break;
  }
  var G__35816 = args35811.length;
  switch(G__35816) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35811.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__35821 = ntcoll;
      var G__35822 = cljs.core.first(vals);
      var G__35823 = cljs.core.next(vals);
      tcoll = G__35821;
      val = G__35822;
      vals = G__35823;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq35812) {
  var G__35813 = cljs.core.first(seq35812);
  var seq35812__$1 = cljs.core.next(seq35812);
  var G__35814 = cljs.core.first(seq35812__$1);
  var seq35812__$2 = cljs.core.next(seq35812__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__35813, G__35814, seq35812__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args35824 = [];
  var len__27315__auto___35831 = arguments.length;
  var i__27316__auto___35832 = 0;
  while (true) {
    if (i__27316__auto___35832 < len__27315__auto___35831) {
      args35824.push(arguments[i__27316__auto___35832]);
      var G__35833 = i__27316__auto___35832 + 1;
      i__27316__auto___35832 = G__35833;
      continue;
    } else {
    }
    break;
  }
  var G__35830 = args35824.length;
  switch(G__35830) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35824.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__35835 = ntcoll;
      var G__35836 = cljs.core.first(kvs);
      var G__35837 = cljs.core.second(kvs);
      var G__35838 = cljs.core.nnext(kvs);
      tcoll = G__35835;
      key = G__35836;
      val = G__35837;
      kvs = G__35838;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq35825) {
  var G__35826 = cljs.core.first(seq35825);
  var seq35825__$1 = cljs.core.next(seq35825);
  var G__35827 = cljs.core.first(seq35825__$1);
  var seq35825__$2 = cljs.core.next(seq35825__$1);
  var G__35828 = cljs.core.first(seq35825__$2);
  var seq35825__$3 = cljs.core.next(seq35825__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__35826, G__35827, G__35828, seq35825__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args35839 = [];
  var len__27315__auto___35845 = arguments.length;
  var i__27316__auto___35846 = 0;
  while (true) {
    if (i__27316__auto___35846 < len__27315__auto___35845) {
      args35839.push(arguments[i__27316__auto___35846]);
      var G__35847 = i__27316__auto___35846 + 1;
      i__27316__auto___35846 = G__35847;
      continue;
    } else {
    }
    break;
  }
  var G__35844 = args35839.length;
  switch(G__35844) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35839.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__35849 = ntcoll;
      var G__35850 = cljs.core.first(ks);
      var G__35851 = cljs.core.next(ks);
      tcoll = G__35849;
      key = G__35850;
      ks = G__35851;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq35840) {
  var G__35841 = cljs.core.first(seq35840);
  var seq35840__$1 = cljs.core.next(seq35840);
  var G__35842 = cljs.core.first(seq35840__$1);
  var seq35840__$2 = cljs.core.next(seq35840__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__35841, G__35842, seq35840__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args35852 = [];
  var len__27315__auto___35858 = arguments.length;
  var i__27316__auto___35859 = 0;
  while (true) {
    if (i__27316__auto___35859 < len__27315__auto___35858) {
      args35852.push(arguments[i__27316__auto___35859]);
      var G__35860 = i__27316__auto___35859 + 1;
      i__27316__auto___35859 = G__35860;
      continue;
    } else {
    }
    break;
  }
  var G__35857 = args35852.length;
  switch(G__35857) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35852.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__35862 = ntcoll;
      var G__35863 = cljs.core.first(vals);
      var G__35864 = cljs.core.next(vals);
      tcoll = G__35862;
      val = G__35863;
      vals = G__35864;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq35853) {
  var G__35854 = cljs.core.first(seq35853);
  var seq35853__$1 = cljs.core.next(seq35853);
  var G__35855 = cljs.core.first(seq35853__$1);
  var seq35853__$2 = cljs.core.next(seq35853__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__35854, G__35855, seq35853__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a27199 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a27199);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a27199) : f.call(null, a27199);
      }
    } else {
      var b27200 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a27199, b27200);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a27199, b27200) : f.call(null, a27199, b27200);
        }
      } else {
        var c27201 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a27199, b27200, c27201);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a27199, b27200, c27201) : f.call(null, a27199, b27200, c27201);
          }
        } else {
          var d27202 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a27199, b27200, c27201, d27202);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a27199, b27200, c27201, d27202) : f.call(null, a27199, b27200, c27201, d27202);
            }
          } else {
            var e27203 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a27199, b27200, c27201, d27202, e27203);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a27199, b27200, c27201, d27202, e27203) : f.call(null, a27199, b27200, c27201, d27202, e27203);
              }
            } else {
              var f27204 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a27199, b27200, c27201, d27202, e27203, f27204);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a27199, b27200, c27201, d27202, e27203, f27204) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204);
                }
              } else {
                var g27205 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a27199, b27200, c27201, d27202, e27203, f27204, g27205);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a27199, b27200, c27201, d27202, e27203, f27204, g27205) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205);
                  }
                } else {
                  var h27206 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206);
                    }
                  } else {
                    var i27207 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207);
                      }
                    } else {
                      var j27208 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208);
                        }
                      } else {
                        var k27209 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209);
                          }
                        } else {
                          var l27210 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210);
                            }
                          } else {
                            var m27211 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211);
                              }
                            } else {
                              var n27212 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212);
                                }
                              } else {
                                var o27213 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213);
                                  }
                                } else {
                                  var p27214 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214);
                                    }
                                  } else {
                                    var q27215 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215);
                                      }
                                    } else {
                                      var r27216 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216);
                                        }
                                      } else {
                                        var s27217 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217);
                                          }
                                        } else {
                                          var t27218 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217, t27218);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217, t27218) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217, t27218);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args35865 = [];
  var len__27315__auto___35874 = arguments.length;
  var i__27316__auto___35875 = 0;
  while (true) {
    if (i__27316__auto___35875 < len__27315__auto___35874) {
      args35865.push(arguments[i__27316__auto___35875]);
      var G__35876 = i__27316__auto___35875 + 1;
      i__27316__auto___35875 = G__35876;
      continue;
    } else {
    }
    break;
  }
  var G__35873 = args35865.length;
  switch(G__35873) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35865.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__27334__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq35866) {
  var G__35867 = cljs.core.first(seq35866);
  var seq35866__$1 = cljs.core.next(seq35866);
  var G__35868 = cljs.core.first(seq35866__$1);
  var seq35866__$2 = cljs.core.next(seq35866__$1);
  var G__35869 = cljs.core.first(seq35866__$2);
  var seq35866__$3 = cljs.core.next(seq35866__$2);
  var G__35870 = cljs.core.first(seq35866__$3);
  var seq35866__$4 = cljs.core.next(seq35866__$3);
  var G__35871 = cljs.core.first(seq35866__$4);
  var seq35866__$5 = cljs.core.next(seq35866__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__35867, G__35868, G__35869, G__35870, G__35871, seq35866__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args35878 = [];
  var len__27315__auto___35903 = arguments.length;
  var i__27316__auto___35904 = 0;
  while (true) {
    if (i__27316__auto___35904 < len__27315__auto___35903) {
      args35878.push(arguments[i__27316__auto___35904]);
      var G__35905 = i__27316__auto___35904 + 1;
      i__27316__auto___35904 = G__35905;
      continue;
    } else {
    }
    break;
  }
  var G__35887 = args35878.length;
  switch(G__35887) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35878.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__27334__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__35888 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35888) : f.call(null, G__35888);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__35889 = cljs.core.meta(obj);
    var G__35890 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35889, G__35890) : f.call(null, G__35889, G__35890);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__35891 = cljs.core.meta(obj);
    var G__35892 = a;
    var G__35893 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35891, G__35892, G__35893) : f.call(null, G__35891, G__35892, G__35893);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__35894 = cljs.core.meta(obj);
    var G__35895 = a;
    var G__35896 = b;
    var G__35897 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__35894, G__35895, G__35896, G__35897) : f.call(null, G__35894, G__35895, G__35896, G__35897);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__35898 = cljs.core.meta(obj);
    var G__35899 = a;
    var G__35900 = b;
    var G__35901 = c;
    var G__35902 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__35898, G__35899, G__35900, G__35901, G__35902) : f.call(null, G__35898, G__35899, G__35900, G__35901, G__35902);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq35879) {
  var G__35880 = cljs.core.first(seq35879);
  var seq35879__$1 = cljs.core.next(seq35879);
  var G__35881 = cljs.core.first(seq35879__$1);
  var seq35879__$2 = cljs.core.next(seq35879__$1);
  var G__35882 = cljs.core.first(seq35879__$2);
  var seq35879__$3 = cljs.core.next(seq35879__$2);
  var G__35883 = cljs.core.first(seq35879__$3);
  var seq35879__$4 = cljs.core.next(seq35879__$3);
  var G__35884 = cljs.core.first(seq35879__$4);
  var seq35879__$5 = cljs.core.next(seq35879__$4);
  var G__35885 = cljs.core.first(seq35879__$5);
  var seq35879__$6 = cljs.core.next(seq35879__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__35880, G__35881, G__35882, G__35883, G__35884, G__35885, seq35879__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args35907 = [];
  var len__27315__auto___35913 = arguments.length;
  var i__27316__auto___35914 = 0;
  while (true) {
    if (i__27316__auto___35914 < len__27315__auto___35913) {
      args35907.push(arguments[i__27316__auto___35914]);
      var G__35915 = i__27316__auto___35914 + 1;
      i__27316__auto___35914 = G__35915;
      continue;
    } else {
    }
    break;
  }
  var G__35912 = args35907.length;
  switch(G__35912) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35907.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq35908) {
  var G__35909 = cljs.core.first(seq35908);
  var seq35908__$1 = cljs.core.next(seq35908);
  var G__35910 = cljs.core.first(seq35908__$1);
  var seq35908__$2 = cljs.core.next(seq35908__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__35909, G__35910, seq35908__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core35920 !== "undefined") {
  } else {
    cljs.core.t_cljs$core35920 = function(nil_iter, meta35921) {
      this.nil_iter = nil_iter;
      this.meta35921 = meta35921;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core35920.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_35922, meta35921__$1) {
      var self__ = this;
      var _35922__$1 = this;
      return new cljs.core.t_cljs$core35920(self__.nil_iter, meta35921__$1);
    };
    cljs.core.t_cljs$core35920.prototype.cljs$core$IMeta$_meta$arity$1 = function(_35922) {
      var self__ = this;
      var _35922__$1 = this;
      return self__.meta35921;
    };
    cljs.core.t_cljs$core35920.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core35920.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core35920.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core35920.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta35921", "meta35921", -1626385516, null)], 
      null);
    };
    cljs.core.t_cljs$core35920.cljs$lang$type = true;
    cljs.core.t_cljs$core35920.cljs$lang$ctorStr = "cljs.core/t_cljs$core35920";
    cljs.core.t_cljs$core35920.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write(writer__26847__auto__, "cljs.core/t_cljs$core35920");
    };
    cljs.core.__GT_t_cljs$core35920 = function cljs$core$nil_iter_$___GT_t_cljs$core35920(nil_iter__$1, meta35921) {
      return new cljs.core.t_cljs$core35920(nil_iter__$1, meta35921);
    };
  }
  return new cljs.core.t_cljs$core35920(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = !(lt.stepper == null);
      if (and__26228__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__26228__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__35923 = lt;
        var G__35924 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__35923, G__35924) : self__.xform.call(null, G__35923, G__35924);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__35925 = cljs.core.next(iters__$1);
        iters__$1 = G__35925;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__27155__auto___35926 = self__.iters.length;
  var i_35927 = 0;
  while (true) {
    if (i_35927 < n__27155__auto___35926) {
      self__.nexts[i_35927] = self__.iters[i_35927].next();
      var G__35928 = i_35927 + 1;
      i_35927 = G__35928;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = !(lt.stepper == null);
      if (and__26228__auto__) {
        return this$.hasNext();
      } else {
        return and__26228__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args35929 = [];
  var len__27315__auto___35932 = arguments.length;
  var i__27316__auto___35933 = 0;
  while (true) {
    if (i__27316__auto___35933 < len__27315__auto___35932) {
      args35929.push(arguments[i__27316__auto___35933]);
      var G__35934 = i__27316__auto___35933 + 1;
      i__27316__auto___35933 = G__35934;
      continue;
    } else {
    }
    break;
  }
  var G__35931 = args35929.length;
  switch(G__35931) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35929.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__35936 = null;
  var G__35936__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__35936__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35936 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35936__1.call(this, x);
      case 2:
        return G__35936__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35936.cljs$core$IFn$_invoke$arity$1 = G__35936__1;
  G__35936.cljs$core$IFn$_invoke$arity$2 = G__35936__2;
  return G__35936;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__35937 = null;
  var G__35937__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__35937__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__35937 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35937__1.call(this, x);
      case 2:
        return G__35937__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35937.cljs$core$IFn$_invoke$arity$1 = G__35937__1;
  G__35937.cljs$core$IFn$_invoke$arity$2 = G__35937__2;
  return G__35937;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__35938_35942 = cljs.core.seq(colls);
  var chunk__35939_35943 = null;
  var count__35940_35944 = 0;
  var i__35941_35945 = 0;
  while (true) {
    if (i__35941_35945 < count__35940_35944) {
      var coll_35946 = chunk__35939_35943.cljs$core$IIndexed$_nth$arity$2(null, i__35941_35945);
      iters.push(cljs.core.iter(coll_35946));
      var G__35947 = seq__35938_35942;
      var G__35948 = chunk__35939_35943;
      var G__35949 = count__35940_35944;
      var G__35950 = i__35941_35945 + 1;
      seq__35938_35942 = G__35947;
      chunk__35939_35943 = G__35948;
      count__35940_35944 = G__35949;
      i__35941_35945 = G__35950;
      continue;
    } else {
      var temp__4657__auto___35951 = cljs.core.seq(seq__35938_35942);
      if (temp__4657__auto___35951) {
        var seq__35938_35952__$1 = temp__4657__auto___35951;
        if (cljs.core.chunked_seq_QMARK_(seq__35938_35952__$1)) {
          var c__27051__auto___35953 = cljs.core.chunk_first(seq__35938_35952__$1);
          var G__35954 = cljs.core.chunk_rest(seq__35938_35952__$1);
          var G__35955 = c__27051__auto___35953;
          var G__35956 = cljs.core.count(c__27051__auto___35953);
          var G__35957 = 0;
          seq__35938_35942 = G__35954;
          chunk__35939_35943 = G__35955;
          count__35940_35944 = G__35956;
          i__35941_35945 = G__35957;
          continue;
        } else {
          var coll_35958 = cljs.core.first(seq__35938_35952__$1);
          iters.push(cljs.core.iter(coll_35958));
          var G__35959 = cljs.core.next(seq__35938_35952__$1);
          var G__35960 = null;
          var G__35961 = 0;
          var G__35962 = 0;
          seq__35938_35942 = G__35959;
          chunk__35939_35943 = G__35960;
          count__35940_35944 = G__35961;
          i__35941_35945 = G__35962;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args35963 = [];
  var len__27315__auto___35969 = arguments.length;
  var i__27316__auto___35970 = 0;
  while (true) {
    if (i__27316__auto___35970 < len__27315__auto___35969) {
      args35963.push(arguments[i__27316__auto___35970]);
      var G__35971 = i__27316__auto___35970 + 1;
      i__27316__auto___35970 = G__35971;
      continue;
    } else {
    }
    break;
  }
  var G__35968 = args35963.length;
  switch(G__35968) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35963.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__26240__auto__ = cljs.core.seq(coll);
    if (or__26240__auto__) {
      return or__26240__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq35964) {
  var G__35965 = cljs.core.first(seq35964);
  var seq35964__$1 = cljs.core.next(seq35964);
  var G__35966 = cljs.core.first(seq35964__$1);
  var seq35964__$2 = cljs.core.next(seq35964__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__35965, G__35966, seq35964__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__35974 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35974) : pred.call(null, G__35974);
      }())) {
        var G__35975 = pred;
        var G__35976 = cljs.core.next(coll);
        pred = G__35975;
        coll = G__35976;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__26240__auto__ = function() {
        var G__35980 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35980) : pred.call(null, G__35980);
      }();
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var G__35981 = pred;
        var G__35982 = cljs.core.next(coll);
        pred = G__35981;
        coll = G__35982;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__35983 = null;
    var G__35983__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__35983__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__35983__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__35983__3 = function() {
      var G__35984__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__35984 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__35985__i = 0, G__35985__a = new Array(arguments.length - 2);
          while (G__35985__i < G__35985__a.length) {
            G__35985__a[G__35985__i] = arguments[G__35985__i + 2];
            ++G__35985__i;
          }
          zs = new cljs.core.IndexedSeq(G__35985__a, 0);
        }
        return G__35984__delegate.call(this, x, y, zs);
      };
      G__35984.cljs$lang$maxFixedArity = 2;
      G__35984.cljs$lang$applyTo = function(arglist__35986) {
        var x = cljs.core.first(arglist__35986);
        arglist__35986 = cljs.core.next(arglist__35986);
        var y = cljs.core.first(arglist__35986);
        var zs = cljs.core.rest(arglist__35986);
        return G__35984__delegate(x, y, zs);
      };
      G__35984.cljs$core$IFn$_invoke$arity$variadic = G__35984__delegate;
      return G__35984;
    }();
    G__35983 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__35983__0.call(this);
        case 1:
          return G__35983__1.call(this, x);
        case 2:
          return G__35983__2.call(this, x, y);
        default:
          var G__35987 = null;
          if (arguments.length > 2) {
            var G__35988__i = 0, G__35988__a = new Array(arguments.length - 2);
            while (G__35988__i < G__35988__a.length) {
              G__35988__a[G__35988__i] = arguments[G__35988__i + 2];
              ++G__35988__i;
            }
            G__35987 = new cljs.core.IndexedSeq(G__35988__a, 0);
          }
          return G__35983__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__35987);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__35983.cljs$lang$maxFixedArity = 2;
    G__35983.cljs$lang$applyTo = G__35983__3.cljs$lang$applyTo;
    G__35983.cljs$core$IFn$_invoke$arity$0 = G__35983__0;
    G__35983.cljs$core$IFn$_invoke$arity$1 = G__35983__1;
    G__35983.cljs$core$IFn$_invoke$arity$2 = G__35983__2;
    G__35983.cljs$core$IFn$_invoke$arity$variadic = G__35983__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__35983;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__35989__delegate = function(args) {
      return x;
    };
    var G__35989 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__35990__i = 0, G__35990__a = new Array(arguments.length - 0);
        while (G__35990__i < G__35990__a.length) {
          G__35990__a[G__35990__i] = arguments[G__35990__i + 0];
          ++G__35990__i;
        }
        args = new cljs.core.IndexedSeq(G__35990__a, 0);
      }
      return G__35989__delegate.call(this, args);
    };
    G__35989.cljs$lang$maxFixedArity = 0;
    G__35989.cljs$lang$applyTo = function(arglist__35991) {
      var args = cljs.core.seq(arglist__35991);
      return G__35989__delegate(args);
    };
    G__35989.cljs$core$IFn$_invoke$arity$variadic = G__35989__delegate;
    return G__35989;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args35992 = [];
  var len__27315__auto___36014 = arguments.length;
  var i__27316__auto___36015 = 0;
  while (true) {
    if (i__27316__auto___36015 < len__27315__auto___36014) {
      args35992.push(arguments[i__27316__auto___36015]);
      var G__36016 = i__27316__auto___36015 + 1;
      i__27316__auto___36015 = G__36016;
      continue;
    } else {
    }
    break;
  }
  var G__35998 = args35992.length;
  switch(G__35998) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args35992.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__36018 = null;
    var G__36018__0 = function() {
      var G__35999 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35999) : f.call(null, G__35999);
    };
    var G__36018__1 = function(x) {
      var G__36000 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36000) : f.call(null, G__36000);
    };
    var G__36018__2 = function(x, y) {
      var G__36001 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36001) : f.call(null, G__36001);
    };
    var G__36018__3 = function(x, y, z) {
      var G__36002 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36002) : f.call(null, G__36002);
    };
    var G__36018__4 = function() {
      var G__36019__delegate = function(x, y, z, args) {
        var G__36003 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36003) : f.call(null, G__36003);
      };
      var G__36019 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36020__i = 0, G__36020__a = new Array(arguments.length - 3);
          while (G__36020__i < G__36020__a.length) {
            G__36020__a[G__36020__i] = arguments[G__36020__i + 3];
            ++G__36020__i;
          }
          args = new cljs.core.IndexedSeq(G__36020__a, 0);
        }
        return G__36019__delegate.call(this, x, y, z, args);
      };
      G__36019.cljs$lang$maxFixedArity = 3;
      G__36019.cljs$lang$applyTo = function(arglist__36021) {
        var x = cljs.core.first(arglist__36021);
        arglist__36021 = cljs.core.next(arglist__36021);
        var y = cljs.core.first(arglist__36021);
        arglist__36021 = cljs.core.next(arglist__36021);
        var z = cljs.core.first(arglist__36021);
        var args = cljs.core.rest(arglist__36021);
        return G__36019__delegate(x, y, z, args);
      };
      G__36019.cljs$core$IFn$_invoke$arity$variadic = G__36019__delegate;
      return G__36019;
    }();
    G__36018 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__36018__0.call(this);
        case 1:
          return G__36018__1.call(this, x);
        case 2:
          return G__36018__2.call(this, x, y);
        case 3:
          return G__36018__3.call(this, x, y, z);
        default:
          var G__36022 = null;
          if (arguments.length > 3) {
            var G__36023__i = 0, G__36023__a = new Array(arguments.length - 3);
            while (G__36023__i < G__36023__a.length) {
              G__36023__a[G__36023__i] = arguments[G__36023__i + 3];
              ++G__36023__i;
            }
            G__36022 = new cljs.core.IndexedSeq(G__36023__a, 0);
          }
          return G__36018__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36022);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36018.cljs$lang$maxFixedArity = 3;
    G__36018.cljs$lang$applyTo = G__36018__4.cljs$lang$applyTo;
    G__36018.cljs$core$IFn$_invoke$arity$0 = G__36018__0;
    G__36018.cljs$core$IFn$_invoke$arity$1 = G__36018__1;
    G__36018.cljs$core$IFn$_invoke$arity$2 = G__36018__2;
    G__36018.cljs$core$IFn$_invoke$arity$3 = G__36018__3;
    G__36018.cljs$core$IFn$_invoke$arity$variadic = G__36018__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36018;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__36024 = null;
    var G__36024__0 = function() {
      var G__36004 = function() {
        var G__36005 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36005) : g.call(null, G__36005);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36004) : f.call(null, G__36004);
    };
    var G__36024__1 = function(x) {
      var G__36006 = function() {
        var G__36007 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36007) : g.call(null, G__36007);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36006) : f.call(null, G__36006);
    };
    var G__36024__2 = function(x, y) {
      var G__36008 = function() {
        var G__36009 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36009) : g.call(null, G__36009);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36008) : f.call(null, G__36008);
    };
    var G__36024__3 = function(x, y, z) {
      var G__36010 = function() {
        var G__36011 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36011) : g.call(null, G__36011);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36010) : f.call(null, G__36010);
    };
    var G__36024__4 = function() {
      var G__36025__delegate = function(x, y, z, args) {
        var G__36012 = function() {
          var G__36013 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36013) : g.call(null, G__36013);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36012) : f.call(null, G__36012);
      };
      var G__36025 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36026__i = 0, G__36026__a = new Array(arguments.length - 3);
          while (G__36026__i < G__36026__a.length) {
            G__36026__a[G__36026__i] = arguments[G__36026__i + 3];
            ++G__36026__i;
          }
          args = new cljs.core.IndexedSeq(G__36026__a, 0);
        }
        return G__36025__delegate.call(this, x, y, z, args);
      };
      G__36025.cljs$lang$maxFixedArity = 3;
      G__36025.cljs$lang$applyTo = function(arglist__36027) {
        var x = cljs.core.first(arglist__36027);
        arglist__36027 = cljs.core.next(arglist__36027);
        var y = cljs.core.first(arglist__36027);
        arglist__36027 = cljs.core.next(arglist__36027);
        var z = cljs.core.first(arglist__36027);
        var args = cljs.core.rest(arglist__36027);
        return G__36025__delegate(x, y, z, args);
      };
      G__36025.cljs$core$IFn$_invoke$arity$variadic = G__36025__delegate;
      return G__36025;
    }();
    G__36024 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__36024__0.call(this);
        case 1:
          return G__36024__1.call(this, x);
        case 2:
          return G__36024__2.call(this, x, y);
        case 3:
          return G__36024__3.call(this, x, y, z);
        default:
          var G__36028 = null;
          if (arguments.length > 3) {
            var G__36029__i = 0, G__36029__a = new Array(arguments.length - 3);
            while (G__36029__i < G__36029__a.length) {
              G__36029__a[G__36029__i] = arguments[G__36029__i + 3];
              ++G__36029__i;
            }
            G__36028 = new cljs.core.IndexedSeq(G__36029__a, 0);
          }
          return G__36024__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36028);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36024.cljs$lang$maxFixedArity = 3;
    G__36024.cljs$lang$applyTo = G__36024__4.cljs$lang$applyTo;
    G__36024.cljs$core$IFn$_invoke$arity$0 = G__36024__0;
    G__36024.cljs$core$IFn$_invoke$arity$1 = G__36024__1;
    G__36024.cljs$core$IFn$_invoke$arity$2 = G__36024__2;
    G__36024.cljs$core$IFn$_invoke$arity$3 = G__36024__3;
    G__36024.cljs$core$IFn$_invoke$arity$variadic = G__36024__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36024;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__36030__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__36031 = cljs.core.first(fs__$2).call(null, ret);
            var G__36032 = cljs.core.next(fs__$2);
            ret = G__36031;
            fs__$2 = G__36032;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__36030 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__36033__i = 0, G__36033__a = new Array(arguments.length - 0);
          while (G__36033__i < G__36033__a.length) {
            G__36033__a[G__36033__i] = arguments[G__36033__i + 0];
            ++G__36033__i;
          }
          args = new cljs.core.IndexedSeq(G__36033__a, 0);
        }
        return G__36030__delegate.call(this, args);
      };
      G__36030.cljs$lang$maxFixedArity = 0;
      G__36030.cljs$lang$applyTo = function(arglist__36034) {
        var args = cljs.core.seq(arglist__36034);
        return G__36030__delegate(args);
      };
      G__36030.cljs$core$IFn$_invoke$arity$variadic = G__36030__delegate;
      return G__36030;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq35993) {
  var G__35994 = cljs.core.first(seq35993);
  var seq35993__$1 = cljs.core.next(seq35993);
  var G__35995 = cljs.core.first(seq35993__$1);
  var seq35993__$2 = cljs.core.next(seq35993__$1);
  var G__35996 = cljs.core.first(seq35993__$2);
  var seq35993__$3 = cljs.core.next(seq35993__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__35994, G__35995, G__35996, seq35993__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args36035 = [];
  var len__27315__auto___36043 = arguments.length;
  var i__27316__auto___36044 = 0;
  while (true) {
    if (i__27316__auto___36044 < len__27315__auto___36043) {
      args36035.push(arguments[i__27316__auto___36044]);
      var G__36045 = i__27316__auto___36044 + 1;
      i__27316__auto___36044 = G__36045;
      continue;
    } else {
    }
    break;
  }
  var G__36042 = args36035.length;
  switch(G__36042) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36035.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__36047 = null;
    var G__36047__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__36047__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__36047__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__36047__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__36047__4 = function() {
      var G__36048__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__36048 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36049__i = 0, G__36049__a = new Array(arguments.length - 3);
          while (G__36049__i < G__36049__a.length) {
            G__36049__a[G__36049__i] = arguments[G__36049__i + 3];
            ++G__36049__i;
          }
          args = new cljs.core.IndexedSeq(G__36049__a, 0);
        }
        return G__36048__delegate.call(this, x, y, z, args);
      };
      G__36048.cljs$lang$maxFixedArity = 3;
      G__36048.cljs$lang$applyTo = function(arglist__36050) {
        var x = cljs.core.first(arglist__36050);
        arglist__36050 = cljs.core.next(arglist__36050);
        var y = cljs.core.first(arglist__36050);
        arglist__36050 = cljs.core.next(arglist__36050);
        var z = cljs.core.first(arglist__36050);
        var args = cljs.core.rest(arglist__36050);
        return G__36048__delegate(x, y, z, args);
      };
      G__36048.cljs$core$IFn$_invoke$arity$variadic = G__36048__delegate;
      return G__36048;
    }();
    G__36047 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__36047__0.call(this);
        case 1:
          return G__36047__1.call(this, x);
        case 2:
          return G__36047__2.call(this, x, y);
        case 3:
          return G__36047__3.call(this, x, y, z);
        default:
          var G__36051 = null;
          if (arguments.length > 3) {
            var G__36052__i = 0, G__36052__a = new Array(arguments.length - 3);
            while (G__36052__i < G__36052__a.length) {
              G__36052__a[G__36052__i] = arguments[G__36052__i + 3];
              ++G__36052__i;
            }
            G__36051 = new cljs.core.IndexedSeq(G__36052__a, 0);
          }
          return G__36047__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36051);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36047.cljs$lang$maxFixedArity = 3;
    G__36047.cljs$lang$applyTo = G__36047__4.cljs$lang$applyTo;
    G__36047.cljs$core$IFn$_invoke$arity$0 = G__36047__0;
    G__36047.cljs$core$IFn$_invoke$arity$1 = G__36047__1;
    G__36047.cljs$core$IFn$_invoke$arity$2 = G__36047__2;
    G__36047.cljs$core$IFn$_invoke$arity$3 = G__36047__3;
    G__36047.cljs$core$IFn$_invoke$arity$variadic = G__36047__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36047;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__36053 = null;
    var G__36053__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__36053__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__36053__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__36053__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__36053__4 = function() {
      var G__36054__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__36054 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36055__i = 0, G__36055__a = new Array(arguments.length - 3);
          while (G__36055__i < G__36055__a.length) {
            G__36055__a[G__36055__i] = arguments[G__36055__i + 3];
            ++G__36055__i;
          }
          args = new cljs.core.IndexedSeq(G__36055__a, 0);
        }
        return G__36054__delegate.call(this, x, y, z, args);
      };
      G__36054.cljs$lang$maxFixedArity = 3;
      G__36054.cljs$lang$applyTo = function(arglist__36056) {
        var x = cljs.core.first(arglist__36056);
        arglist__36056 = cljs.core.next(arglist__36056);
        var y = cljs.core.first(arglist__36056);
        arglist__36056 = cljs.core.next(arglist__36056);
        var z = cljs.core.first(arglist__36056);
        var args = cljs.core.rest(arglist__36056);
        return G__36054__delegate(x, y, z, args);
      };
      G__36054.cljs$core$IFn$_invoke$arity$variadic = G__36054__delegate;
      return G__36054;
    }();
    G__36053 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__36053__0.call(this);
        case 1:
          return G__36053__1.call(this, x);
        case 2:
          return G__36053__2.call(this, x, y);
        case 3:
          return G__36053__3.call(this, x, y, z);
        default:
          var G__36057 = null;
          if (arguments.length > 3) {
            var G__36058__i = 0, G__36058__a = new Array(arguments.length - 3);
            while (G__36058__i < G__36058__a.length) {
              G__36058__a[G__36058__i] = arguments[G__36058__i + 3];
              ++G__36058__i;
            }
            G__36057 = new cljs.core.IndexedSeq(G__36058__a, 0);
          }
          return G__36053__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36057);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36053.cljs$lang$maxFixedArity = 3;
    G__36053.cljs$lang$applyTo = G__36053__4.cljs$lang$applyTo;
    G__36053.cljs$core$IFn$_invoke$arity$0 = G__36053__0;
    G__36053.cljs$core$IFn$_invoke$arity$1 = G__36053__1;
    G__36053.cljs$core$IFn$_invoke$arity$2 = G__36053__2;
    G__36053.cljs$core$IFn$_invoke$arity$3 = G__36053__3;
    G__36053.cljs$core$IFn$_invoke$arity$variadic = G__36053__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36053;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__36059 = null;
    var G__36059__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__36059__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__36059__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__36059__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__36059__4 = function() {
      var G__36060__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__36060 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36061__i = 0, G__36061__a = new Array(arguments.length - 3);
          while (G__36061__i < G__36061__a.length) {
            G__36061__a[G__36061__i] = arguments[G__36061__i + 3];
            ++G__36061__i;
          }
          args = new cljs.core.IndexedSeq(G__36061__a, 0);
        }
        return G__36060__delegate.call(this, x, y, z, args);
      };
      G__36060.cljs$lang$maxFixedArity = 3;
      G__36060.cljs$lang$applyTo = function(arglist__36062) {
        var x = cljs.core.first(arglist__36062);
        arglist__36062 = cljs.core.next(arglist__36062);
        var y = cljs.core.first(arglist__36062);
        arglist__36062 = cljs.core.next(arglist__36062);
        var z = cljs.core.first(arglist__36062);
        var args = cljs.core.rest(arglist__36062);
        return G__36060__delegate(x, y, z, args);
      };
      G__36060.cljs$core$IFn$_invoke$arity$variadic = G__36060__delegate;
      return G__36060;
    }();
    G__36059 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__36059__0.call(this);
        case 1:
          return G__36059__1.call(this, x);
        case 2:
          return G__36059__2.call(this, x, y);
        case 3:
          return G__36059__3.call(this, x, y, z);
        default:
          var G__36063 = null;
          if (arguments.length > 3) {
            var G__36064__i = 0, G__36064__a = new Array(arguments.length - 3);
            while (G__36064__i < G__36064__a.length) {
              G__36064__a[G__36064__i] = arguments[G__36064__i + 3];
              ++G__36064__i;
            }
            G__36063 = new cljs.core.IndexedSeq(G__36064__a, 0);
          }
          return G__36059__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36063);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36059.cljs$lang$maxFixedArity = 3;
    G__36059.cljs$lang$applyTo = G__36059__4.cljs$lang$applyTo;
    G__36059.cljs$core$IFn$_invoke$arity$0 = G__36059__0;
    G__36059.cljs$core$IFn$_invoke$arity$1 = G__36059__1;
    G__36059.cljs$core$IFn$_invoke$arity$2 = G__36059__2;
    G__36059.cljs$core$IFn$_invoke$arity$3 = G__36059__3;
    G__36059.cljs$core$IFn$_invoke$arity$variadic = G__36059__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36059;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__36065__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__36065 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__36066__i = 0, G__36066__a = new Array(arguments.length - 0);
        while (G__36066__i < G__36066__a.length) {
          G__36066__a[G__36066__i] = arguments[G__36066__i + 0];
          ++G__36066__i;
        }
        args = new cljs.core.IndexedSeq(G__36066__a, 0);
      }
      return G__36065__delegate.call(this, args);
    };
    G__36065.cljs$lang$maxFixedArity = 0;
    G__36065.cljs$lang$applyTo = function(arglist__36067) {
      var args = cljs.core.seq(arglist__36067);
      return G__36065__delegate(args);
    };
    G__36065.cljs$core$IFn$_invoke$arity$variadic = G__36065__delegate;
    return G__36065;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq36036) {
  var G__36037 = cljs.core.first(seq36036);
  var seq36036__$1 = cljs.core.next(seq36036);
  var G__36038 = cljs.core.first(seq36036__$1);
  var seq36036__$2 = cljs.core.next(seq36036__$1);
  var G__36039 = cljs.core.first(seq36036__$2);
  var seq36036__$3 = cljs.core.next(seq36036__$2);
  var G__36040 = cljs.core.first(seq36036__$3);
  var seq36036__$4 = cljs.core.next(seq36036__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__36037, G__36038, G__36039, G__36040, seq36036__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args36068 = [];
  var len__27315__auto___36087 = arguments.length;
  var i__27316__auto___36088 = 0;
  while (true) {
    if (i__27316__auto___36088 < len__27315__auto___36087) {
      args36068.push(arguments[i__27316__auto___36088]);
      var G__36089 = i__27316__auto___36088 + 1;
      i__27316__auto___36088 = G__36089;
      continue;
    } else {
    }
    break;
  }
  var G__36070 = args36068.length;
  switch(G__36070) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36068.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__36091 = null;
    var G__36091__1 = function(a) {
      var G__36071 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36071) : f.call(null, G__36071);
    };
    var G__36091__2 = function(a, b) {
      var G__36072 = a == null ? x : a;
      var G__36073 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36072, G__36073) : f.call(null, G__36072, G__36073);
    };
    var G__36091__3 = function(a, b, c) {
      var G__36074 = a == null ? x : a;
      var G__36075 = b;
      var G__36076 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36074, G__36075, G__36076) : f.call(null, G__36074, G__36075, G__36076);
    };
    var G__36091__4 = function() {
      var G__36092__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__36092 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__36093__i = 0, G__36093__a = new Array(arguments.length - 3);
          while (G__36093__i < G__36093__a.length) {
            G__36093__a[G__36093__i] = arguments[G__36093__i + 3];
            ++G__36093__i;
          }
          ds = new cljs.core.IndexedSeq(G__36093__a, 0);
        }
        return G__36092__delegate.call(this, a, b, c, ds);
      };
      G__36092.cljs$lang$maxFixedArity = 3;
      G__36092.cljs$lang$applyTo = function(arglist__36094) {
        var a = cljs.core.first(arglist__36094);
        arglist__36094 = cljs.core.next(arglist__36094);
        var b = cljs.core.first(arglist__36094);
        arglist__36094 = cljs.core.next(arglist__36094);
        var c = cljs.core.first(arglist__36094);
        var ds = cljs.core.rest(arglist__36094);
        return G__36092__delegate(a, b, c, ds);
      };
      G__36092.cljs$core$IFn$_invoke$arity$variadic = G__36092__delegate;
      return G__36092;
    }();
    G__36091 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__36091__1.call(this, a);
        case 2:
          return G__36091__2.call(this, a, b);
        case 3:
          return G__36091__3.call(this, a, b, c);
        default:
          var G__36095 = null;
          if (arguments.length > 3) {
            var G__36096__i = 0, G__36096__a = new Array(arguments.length - 3);
            while (G__36096__i < G__36096__a.length) {
              G__36096__a[G__36096__i] = arguments[G__36096__i + 3];
              ++G__36096__i;
            }
            G__36095 = new cljs.core.IndexedSeq(G__36096__a, 0);
          }
          return G__36091__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__36095);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36091.cljs$lang$maxFixedArity = 3;
    G__36091.cljs$lang$applyTo = G__36091__4.cljs$lang$applyTo;
    G__36091.cljs$core$IFn$_invoke$arity$1 = G__36091__1;
    G__36091.cljs$core$IFn$_invoke$arity$2 = G__36091__2;
    G__36091.cljs$core$IFn$_invoke$arity$3 = G__36091__3;
    G__36091.cljs$core$IFn$_invoke$arity$variadic = G__36091__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36091;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__36097 = null;
    var G__36097__2 = function(a, b) {
      var G__36077 = a == null ? x : a;
      var G__36078 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36077, G__36078) : f.call(null, G__36077, G__36078);
    };
    var G__36097__3 = function(a, b, c) {
      var G__36079 = a == null ? x : a;
      var G__36080 = b == null ? y : b;
      var G__36081 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36079, G__36080, G__36081) : f.call(null, G__36079, G__36080, G__36081);
    };
    var G__36097__4 = function() {
      var G__36098__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__36098 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__36099__i = 0, G__36099__a = new Array(arguments.length - 3);
          while (G__36099__i < G__36099__a.length) {
            G__36099__a[G__36099__i] = arguments[G__36099__i + 3];
            ++G__36099__i;
          }
          ds = new cljs.core.IndexedSeq(G__36099__a, 0);
        }
        return G__36098__delegate.call(this, a, b, c, ds);
      };
      G__36098.cljs$lang$maxFixedArity = 3;
      G__36098.cljs$lang$applyTo = function(arglist__36100) {
        var a = cljs.core.first(arglist__36100);
        arglist__36100 = cljs.core.next(arglist__36100);
        var b = cljs.core.first(arglist__36100);
        arglist__36100 = cljs.core.next(arglist__36100);
        var c = cljs.core.first(arglist__36100);
        var ds = cljs.core.rest(arglist__36100);
        return G__36098__delegate(a, b, c, ds);
      };
      G__36098.cljs$core$IFn$_invoke$arity$variadic = G__36098__delegate;
      return G__36098;
    }();
    G__36097 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__36097__2.call(this, a, b);
        case 3:
          return G__36097__3.call(this, a, b, c);
        default:
          var G__36101 = null;
          if (arguments.length > 3) {
            var G__36102__i = 0, G__36102__a = new Array(arguments.length - 3);
            while (G__36102__i < G__36102__a.length) {
              G__36102__a[G__36102__i] = arguments[G__36102__i + 3];
              ++G__36102__i;
            }
            G__36101 = new cljs.core.IndexedSeq(G__36102__a, 0);
          }
          return G__36097__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__36101);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36097.cljs$lang$maxFixedArity = 3;
    G__36097.cljs$lang$applyTo = G__36097__4.cljs$lang$applyTo;
    G__36097.cljs$core$IFn$_invoke$arity$2 = G__36097__2;
    G__36097.cljs$core$IFn$_invoke$arity$3 = G__36097__3;
    G__36097.cljs$core$IFn$_invoke$arity$variadic = G__36097__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36097;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__36103 = null;
    var G__36103__2 = function(a, b) {
      var G__36082 = a == null ? x : a;
      var G__36083 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36082, G__36083) : f.call(null, G__36082, G__36083);
    };
    var G__36103__3 = function(a, b, c) {
      var G__36084 = a == null ? x : a;
      var G__36085 = b == null ? y : b;
      var G__36086 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36084, G__36085, G__36086) : f.call(null, G__36084, G__36085, G__36086);
    };
    var G__36103__4 = function() {
      var G__36104__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__36104 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__36105__i = 0, G__36105__a = new Array(arguments.length - 3);
          while (G__36105__i < G__36105__a.length) {
            G__36105__a[G__36105__i] = arguments[G__36105__i + 3];
            ++G__36105__i;
          }
          ds = new cljs.core.IndexedSeq(G__36105__a, 0);
        }
        return G__36104__delegate.call(this, a, b, c, ds);
      };
      G__36104.cljs$lang$maxFixedArity = 3;
      G__36104.cljs$lang$applyTo = function(arglist__36106) {
        var a = cljs.core.first(arglist__36106);
        arglist__36106 = cljs.core.next(arglist__36106);
        var b = cljs.core.first(arglist__36106);
        arglist__36106 = cljs.core.next(arglist__36106);
        var c = cljs.core.first(arglist__36106);
        var ds = cljs.core.rest(arglist__36106);
        return G__36104__delegate(a, b, c, ds);
      };
      G__36104.cljs$core$IFn$_invoke$arity$variadic = G__36104__delegate;
      return G__36104;
    }();
    G__36103 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__36103__2.call(this, a, b);
        case 3:
          return G__36103__3.call(this, a, b, c);
        default:
          var G__36107 = null;
          if (arguments.length > 3) {
            var G__36108__i = 0, G__36108__a = new Array(arguments.length - 3);
            while (G__36108__i < G__36108__a.length) {
              G__36108__a[G__36108__i] = arguments[G__36108__i + 3];
              ++G__36108__i;
            }
            G__36107 = new cljs.core.IndexedSeq(G__36108__a, 0);
          }
          return G__36103__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__36107);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__36103.cljs$lang$maxFixedArity = 3;
    G__36103.cljs$lang$applyTo = G__36103__4.cljs$lang$applyTo;
    G__36103.cljs$core$IFn$_invoke$arity$2 = G__36103__2;
    G__36103.cljs$core$IFn$_invoke$arity$3 = G__36103__3;
    G__36103.cljs$core$IFn$_invoke$arity$variadic = G__36103__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__36103;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args36109 = [];
  var len__27315__auto___36140 = arguments.length;
  var i__27316__auto___36141 = 0;
  while (true) {
    if (i__27316__auto___36141 < len__27315__auto___36140) {
      args36109.push(arguments[i__27316__auto___36141]);
      var G__36142 = i__27316__auto___36141 + 1;
      i__27316__auto___36141 = G__36142;
      continue;
    } else {
    }
    break;
  }
  var G__36111 = args36109.length;
  switch(G__36111) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36109.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__36144 = null;
        var G__36144__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__36144__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__36144__2 = function(result, input) {
          var G__36112 = result;
          var G__36113 = function() {
            var G__36114 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__36115 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36114, G__36115) : f.call(null, G__36114, G__36115);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36112, G__36113) : rf.call(null, G__36112, G__36113);
        };
        G__36144 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__36144__0.call(this);
            case 1:
              return G__36144__1.call(this, result);
            case 2:
              return G__36144__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__36144.cljs$core$IFn$_invoke$arity$0 = G__36144__0;
        G__36144.cljs$core$IFn$_invoke$arity$1 = G__36144__1;
        G__36144.cljs$core$IFn$_invoke$arity$2 = G__36144__2;
        return G__36144;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__27155__auto___36145 = size;
          var i_36146 = 0;
          while (true) {
            if (i_36146 < n__27155__auto___36145) {
              cljs.core.chunk_append(b, function() {
                var G__36136 = idx + i_36146;
                var G__36137 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_36146);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36136, G__36137) : f.call(null, G__36136, G__36137);
              }());
              var G__36147 = i_36146 + 1;
              i_36146 = G__36147;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__36138 = idx;
            var G__36139 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36138, G__36139) : f.call(null, G__36138, G__36139);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args36148 = [];
  var len__27315__auto___36153 = arguments.length;
  var i__27316__auto___36154 = 0;
  while (true) {
    if (i__27316__auto___36154 < len__27315__auto___36153) {
      args36148.push(arguments[i__27316__auto___36154]);
      var G__36155 = i__27316__auto___36154 + 1;
      i__27316__auto___36154 = G__36155;
      continue;
    } else {
    }
    break;
  }
  var G__36150 = args36148.length;
  switch(G__36150) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36148.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__36157 = null;
      var G__36157__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__36157__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__36157__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__36157 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__36157__0.call(this);
          case 1:
            return G__36157__1.call(this, result);
          case 2:
            return G__36157__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__36157.cljs$core$IFn$_invoke$arity$0 = G__36157__0;
      G__36157.cljs$core$IFn$_invoke$arity$1 = G__36157__1;
      G__36157.cljs$core$IFn$_invoke$arity$2 = G__36157__2;
      return G__36157;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__27155__auto___36158 = size;
        var i_36159 = 0;
        while (true) {
          if (i_36159 < n__27155__auto___36158) {
            var x_36160 = function() {
              var G__36151 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_36159);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36151) : f.call(null, G__36151);
            }();
            if (x_36160 == null) {
            } else {
              cljs.core.chunk_append(b, x_36160);
            }
            var G__36161 = i_36159 + 1;
            i_36159 = G__36161;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__36152 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36152) : f.call(null, G__36152);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__36162 = cljs.core.seq(self__.watches);
  var chunk__36163 = null;
  var count__36164 = 0;
  var i__36165 = 0;
  while (true) {
    if (i__36165 < count__36164) {
      var vec__36166 = chunk__36163.cljs$core$IIndexed$_nth$arity$2(null, i__36165);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36166, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36166, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__36172 = seq__36162;
      var G__36173 = chunk__36163;
      var G__36174 = count__36164;
      var G__36175 = i__36165 + 1;
      seq__36162 = G__36172;
      chunk__36163 = G__36173;
      count__36164 = G__36174;
      i__36165 = G__36175;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__36162);
      if (temp__4657__auto__) {
        var seq__36162__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__36162__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__36162__$1);
          var G__36176 = cljs.core.chunk_rest(seq__36162__$1);
          var G__36177 = c__27051__auto__;
          var G__36178 = cljs.core.count(c__27051__auto__);
          var G__36179 = 0;
          seq__36162 = G__36176;
          chunk__36163 = G__36177;
          count__36164 = G__36178;
          i__36165 = G__36179;
          continue;
        } else {
          var vec__36169 = cljs.core.first(seq__36162__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36169, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36169, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__36180 = cljs.core.next(seq__36162__$1);
          var G__36181 = null;
          var G__36182 = 0;
          var G__36183 = 0;
          seq__36162 = G__36180;
          chunk__36163 = G__36181;
          count__36164 = G__36182;
          i__36165 = G__36183;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args36184 = [];
  var len__27315__auto___36192 = arguments.length;
  var i__27316__auto___36193 = 0;
  while (true) {
    if (i__27316__auto___36193 < len__27315__auto___36192) {
      args36184.push(arguments[i__27316__auto___36193]);
      var G__36194 = i__27316__auto___36193 + 1;
      i__27316__auto___36193 = G__36194;
      continue;
    } else {
    }
    break;
  }
  var G__36188 = args36184.length;
  switch(G__36188) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36184.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__36189) {
  var map__36190 = p__36189;
  var map__36190__$1 = (!(map__36190 == null) ? map__36190.cljs$lang$protocol_mask$partition0$ & 64 || map__36190.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__36190) : map__36190;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36190__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36190__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq36185) {
  var G__36186 = cljs.core.first(seq36185);
  var seq36185__$1 = cljs.core.next(seq36185);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__36186, seq36185__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args36196 = [];
  var len__27315__auto___36210 = arguments.length;
  var i__27316__auto___36211 = 0;
  while (true) {
    if (i__27316__auto___36211 < len__27315__auto___36210) {
      args36196.push(arguments[i__27316__auto___36211]);
      var G__36212 = i__27316__auto___36211 + 1;
      i__27316__auto___36211 = G__36212;
      continue;
    } else {
    }
    break;
  }
  var G__36203 = args36196.length;
  switch(G__36203) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36196.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__36204 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36204) : f.call(null, G__36204);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__36205 = a.state;
      var G__36206 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36205, G__36206) : f.call(null, G__36205, G__36206);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__36207 = a.state;
      var G__36208 = x;
      var G__36209 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36207, G__36208, G__36209) : f.call(null, G__36207, G__36208, G__36209);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq36197) {
  var G__36198 = cljs.core.first(seq36197);
  var seq36197__$1 = cljs.core.next(seq36197);
  var G__36199 = cljs.core.first(seq36197__$1);
  var seq36197__$2 = cljs.core.next(seq36197__$1);
  var G__36200 = cljs.core.first(seq36197__$2);
  var seq36197__$3 = cljs.core.next(seq36197__$2);
  var G__36201 = cljs.core.first(seq36197__$3);
  var seq36197__$4 = cljs.core.next(seq36197__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__36198, G__36199, G__36200, G__36201, seq36197__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args36214 = [];
  var len__27315__auto___36245 = arguments.length;
  var i__27316__auto___36246 = 0;
  while (true) {
    if (i__27316__auto___36246 < len__27315__auto___36245) {
      args36214.push(arguments[i__27316__auto___36246]);
      var G__36247 = i__27316__auto___36246 + 1;
      i__27316__auto___36246 = G__36247;
      continue;
    } else {
    }
    break;
  }
  var G__36216 = args36214.length;
  switch(G__36216) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36214.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__36249 = null;
        var G__36249__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__36249__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__36249__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__36249 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__36249__0.call(this);
            case 1:
              return G__36249__1.call(this, result);
            case 2:
              return G__36249__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__36249.cljs$core$IFn$_invoke$arity$0 = G__36249__0;
        G__36249.cljs$core$IFn$_invoke$arity$1 = G__36249__1;
        G__36249.cljs$core$IFn$_invoke$arity$2 = G__36249__2;
        return G__36249;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__27155__auto___36250 = size;
          var i_36251 = 0;
          while (true) {
            if (i_36251 < n__27155__auto___36250) {
              var x_36252 = function() {
                var G__36241 = idx + i_36251;
                var G__36242 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_36251);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36241, G__36242) : f.call(null, G__36241, G__36242);
              }();
              if (x_36252 == null) {
              } else {
                cljs.core.chunk_append(b, x_36252);
              }
              var G__36253 = i_36251 + 1;
              i_36251 = G__36253;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__36243 = idx;
            var G__36244 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36243, G__36244) : f.call(null, G__36243, G__36244);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args36260 = [];
  var len__27315__auto___36267 = arguments.length;
  var i__27316__auto___36268 = 0;
  while (true) {
    if (i__27316__auto___36268 < len__27315__auto___36267) {
      args36260.push(arguments[i__27316__auto___36268]);
      var G__36269 = i__27316__auto___36268 + 1;
      i__27316__auto___36268 = G__36269;
      continue;
    } else {
    }
    break;
  }
  var G__36266 = args36260.length;
  switch(G__36266) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36260.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__36271__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__26228__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__26228__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__26228__auto__;
          }
        }());
      };
      var G__36271 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36272__i = 0, G__36272__a = new Array(arguments.length - 3);
          while (G__36272__i < G__36272__a.length) {
            G__36272__a[G__36272__i] = arguments[G__36272__i + 3];
            ++G__36272__i;
          }
          args = new cljs.core.IndexedSeq(G__36272__a, 0);
        }
        return G__36271__delegate.call(this, x, y, z, args);
      };
      G__36271.cljs$lang$maxFixedArity = 3;
      G__36271.cljs$lang$applyTo = function(arglist__36273) {
        var x = cljs.core.first(arglist__36273);
        arglist__36273 = cljs.core.next(arglist__36273);
        var y = cljs.core.first(arglist__36273);
        arglist__36273 = cljs.core.next(arglist__36273);
        var z = cljs.core.first(arglist__36273);
        var args = cljs.core.rest(arglist__36273);
        return G__36271__delegate(x, y, z, args);
      };
      G__36271.cljs$core$IFn$_invoke$arity$variadic = G__36271__delegate;
      return G__36271;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__36274 = null;
          if (arguments.length > 3) {
            var G__36275__i = 0, G__36275__a = new Array(arguments.length - 3);
            while (G__36275__i < G__36275__a.length) {
              G__36275__a[G__36275__i] = arguments[G__36275__i + 3];
              ++G__36275__i;
            }
            G__36274 = new cljs.core.IndexedSeq(G__36275__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36274);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              var and__26228__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__26228__auto____$3)) {
                var and__26228__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__26228__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__26228__auto____$4;
                }
              } else {
                return and__26228__auto____$3;
              }
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__36276__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__26228__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__26228__auto__)) {
            return cljs.core.every_QMARK_(function(and__26228__auto__) {
              return function(p1__36254_SHARP_) {
                var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__36254_SHARP_) : p1.call(null, p1__36254_SHARP_);
                if (cljs.core.truth_(and__26228__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__36254_SHARP_) : p2.call(null, p1__36254_SHARP_);
                } else {
                  return and__26228__auto____$1;
                }
              };
            }(and__26228__auto__), args);
          } else {
            return and__26228__auto__;
          }
        }());
      };
      var G__36276 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36277__i = 0, G__36277__a = new Array(arguments.length - 3);
          while (G__36277__i < G__36277__a.length) {
            G__36277__a[G__36277__i] = arguments[G__36277__i + 3];
            ++G__36277__i;
          }
          args = new cljs.core.IndexedSeq(G__36277__a, 0);
        }
        return G__36276__delegate.call(this, x, y, z, args);
      };
      G__36276.cljs$lang$maxFixedArity = 3;
      G__36276.cljs$lang$applyTo = function(arglist__36278) {
        var x = cljs.core.first(arglist__36278);
        arglist__36278 = cljs.core.next(arglist__36278);
        var y = cljs.core.first(arglist__36278);
        arglist__36278 = cljs.core.next(arglist__36278);
        var z = cljs.core.first(arglist__36278);
        var args = cljs.core.rest(arglist__36278);
        return G__36276__delegate(x, y, z, args);
      };
      G__36276.cljs$core$IFn$_invoke$arity$variadic = G__36276__delegate;
      return G__36276;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__36279 = null;
          if (arguments.length > 3) {
            var G__36280__i = 0, G__36280__a = new Array(arguments.length - 3);
            while (G__36280__i < G__36280__a.length) {
              G__36280__a[G__36280__i] = arguments[G__36280__i + 3];
              ++G__36280__i;
            }
            G__36279 = new cljs.core.IndexedSeq(G__36280__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36279);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              var and__26228__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__26228__auto____$3)) {
                var and__26228__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__26228__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__26228__auto____$4;
                }
              } else {
                return and__26228__auto____$3;
              }
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              var and__26228__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__26228__auto____$3)) {
                var and__26228__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__26228__auto____$4)) {
                  var and__26228__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__26228__auto____$5)) {
                    var and__26228__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__26228__auto____$6)) {
                      var and__26228__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__26228__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__26228__auto____$7;
                      }
                    } else {
                      return and__26228__auto____$6;
                    }
                  } else {
                    return and__26228__auto____$5;
                  }
                } else {
                  return and__26228__auto____$4;
                }
              } else {
                return and__26228__auto____$3;
              }
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__36281__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__26228__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__26228__auto__)) {
            return cljs.core.every_QMARK_(function(and__26228__auto__) {
              return function(p1__36255_SHARP_) {
                var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__36255_SHARP_) : p1.call(null, p1__36255_SHARP_);
                if (cljs.core.truth_(and__26228__auto____$1)) {
                  var and__26228__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__36255_SHARP_) : p2.call(null, p1__36255_SHARP_);
                  if (cljs.core.truth_(and__26228__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__36255_SHARP_) : p3.call(null, p1__36255_SHARP_);
                  } else {
                    return and__26228__auto____$2;
                  }
                } else {
                  return and__26228__auto____$1;
                }
              };
            }(and__26228__auto__), args);
          } else {
            return and__26228__auto__;
          }
        }());
      };
      var G__36281 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36282__i = 0, G__36282__a = new Array(arguments.length - 3);
          while (G__36282__i < G__36282__a.length) {
            G__36282__a[G__36282__i] = arguments[G__36282__i + 3];
            ++G__36282__i;
          }
          args = new cljs.core.IndexedSeq(G__36282__a, 0);
        }
        return G__36281__delegate.call(this, x, y, z, args);
      };
      G__36281.cljs$lang$maxFixedArity = 3;
      G__36281.cljs$lang$applyTo = function(arglist__36283) {
        var x = cljs.core.first(arglist__36283);
        arglist__36283 = cljs.core.next(arglist__36283);
        var y = cljs.core.first(arglist__36283);
        arglist__36283 = cljs.core.next(arglist__36283);
        var z = cljs.core.first(arglist__36283);
        var args = cljs.core.rest(arglist__36283);
        return G__36281__delegate(x, y, z, args);
      };
      G__36281.cljs$core$IFn$_invoke$arity$variadic = G__36281__delegate;
      return G__36281;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__36284 = null;
          if (arguments.length > 3) {
            var G__36285__i = 0, G__36285__a = new Array(arguments.length - 3);
            while (G__36285__i < G__36285__a.length) {
              G__36285__a[G__36285__i] = arguments[G__36285__i + 3];
              ++G__36285__i;
            }
            G__36284 = new cljs.core.IndexedSeq(G__36285__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36284);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__36256_SHARP_) {
            return p1__36256_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36256_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__36256_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__36257_SHARP_) {
            var and__26228__auto__ = p1__36257_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36257_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__36257_SHARP_.call(null, x);
            if (cljs.core.truth_(and__26228__auto__)) {
              return p1__36257_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36257_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__36257_SHARP_.call(null, y);
            } else {
              return and__26228__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__36258_SHARP_) {
            var and__26228__auto__ = p1__36258_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36258_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__36258_SHARP_.call(null, x);
            if (cljs.core.truth_(and__26228__auto__)) {
              var and__26228__auto____$1 = p1__36258_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36258_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__36258_SHARP_.call(null, y);
              if (cljs.core.truth_(and__26228__auto____$1)) {
                return p1__36258_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36258_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__36258_SHARP_.call(null, z);
              } else {
                return and__26228__auto____$1;
              }
            } else {
              return and__26228__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__36286__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__26228__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__26228__auto__)) {
              return cljs.core.every_QMARK_(function(and__26228__auto__, ps__$1) {
                return function(p1__36259_SHARP_) {
                  return cljs.core.every_QMARK_(p1__36259_SHARP_, args);
                };
              }(and__26228__auto__, ps__$1), ps__$1);
            } else {
              return and__26228__auto__;
            }
          }());
        };
        var G__36286 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__36287__i = 0, G__36287__a = new Array(arguments.length - 3);
            while (G__36287__i < G__36287__a.length) {
              G__36287__a[G__36287__i] = arguments[G__36287__i + 3];
              ++G__36287__i;
            }
            args = new cljs.core.IndexedSeq(G__36287__a, 0);
          }
          return G__36286__delegate.call(this, x, y, z, args);
        };
        G__36286.cljs$lang$maxFixedArity = 3;
        G__36286.cljs$lang$applyTo = function(arglist__36288) {
          var x = cljs.core.first(arglist__36288);
          arglist__36288 = cljs.core.next(arglist__36288);
          var y = cljs.core.first(arglist__36288);
          arglist__36288 = cljs.core.next(arglist__36288);
          var z = cljs.core.first(arglist__36288);
          var args = cljs.core.rest(arglist__36288);
          return G__36286__delegate(x, y, z, args);
        };
        G__36286.cljs$core$IFn$_invoke$arity$variadic = G__36286__delegate;
        return G__36286;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__36289 = null;
            if (arguments.length > 3) {
              var G__36290__i = 0, G__36290__a = new Array(arguments.length - 3);
              while (G__36290__i < G__36290__a.length) {
                G__36290__a[G__36290__i] = arguments[G__36290__i + 3];
                ++G__36290__i;
              }
              G__36289 = new cljs.core.IndexedSeq(G__36290__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36289);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq36261) {
  var G__36262 = cljs.core.first(seq36261);
  var seq36261__$1 = cljs.core.next(seq36261);
  var G__36263 = cljs.core.first(seq36261__$1);
  var seq36261__$2 = cljs.core.next(seq36261__$1);
  var G__36264 = cljs.core.first(seq36261__$2);
  var seq36261__$3 = cljs.core.next(seq36261__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__36262, G__36263, G__36264, seq36261__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args36297 = [];
  var len__27315__auto___36304 = arguments.length;
  var i__27316__auto___36305 = 0;
  while (true) {
    if (i__27316__auto___36305 < len__27315__auto___36304) {
      args36297.push(arguments[i__27316__auto___36305]);
      var G__36306 = i__27316__auto___36305 + 1;
      i__27316__auto___36305 = G__36306;
      continue;
    } else {
    }
    break;
  }
  var G__36303 = args36297.length;
  switch(G__36303) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36297.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__26240__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__26240__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__36308__delegate = function(x, y, z, args) {
        var or__26240__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__36308 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36309__i = 0, G__36309__a = new Array(arguments.length - 3);
          while (G__36309__i < G__36309__a.length) {
            G__36309__a[G__36309__i] = arguments[G__36309__i + 3];
            ++G__36309__i;
          }
          args = new cljs.core.IndexedSeq(G__36309__a, 0);
        }
        return G__36308__delegate.call(this, x, y, z, args);
      };
      G__36308.cljs$lang$maxFixedArity = 3;
      G__36308.cljs$lang$applyTo = function(arglist__36310) {
        var x = cljs.core.first(arglist__36310);
        arglist__36310 = cljs.core.next(arglist__36310);
        var y = cljs.core.first(arglist__36310);
        arglist__36310 = cljs.core.next(arglist__36310);
        var z = cljs.core.first(arglist__36310);
        var args = cljs.core.rest(arglist__36310);
        return G__36308__delegate(x, y, z, args);
      };
      G__36308.cljs$core$IFn$_invoke$arity$variadic = G__36308__delegate;
      return G__36308;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__36311 = null;
          if (arguments.length > 3) {
            var G__36312__i = 0, G__36312__a = new Array(arguments.length - 3);
            while (G__36312__i < G__36312__a.length) {
              G__36312__a[G__36312__i] = arguments[G__36312__i + 3];
              ++G__36312__i;
            }
            G__36311 = new cljs.core.IndexedSeq(G__36312__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36311);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            var or__26240__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__26240__auto____$3)) {
              return or__26240__auto____$3;
            } else {
              var or__26240__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$4)) {
                return or__26240__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__36313__delegate = function(x, y, z, args) {
        var or__26240__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.some(function(or__26240__auto__) {
            return function(p1__36291_SHARP_) {
              var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__36291_SHARP_) : p1.call(null, p1__36291_SHARP_);
              if (cljs.core.truth_(or__26240__auto____$1)) {
                return or__26240__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__36291_SHARP_) : p2.call(null, p1__36291_SHARP_);
              }
            };
          }(or__26240__auto__), args);
        }
      };
      var G__36313 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36314__i = 0, G__36314__a = new Array(arguments.length - 3);
          while (G__36314__i < G__36314__a.length) {
            G__36314__a[G__36314__i] = arguments[G__36314__i + 3];
            ++G__36314__i;
          }
          args = new cljs.core.IndexedSeq(G__36314__a, 0);
        }
        return G__36313__delegate.call(this, x, y, z, args);
      };
      G__36313.cljs$lang$maxFixedArity = 3;
      G__36313.cljs$lang$applyTo = function(arglist__36315) {
        var x = cljs.core.first(arglist__36315);
        arglist__36315 = cljs.core.next(arglist__36315);
        var y = cljs.core.first(arglist__36315);
        arglist__36315 = cljs.core.next(arglist__36315);
        var z = cljs.core.first(arglist__36315);
        var args = cljs.core.rest(arglist__36315);
        return G__36313__delegate(x, y, z, args);
      };
      G__36313.cljs$core$IFn$_invoke$arity$variadic = G__36313__delegate;
      return G__36313;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__36316 = null;
          if (arguments.length > 3) {
            var G__36317__i = 0, G__36317__a = new Array(arguments.length - 3);
            while (G__36317__i < G__36317__a.length) {
              G__36317__a[G__36317__i] = arguments[G__36317__i + 3];
              ++G__36317__i;
            }
            G__36316 = new cljs.core.IndexedSeq(G__36317__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36316);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            var or__26240__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__26240__auto____$3)) {
              return or__26240__auto____$3;
            } else {
              var or__26240__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$4)) {
                return or__26240__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            var or__26240__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__26240__auto____$3)) {
              return or__26240__auto____$3;
            } else {
              var or__26240__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$4)) {
                return or__26240__auto____$4;
              } else {
                var or__26240__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__26240__auto____$5)) {
                  return or__26240__auto____$5;
                } else {
                  var or__26240__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__26240__auto____$6)) {
                    return or__26240__auto____$6;
                  } else {
                    var or__26240__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__26240__auto____$7)) {
                      return or__26240__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__36318__delegate = function(x, y, z, args) {
        var or__26240__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.some(function(or__26240__auto__) {
            return function(p1__36292_SHARP_) {
              var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__36292_SHARP_) : p1.call(null, p1__36292_SHARP_);
              if (cljs.core.truth_(or__26240__auto____$1)) {
                return or__26240__auto____$1;
              } else {
                var or__26240__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__36292_SHARP_) : p2.call(null, p1__36292_SHARP_);
                if (cljs.core.truth_(or__26240__auto____$2)) {
                  return or__26240__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__36292_SHARP_) : p3.call(null, p1__36292_SHARP_);
                }
              }
            };
          }(or__26240__auto__), args);
        }
      };
      var G__36318 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__36319__i = 0, G__36319__a = new Array(arguments.length - 3);
          while (G__36319__i < G__36319__a.length) {
            G__36319__a[G__36319__i] = arguments[G__36319__i + 3];
            ++G__36319__i;
          }
          args = new cljs.core.IndexedSeq(G__36319__a, 0);
        }
        return G__36318__delegate.call(this, x, y, z, args);
      };
      G__36318.cljs$lang$maxFixedArity = 3;
      G__36318.cljs$lang$applyTo = function(arglist__36320) {
        var x = cljs.core.first(arglist__36320);
        arglist__36320 = cljs.core.next(arglist__36320);
        var y = cljs.core.first(arglist__36320);
        arglist__36320 = cljs.core.next(arglist__36320);
        var z = cljs.core.first(arglist__36320);
        var args = cljs.core.rest(arglist__36320);
        return G__36318__delegate(x, y, z, args);
      };
      G__36318.cljs$core$IFn$_invoke$arity$variadic = G__36318__delegate;
      return G__36318;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__36321 = null;
          if (arguments.length > 3) {
            var G__36322__i = 0, G__36322__a = new Array(arguments.length - 3);
            while (G__36322__i < G__36322__a.length) {
              G__36322__a[G__36322__i] = arguments[G__36322__i + 3];
              ++G__36322__i;
            }
            G__36321 = new cljs.core.IndexedSeq(G__36322__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36321);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__36293_SHARP_) {
            return p1__36293_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36293_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__36293_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__36294_SHARP_) {
            var or__26240__auto__ = p1__36294_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36294_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__36294_SHARP_.call(null, x);
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return p1__36294_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36294_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__36294_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__36295_SHARP_) {
            var or__26240__auto__ = p1__36295_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36295_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__36295_SHARP_.call(null, x);
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              var or__26240__auto____$1 = p1__36295_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36295_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__36295_SHARP_.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$1)) {
                return or__26240__auto____$1;
              } else {
                return p1__36295_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36295_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__36295_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__36323__delegate = function(x, y, z, args) {
          var or__26240__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__26240__auto__)) {
            return or__26240__auto__;
          } else {
            return cljs.core.some(function(or__26240__auto__, ps__$1) {
              return function(p1__36296_SHARP_) {
                return cljs.core.some(p1__36296_SHARP_, args);
              };
            }(or__26240__auto__, ps__$1), ps__$1);
          }
        };
        var G__36323 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__36324__i = 0, G__36324__a = new Array(arguments.length - 3);
            while (G__36324__i < G__36324__a.length) {
              G__36324__a[G__36324__i] = arguments[G__36324__i + 3];
              ++G__36324__i;
            }
            args = new cljs.core.IndexedSeq(G__36324__a, 0);
          }
          return G__36323__delegate.call(this, x, y, z, args);
        };
        G__36323.cljs$lang$maxFixedArity = 3;
        G__36323.cljs$lang$applyTo = function(arglist__36325) {
          var x = cljs.core.first(arglist__36325);
          arglist__36325 = cljs.core.next(arglist__36325);
          var y = cljs.core.first(arglist__36325);
          arglist__36325 = cljs.core.next(arglist__36325);
          var z = cljs.core.first(arglist__36325);
          var args = cljs.core.rest(arglist__36325);
          return G__36323__delegate(x, y, z, args);
        };
        G__36323.cljs$core$IFn$_invoke$arity$variadic = G__36323__delegate;
        return G__36323;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__36326 = null;
            if (arguments.length > 3) {
              var G__36327__i = 0, G__36327__a = new Array(arguments.length - 3);
              while (G__36327__i < G__36327__a.length) {
                G__36327__a[G__36327__i] = arguments[G__36327__i + 3];
                ++G__36327__i;
              }
              G__36326 = new cljs.core.IndexedSeq(G__36327__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__36326);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq36298) {
  var G__36299 = cljs.core.first(seq36298);
  var seq36298__$1 = cljs.core.next(seq36298);
  var G__36300 = cljs.core.first(seq36298__$1);
  var seq36298__$2 = cljs.core.next(seq36298__$1);
  var G__36301 = cljs.core.first(seq36298__$2);
  var seq36298__$3 = cljs.core.next(seq36298__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__36299, G__36300, G__36301, seq36298__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args36329 = [];
  var len__27315__auto___36349 = arguments.length;
  var i__27316__auto___36350 = 0;
  while (true) {
    if (i__27316__auto___36350 < len__27315__auto___36349) {
      args36329.push(arguments[i__27316__auto___36350]);
      var G__36351 = i__27316__auto___36350 + 1;
      i__27316__auto___36350 = G__36351;
      continue;
    } else {
    }
    break;
  }
  var G__36336 = args36329.length;
  switch(G__36336) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36329.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__36353 = null;
      var G__36353__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__36353__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__36353__2 = function(result, input) {
        var G__36337 = result;
        var G__36338 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36337, G__36338) : rf.call(null, G__36337, G__36338);
      };
      var G__36353__3 = function() {
        var G__36354__delegate = function(result, input, inputs) {
          var G__36339 = result;
          var G__36340 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36339, G__36340) : rf.call(null, G__36339, G__36340);
        };
        var G__36354 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__36355__i = 0, G__36355__a = new Array(arguments.length - 2);
            while (G__36355__i < G__36355__a.length) {
              G__36355__a[G__36355__i] = arguments[G__36355__i + 2];
              ++G__36355__i;
            }
            inputs = new cljs.core.IndexedSeq(G__36355__a, 0);
          }
          return G__36354__delegate.call(this, result, input, inputs);
        };
        G__36354.cljs$lang$maxFixedArity = 2;
        G__36354.cljs$lang$applyTo = function(arglist__36356) {
          var result = cljs.core.first(arglist__36356);
          arglist__36356 = cljs.core.next(arglist__36356);
          var input = cljs.core.first(arglist__36356);
          var inputs = cljs.core.rest(arglist__36356);
          return G__36354__delegate(result, input, inputs);
        };
        G__36354.cljs$core$IFn$_invoke$arity$variadic = G__36354__delegate;
        return G__36354;
      }();
      G__36353 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__36353__0.call(this);
          case 1:
            return G__36353__1.call(this, result);
          case 2:
            return G__36353__2.call(this, result, input);
          default:
            var G__36357 = null;
            if (arguments.length > 2) {
              var G__36358__i = 0, G__36358__a = new Array(arguments.length - 2);
              while (G__36358__i < G__36358__a.length) {
                G__36358__a[G__36358__i] = arguments[G__36358__i + 2];
                ++G__36358__i;
              }
              G__36357 = new cljs.core.IndexedSeq(G__36358__a, 0);
            }
            return G__36353__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__36357);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__36353.cljs$lang$maxFixedArity = 2;
      G__36353.cljs$lang$applyTo = G__36353__3.cljs$lang$applyTo;
      G__36353.cljs$core$IFn$_invoke$arity$0 = G__36353__0;
      G__36353.cljs$core$IFn$_invoke$arity$1 = G__36353__1;
      G__36353.cljs$core$IFn$_invoke$arity$2 = G__36353__2;
      G__36353.cljs$core$IFn$_invoke$arity$variadic = G__36353__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__36353;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__27155__auto___36359 = size;
        var i_36360 = 0;
        while (true) {
          if (i_36360 < n__27155__auto___36359) {
            cljs.core.chunk_append(b, function() {
              var G__36341 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_36360);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36341) : f.call(null, G__36341);
            }());
            var G__36361 = i_36360 + 1;
            i_36360 = G__36361;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__36342 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36342) : f.call(null, G__36342);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__36343 = cljs.core.first(s1);
        var G__36344 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36343, G__36344) : f.call(null, G__36343, G__36344);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__36345 = cljs.core.first(s1);
        var G__36346 = cljs.core.first(s2);
        var G__36347 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36345, G__36346, G__36347) : f.call(null, G__36345, G__36346, G__36347);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__36328_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__36328_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq36330) {
  var G__36331 = cljs.core.first(seq36330);
  var seq36330__$1 = cljs.core.next(seq36330);
  var G__36332 = cljs.core.first(seq36330__$1);
  var seq36330__$2 = cljs.core.next(seq36330__$1);
  var G__36333 = cljs.core.first(seq36330__$2);
  var seq36330__$3 = cljs.core.next(seq36330__$2);
  var G__36334 = cljs.core.first(seq36330__$3);
  var seq36330__$4 = cljs.core.next(seq36330__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__36331, G__36332, G__36333, G__36334, seq36330__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args36362 = [];
  var len__27315__auto___36365 = arguments.length;
  var i__27316__auto___36366 = 0;
  while (true) {
    if (i__27316__auto___36366 < len__27315__auto___36365) {
      args36362.push(arguments[i__27316__auto___36366]);
      var G__36367 = i__27316__auto___36366 + 1;
      i__27316__auto___36366 = G__36367;
      continue;
    } else {
    }
    break;
  }
  var G__36364 = args36362.length;
  switch(G__36364) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36362.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__36369 = null;
        var G__36369__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__36369__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__36369__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__36369 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__36369__0.call(this);
            case 1:
              return G__36369__1.call(this, result);
            case 2:
              return G__36369__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__36369.cljs$core$IFn$_invoke$arity$0 = G__36369__0;
        G__36369.cljs$core$IFn$_invoke$arity$1 = G__36369__1;
        G__36369.cljs$core$IFn$_invoke$arity$2 = G__36369__2;
        return G__36369;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args36370 = [];
  var len__27315__auto___36373 = arguments.length;
  var i__27316__auto___36374 = 0;
  while (true) {
    if (i__27316__auto___36374 < len__27315__auto___36373) {
      args36370.push(arguments[i__27316__auto___36374]);
      var G__36375 = i__27316__auto___36374 + 1;
      i__27316__auto___36374 = G__36375;
      continue;
    } else {
    }
    break;
  }
  var G__36372 = args36370.length;
  switch(G__36372) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36370.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__36377 = null;
        var G__36377__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__36377__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__36377__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__36377 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__36377__0.call(this);
            case 1:
              return G__36377__1.call(this, result);
            case 2:
              return G__36377__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__36377.cljs$core$IFn$_invoke$arity$0 = G__36377__0;
        G__36377.cljs$core$IFn$_invoke$arity$1 = G__36377__1;
        G__36377.cljs$core$IFn$_invoke$arity$2 = G__36377__2;
        return G__36377;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__36378 = n__$1 - 1;
        var G__36379 = cljs.core.rest(s);
        n__$1 = G__36378;
        coll__$1 = G__36379;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args36380 = [];
  var len__27315__auto___36383 = arguments.length;
  var i__27316__auto___36384 = 0;
  while (true) {
    if (i__27316__auto___36384 < len__27315__auto___36383) {
      args36380.push(arguments[i__27316__auto___36384]);
      var G__36385 = i__27316__auto___36384 + 1;
      i__27316__auto___36384 = G__36385;
      continue;
    } else {
    }
    break;
  }
  var G__36382 = args36380.length;
  switch(G__36382) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36380.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__36387 = cljs.core.next(s);
      var G__36388 = cljs.core.next(lead);
      s = G__36387;
      lead = G__36388;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args36389 = [];
  var len__27315__auto___36394 = arguments.length;
  var i__27316__auto___36395 = 0;
  while (true) {
    if (i__27316__auto___36395 < len__27315__auto___36394) {
      args36389.push(arguments[i__27316__auto___36395]);
      var G__36396 = i__27316__auto___36395 + 1;
      i__27316__auto___36395 = G__36396;
      continue;
    } else {
    }
    break;
  }
  var G__36391 = args36389.length;
  switch(G__36391) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36389.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__36398 = null;
        var G__36398__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__36398__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__36398__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__26228__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__26228__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__26228__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__36398 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__36398__0.call(this);
            case 1:
              return G__36398__1.call(this, result);
            case 2:
              return G__36398__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__36398.cljs$core$IFn$_invoke$arity$0 = G__36398__0;
        G__36398.cljs$core$IFn$_invoke$arity$1 = G__36398__1;
        G__36398.cljs$core$IFn$_invoke$arity$2 = G__36398__2;
        return G__36398;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__26228__auto__ = s;
        if (and__26228__auto__) {
          var G__36393 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__36393) : pred__$1.call(null, G__36393);
        } else {
          return and__26228__auto__;
        }
      }())) {
        var G__36399 = pred__$1;
        var G__36400 = cljs.core.rest(s);
        pred__$1 = G__36399;
        coll__$1 = G__36400;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args36401 = [];
  var len__27315__auto___36404 = arguments.length;
  var i__27316__auto___36405 = 0;
  while (true) {
    if (i__27316__auto___36405 < len__27315__auto___36404) {
      args36401.push(arguments[i__27316__auto___36405]);
      var G__36406 = i__27316__auto___36405 + 1;
      i__27316__auto___36405 = G__36406;
      continue;
    } else {
    }
    break;
  }
  var G__36403 = args36401.length;
  switch(G__36403) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36401.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args36408 = [];
  var len__27315__auto___36411 = arguments.length;
  var i__27316__auto___36412 = 0;
  while (true) {
    if (i__27316__auto___36412 < len__27315__auto___36411) {
      args36408.push(arguments[i__27316__auto___36412]);
      var G__36413 = i__27316__auto___36412 + 1;
      i__27316__auto___36412 = G__36413;
      continue;
    } else {
    }
    break;
  }
  var G__36410 = args36408.length;
  switch(G__36410) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36408.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args36417 = [];
  var len__27315__auto___36423 = arguments.length;
  var i__27316__auto___36424 = 0;
  while (true) {
    if (i__27316__auto___36424 < len__27315__auto___36423) {
      args36417.push(arguments[i__27316__auto___36424]);
      var G__36425 = i__27316__auto___36424 + 1;
      i__27316__auto___36424 = G__36425;
      continue;
    } else {
    }
    break;
  }
  var G__36422 = args36417.length;
  switch(G__36422) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36417.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq36418) {
  var G__36419 = cljs.core.first(seq36418);
  var seq36418__$1 = cljs.core.next(seq36418);
  var G__36420 = cljs.core.first(seq36418__$1);
  var seq36418__$2 = cljs.core.next(seq36418__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__36419, G__36420, seq36418__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args36427 = [];
  var len__27315__auto___36430 = arguments.length;
  var i__27316__auto___36431 = 0;
  while (true) {
    if (i__27316__auto___36431 < len__27315__auto___36430) {
      args36427.push(arguments[i__27316__auto___36431]);
      var G__36432 = i__27316__auto___36431 + 1;
      i__27316__auto___36431 = G__36432;
      continue;
    } else {
    }
    break;
  }
  var G__36429 = args36427.length;
  switch(G__36429) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36427.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__36434 = null;
        var G__36434__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__36434__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__36434__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__36434 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__36434__0.call(this);
            case 1:
              return G__36434__1.call(this, result);
            case 2:
              return G__36434__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__36434.cljs$core$IFn$_invoke$arity$0 = G__36434__0;
        G__36434.cljs$core$IFn$_invoke$arity$1 = G__36434__1;
        G__36434.cljs$core$IFn$_invoke$arity$2 = G__36434__2;
        return G__36434;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args36443 = [];
  var len__27315__auto___36448 = arguments.length;
  var i__27316__auto___36449 = 0;
  while (true) {
    if (i__27316__auto___36449 < len__27315__auto___36448) {
      args36443.push(arguments[i__27316__auto___36449]);
      var G__36450 = i__27316__auto___36449 + 1;
      i__27316__auto___36449 = G__36450;
      continue;
    } else {
    }
    break;
  }
  var G__36447 = args36443.length;
  switch(G__36447) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36443.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq36444) {
  var G__36445 = cljs.core.first(seq36444);
  var seq36444__$1 = cljs.core.next(seq36444);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__36445, seq36444__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args36452 = [];
  var len__27315__auto___36456 = arguments.length;
  var i__27316__auto___36457 = 0;
  while (true) {
    if (i__27316__auto___36457 < len__27315__auto___36456) {
      args36452.push(arguments[i__27316__auto___36457]);
      var G__36458 = i__27316__auto___36457 + 1;
      i__27316__auto___36457 = G__36458;
      continue;
    } else {
    }
    break;
  }
  var G__36454 = args36452.length;
  switch(G__36454) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36452.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__36460 = null;
      var G__36460__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__36460__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__36460__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__36460 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__36460__0.call(this);
          case 1:
            return G__36460__1.call(this, result);
          case 2:
            return G__36460__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__36460.cljs$core$IFn$_invoke$arity$0 = G__36460__0;
      G__36460.cljs$core$IFn$_invoke$arity$1 = G__36460__1;
      G__36460.cljs$core$IFn$_invoke$arity$2 = G__36460__2;
      return G__36460;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__27155__auto___36461 = size;
        var i_36462 = 0;
        while (true) {
          if (i_36462 < n__27155__auto___36461) {
            if (cljs.core.truth_(function() {
              var G__36455 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_36462);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36455) : pred.call(null, G__36455);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_36462));
            } else {
            }
            var G__36463 = i_36462 + 1;
            i_36462 = G__36463;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args36464 = [];
  var len__27315__auto___36467 = arguments.length;
  var i__27316__auto___36468 = 0;
  while (true) {
    if (i__27316__auto___36468 < len__27315__auto___36467) {
      args36464.push(arguments[i__27316__auto___36468]);
      var G__36469 = i__27316__auto___36468 + 1;
      i__27316__auto___36468 = G__36469;
      continue;
    } else {
    }
    break;
  }
  var G__36466 = args36464.length;
  switch(G__36466) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36464.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__36471_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__36471_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args36472 = [];
  var len__27315__auto___36477 = arguments.length;
  var i__27316__auto___36478 = 0;
  while (true) {
    if (i__27316__auto___36478 < len__27315__auto___36477) {
      args36472.push(arguments[i__27316__auto___36478]);
      var G__36479 = i__27316__auto___36478 + 1;
      i__27316__auto___36478 = G__36479;
      continue;
    } else {
    }
    break;
  }
  var G__36474 = args36472.length;
  switch(G__36474) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36472.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args36481 = [];
  var len__27315__auto___36489 = arguments.length;
  var i__27316__auto___36490 = 0;
  while (true) {
    if (i__27316__auto___36490 < len__27315__auto___36489) {
      args36481.push(arguments[i__27316__auto___36490]);
      var G__36491 = i__27316__auto___36490 + 1;
      i__27316__auto___36490 = G__36491;
      continue;
    } else {
    }
    break;
  }
  var G__36488 = args36481.length;
  switch(G__36488) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36481.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq36482) {
  var G__36483 = cljs.core.first(seq36482);
  var seq36482__$1 = cljs.core.next(seq36482);
  var G__36484 = cljs.core.first(seq36482__$1);
  var seq36482__$2 = cljs.core.next(seq36482__$1);
  var G__36485 = cljs.core.first(seq36482__$2);
  var seq36482__$3 = cljs.core.next(seq36482__$2);
  var G__36486 = cljs.core.first(seq36482__$3);
  var seq36482__$4 = cljs.core.next(seq36482__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__36483, G__36484, G__36485, G__36486, seq36482__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args36493 = [];
  var len__27315__auto___36496 = arguments.length;
  var i__27316__auto___36497 = 0;
  while (true) {
    if (i__27316__auto___36497 < len__27315__auto___36496) {
      args36493.push(arguments[i__27316__auto___36497]);
      var G__36498 = i__27316__auto___36497 + 1;
      i__27316__auto___36497 = G__36498;
      continue;
    } else {
    }
    break;
  }
  var G__36495 = args36493.length;
  switch(G__36495) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36493.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        var x__27074__auto__ = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad));
        return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args36500 = [];
  var len__27315__auto___36503 = arguments.length;
  var i__27316__auto___36504 = 0;
  while (true) {
    if (i__27316__auto___36504 < len__27315__auto___36503) {
      args36500.push(arguments[i__27316__auto___36504]);
      var G__36505 = i__27316__auto___36504 + 1;
      i__27316__auto___36504 = G__36505;
      continue;
    } else {
    }
    break;
  }
  var G__36502 = args36500.length;
  switch(G__36502) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36500.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__36507 = sentinel;
        var G__36508 = m__$2;
        var G__36509 = cljs.core.next(ks__$1);
        sentinel = G__36507;
        m__$1 = G__36508;
        ks__$1 = G__36509;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__36510, v) {
  var vec__36517 = p__36510;
  var seq__36518 = cljs.core.seq(vec__36517);
  var first__36519 = cljs.core.first(seq__36518);
  var seq__36518__$1 = cljs.core.next(seq__36518);
  var k = first__36519;
  var ks = seq__36518__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args36520 = [];
  var len__27315__auto___36560 = arguments.length;
  var i__27316__auto___36561 = 0;
  while (true) {
    if (i__27316__auto___36561 < len__27315__auto___36560) {
      args36520.push(arguments[i__27316__auto___36561]);
      var G__36562 = i__27316__auto___36561 + 1;
      i__27316__auto___36561 = G__36562;
      continue;
    } else {
    }
    break;
  }
  var G__36529 = args36520.length;
  switch(G__36529) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36520.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__27334__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__36530, f) {
  var vec__36531 = p__36530;
  var seq__36532 = cljs.core.seq(vec__36531);
  var first__36533 = cljs.core.first(seq__36532);
  var seq__36532__$1 = cljs.core.next(seq__36532);
  var k = first__36533;
  var ks = seq__36532__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__36534 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36534) : f.call(null, G__36534);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__36535, f, a) {
  var vec__36536 = p__36535;
  var seq__36537 = cljs.core.seq(vec__36536);
  var first__36538 = cljs.core.first(seq__36537);
  var seq__36537__$1 = cljs.core.next(seq__36537);
  var k = first__36538;
  var ks = seq__36537__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__36539 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__36540 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36539, G__36540) : f.call(null, G__36539, G__36540);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__36541, f, a, b) {
  var vec__36542 = p__36541;
  var seq__36543 = cljs.core.seq(vec__36542);
  var first__36544 = cljs.core.first(seq__36543);
  var seq__36543__$1 = cljs.core.next(seq__36543);
  var k = first__36544;
  var ks = seq__36543__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__36545 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__36546 = a;
      var G__36547 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36545, G__36546, G__36547) : f.call(null, G__36545, G__36546, G__36547);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__36548, f, a, b, c) {
  var vec__36549 = p__36548;
  var seq__36550 = cljs.core.seq(vec__36549);
  var first__36551 = cljs.core.first(seq__36550);
  var seq__36550__$1 = cljs.core.next(seq__36550);
  var k = first__36551;
  var ks = seq__36550__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__36552 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__36553 = a;
      var G__36554 = b;
      var G__36555 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36552, G__36553, G__36554, G__36555) : f.call(null, G__36552, G__36553, G__36554, G__36555);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__36556, f, a, b, c, args) {
  var vec__36557 = p__36556;
  var seq__36558 = cljs.core.seq(vec__36557);
  var first__36559 = cljs.core.first(seq__36558);
  var seq__36558__$1 = cljs.core.next(seq__36558);
  var k = first__36559;
  var ks = seq__36558__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq36521) {
  var G__36522 = cljs.core.first(seq36521);
  var seq36521__$1 = cljs.core.next(seq36521);
  var G__36523 = cljs.core.first(seq36521__$1);
  var seq36521__$2 = cljs.core.next(seq36521__$1);
  var G__36524 = cljs.core.first(seq36521__$2);
  var seq36521__$3 = cljs.core.next(seq36521__$2);
  var G__36525 = cljs.core.first(seq36521__$3);
  var seq36521__$4 = cljs.core.next(seq36521__$3);
  var G__36526 = cljs.core.first(seq36521__$4);
  var seq36521__$5 = cljs.core.next(seq36521__$4);
  var G__36527 = cljs.core.first(seq36521__$5);
  var seq36521__$6 = cljs.core.next(seq36521__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__36522, G__36523, G__36524, G__36525, G__36526, G__36527, seq36521__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args36564 = [];
  var len__27315__auto___36584 = arguments.length;
  var i__27316__auto___36585 = 0;
  while (true) {
    if (i__27316__auto___36585 < len__27315__auto___36584) {
      args36564.push(arguments[i__27316__auto___36585]);
      var G__36586 = i__27316__auto___36585 + 1;
      i__27316__auto___36585 = G__36586;
      continue;
    } else {
    }
    break;
  }
  var G__36573 = args36564.length;
  switch(G__36573) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args36564.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__27334__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__36574 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36574) : f.call(null, G__36574);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__36575 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__36576 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36575, G__36576) : f.call(null, G__36575, G__36576);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__36577 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__36578 = x;
    var G__36579 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36577, G__36578, G__36579) : f.call(null, G__36577, G__36578, G__36579);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__36580 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__36581 = x;
    var G__36582 = y;
    var G__36583 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36580, G__36581, G__36582, G__36583) : f.call(null, G__36580, G__36581, G__36582, G__36583);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq36565) {
  var G__36566 = cljs.core.first(seq36565);
  var seq36565__$1 = cljs.core.next(seq36565);
  var G__36567 = cljs.core.first(seq36565__$1);
  var seq36565__$2 = cljs.core.next(seq36565__$1);
  var G__36568 = cljs.core.first(seq36565__$2);
  var seq36565__$3 = cljs.core.next(seq36565__$2);
  var G__36569 = cljs.core.first(seq36565__$3);
  var seq36565__$4 = cljs.core.next(seq36565__$3);
  var G__36570 = cljs.core.first(seq36565__$4);
  var seq36565__$5 = cljs.core.next(seq36565__$4);
  var G__36571 = cljs.core.first(seq36565__$5);
  var seq36565__$6 = cljs.core.next(seq36565__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__36566, G__36567, G__36568, G__36569, G__36570, G__36571, seq36565__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__36588 = ll - 5;
      var G__36589 = r;
      ll = G__36588;
      ret = G__36589;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__36594 = cljs.core.pv_aget(node, 0);
      var G__36595 = level - 5;
      node = G__36594;
      level = G__36595;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__36596 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__36597 = level - 5;
        node = G__36596;
        level = G__36597;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__36616 = null;
  var G__36616__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36616__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36616 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36616__1.call(this, x);
      case 2:
        return G__36616__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36616.cljs$core$IFn$_invoke$arity$1 = G__36616__1;
  G__36616.cljs$core$IFn$_invoke$arity$2 = G__36616__2;
  return G__36616;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__36617 = null;
  var G__36617__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36617__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36617 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36617__1.call(this, x);
      case 2:
        return G__36617__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36617.cljs$core$IFn$_invoke$arity$1 = G__36617__1;
  G__36617.cljs$core$IFn$_invoke$arity$2 = G__36617__2;
  return G__36617;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__36607 = init__$2;
              var G__36608 = j + i;
              var G__36609 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36607, G__36608, G__36609) : f.call(null, G__36607, G__36608, G__36609);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__36618 = j + 1;
              var G__36619 = init__$3;
              j = G__36618;
              init__$2 = G__36619;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__36620 = i + len;
        var G__36621 = init__$2;
        i = G__36620;
        init__$1 = G__36621;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__36610 = init__$2;
              var G__36611 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36610, G__36611) : f.call(null, G__36610, G__36611);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__36622 = j + 1;
              var G__36623 = init__$3;
              j = G__36622;
              init__$2 = G__36623;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__36624 = i + len;
        var G__36625 = init__$2;
        i = G__36624;
        init__$1 = G__36625;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__36612 = coll__$1;
      var G__36613 = cljs.core.first_array_for_longvec(coll__$1);
      var G__36614 = 0;
      var G__36615 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36612, G__36613, G__36614, G__36615) : cljs.core.chunked_seq.call(null, G__36612, G__36613, G__36614, G__36615);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__27155__auto___36626 = len;
    var i_36627 = 0;
    while (true) {
      if (i_36627 < n__27155__auto___36626) {
        new_tail[i_36627] = self__.tail[i_36627];
        var G__36628 = i_36627 + 1;
        i_36627 = G__36628;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__36629 = null;
  var G__36629__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__36629__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__36629 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36629__2.call(this, self__, k);
      case 3:
        return G__36629__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36629.cljs$core$IFn$_invoke$arity$2 = G__36629__2;
  G__36629.cljs$core$IFn$_invoke$arity$3 = G__36629__3;
  return G__36629;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args36606) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36606)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__36630 = i + 1;
        var G__36631 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__36630;
        out = G__36631;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___36633 = arguments.length;
  var i__27316__auto___36634 = 0;
  while (true) {
    if (i__27316__auto___36634 < len__27315__auto___36633) {
      args__27322__auto__.push(arguments[i__27316__auto___36634]);
      var G__36635 = i__27316__auto___36634 + 1;
      i__27316__auto___36634 = G__36635;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq36632) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq36632));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__36658 = null;
  var G__36658__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36658__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36658 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36658__1.call(this, x);
      case 2:
        return G__36658__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36658.cljs$core$IFn$_invoke$arity$1 = G__36658__1;
  G__36658.cljs$core$IFn$_invoke$arity$2 = G__36658__2;
  return G__36658;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__36659 = null;
  var G__36659__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36659__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36659 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36659__1.call(this, x);
      case 2:
        return G__36659__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36659.cljs$core$IFn$_invoke$arity$1 = G__36659__1;
  G__36659.cljs$core$IFn$_invoke$arity$2 = G__36659__2;
  return G__36659;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__36636 = self__.vec;
      var G__36637 = self__.node;
      var G__36638 = self__.i;
      var G__36639 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36636, G__36637, G__36638, G__36639) : cljs.core.chunked_seq.call(null, G__36636, G__36637, G__36638, G__36639);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__36640 = self__.vec;
    var G__36641 = self__.i + self__.off;
    var G__36642 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__36640, G__36641, G__36642) : cljs.core.subvec.call(null, G__36640, G__36641, G__36642);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__36643 = self__.vec;
    var G__36644 = self__.i + self__.off;
    var G__36645 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__36643, G__36644, G__36645) : cljs.core.subvec.call(null, G__36643, G__36644, G__36645);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__36646 = self__.vec;
      var G__36647 = self__.node;
      var G__36648 = self__.i;
      var G__36649 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36646, G__36647, G__36648, G__36649) : cljs.core.chunked_seq.call(null, G__36646, G__36647, G__36648, G__36649);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__36650 = self__.vec;
    var G__36651 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__36652 = end;
    var G__36653 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36650, G__36651, G__36652, G__36653) : cljs.core.chunked_seq.call(null, G__36650, G__36651, G__36652, G__36653);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__36654 = self__.vec;
    var G__36655 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__36656 = end;
    var G__36657 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__36654, G__36655, G__36656, G__36657) : cljs.core.chunked_seq.call(null, G__36654, G__36655, G__36656, G__36657);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args36660 = [];
  var len__27315__auto___36663 = arguments.length;
  var i__27316__auto___36664 = 0;
  while (true) {
    if (i__27316__auto___36664 < len__27315__auto___36663) {
      args36660.push(arguments[i__27316__auto___36664]);
      var G__36665 = i__27316__auto___36664 + 1;
      i__27316__auto___36664 = G__36665;
      continue;
    } else {
    }
    break;
  }
  var G__36662 = args36660.length;
  switch(G__36662) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36660.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__36687 = null;
  var G__36687__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36687__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__36687 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__36687__1.call(this, x);
      case 2:
        return G__36687__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36687.cljs$core$IFn$_invoke$arity$1 = G__36687__1;
  G__36687.cljs$core$IFn$_invoke$arity$2 = G__36687__2;
  return G__36687;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__36688 = null;
  var G__36688__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36688__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__36688 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__36688__1.call(this, x);
      case 2:
        return G__36688__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36688.cljs$core$IFn$_invoke$arity$1 = G__36688__1;
  G__36688.cljs$core$IFn$_invoke$arity$2 = G__36688__2;
  return G__36688;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__36668 = init__$1;
        var G__36669 = j;
        var G__36670 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36668, G__36669, G__36670) : f.call(null, G__36668, G__36669, G__36670);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__36689 = i + 1;
        var G__36690 = j + 1;
        var G__36691 = init__$2;
        i = G__36689;
        j = G__36690;
        init__$1 = G__36691;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__36671 = self__.meta;
  var G__36672 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__36673 = self__.start;
  var G__36674 = function() {
    var x__26571__auto__ = self__.end;
    var y__26572__auto__ = v_pos + 1;
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var G__36675 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__36671, G__36672, G__36673, G__36674, G__36675) : cljs.core.build_subvec.call(null, G__36671, G__36672, G__36673, G__36674, G__36675);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__36676 = self__.meta;
    var G__36677 = self__.v;
    var G__36678 = self__.start;
    var G__36679 = self__.end - 1;
    var G__36680 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__36676, G__36677, G__36678, G__36679, G__36680) : cljs.core.build_subvec.call(null, G__36676, G__36677, G__36678, G__36679, G__36680);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__36682 = self__.meta;
  var G__36683 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__36684 = self__.start;
  var G__36685 = self__.end + 1;
  var G__36686 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__36682, G__36683, G__36684, G__36685, G__36686) : cljs.core.build_subvec.call(null, G__36682, G__36683, G__36684, G__36685, G__36686);
};
cljs.core.Subvec.prototype.call = function() {
  var G__36692 = null;
  var G__36692__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__36692__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__36692 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36692__2.call(this, self__, k);
      case 3:
        return G__36692__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36692.cljs$core$IFn$_invoke$arity$2 = G__36692__2;
  G__36692.cljs$core$IFn$_invoke$arity$3 = G__36692__3;
  return G__36692;
}();
cljs.core.Subvec.prototype.apply = function(self__, args36667) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36667)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__36693 = meta;
      var G__36694 = v.v;
      var G__36695 = v.start + start;
      var G__36696 = v.start + end;
      var G__36697 = __hash;
      meta = G__36693;
      v = G__36694;
      start = G__36695;
      end = G__36696;
      __hash = G__36697;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args36698 = [];
  var len__27315__auto___36701 = arguments.length;
  var i__27316__auto___36702 = 0;
  while (true) {
    if (i__27316__auto___36702 < len__27315__auto___36701) {
      args36698.push(arguments[i__27316__auto___36702]);
      var G__36703 = i__27316__auto___36702 + 1;
      i__27316__auto___36702 = G__36703;
      continue;
    } else {
    }
    break;
  }
  var G__36700 = args36698.length;
  switch(G__36700) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36698.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__36716 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__36717 = level - 5;
        node = G__36716;
        level = G__36717;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__36721 = null;
  var G__36721__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__36721__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__36721 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36721__2.call(this, self__, k);
      case 3:
        return G__36721__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36721.cljs$core$IFn$_invoke$arity$2 = G__36721__2;
  G__36721.cljs$core$IFn$_invoke$arity$3 = G__36721__3;
  return G__36721;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args36718) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36718)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__26240__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    var and__26228__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__26228__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__26228__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__36722 = null;
  var G__36722__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36722__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36722 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36722__1.call(this, x);
      case 2:
        return G__36722__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36722.cljs$core$IFn$_invoke$arity$1 = G__36722__1;
  G__36722.cljs$core$IFn$_invoke$arity$2 = G__36722__2;
  return G__36722;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__36723 = null;
  var G__36723__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36723__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36723 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36723__1.call(this, x);
      case 2:
        return G__36723__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36723.cljs$core$IFn$_invoke$arity$1 = G__36723__1;
  G__36723.cljs$core$IFn$_invoke$arity$2 = G__36723__2;
  return G__36723;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__36724 = null;
  var G__36724__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36724__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36724 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36724__1.call(this, x);
      case 2:
        return G__36724__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36724.cljs$core$IFn$_invoke$arity$1 = G__36724__1;
  G__36724.cljs$core$IFn$_invoke$arity$2 = G__36724__2;
  return G__36724;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__36725 = null;
  var G__36725__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__36725__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36725 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36725__1.call(this, x);
      case 2:
        return G__36725__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36725.cljs$core$IFn$_invoke$arity$1 = G__36725__1;
  G__36725.cljs$core$IFn$_invoke$arity$2 = G__36725__2;
  return G__36725;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = self__.front;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__26240__auto__ = self__.rear;
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__36726 = i + incr;
        i = G__36726;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__36727 = i + 1;
      var G__36728 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__36727;
      out = G__36728;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_36733 = 0;
  while (true) {
    if (i_36733 < l) {
      var k_36734 = ks[i_36733];
      new_obj[k_36734] = obj[k_36734];
      var G__36735 = i_36733 + 1;
      i_36733 = G__36735;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__36738 = init__$1;
        var G__36739 = k;
        var G__36740 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36738, G__36739, G__36740) : f.call(null, G__36738, G__36739, G__36740);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__36741 = cljs.core.rest(keys__$1);
        var G__36742 = init__$2;
        keys__$1 = G__36741;
        init__$1 = G__36742;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__36736_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__36736_SHARP_, self__.strobj[p1__36736_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__36743 = null;
  var G__36743__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__36743__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__36743 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36743__2.call(this, self__, k);
      case 3:
        return G__36743__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36743.cljs$core$IFn$_invoke$arity$2 = G__36743__2;
  G__36743.cljs$core$IFn$_invoke$arity$3 = G__36743__3;
  return G__36743;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args36737) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36737)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__26240__auto__ = self__.i < self__.base_count;
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__36746 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36746, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36746, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__36749 = i + 2;
        i = G__36749;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__36750 = i + 2;
        i = G__36750;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__36751 = i + 2;
        i = G__36751;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__36752 = i + 2;
        i = G__36752;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__36753 = i + 2;
        i = G__36753;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_36754 = 0;
  while (true) {
    if (i_36754 < l) {
      narr[i_36754] = arr[i_36754];
      var G__36755 = i_36754 + 1;
      i_36754 = G__36755;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__36756 = null;
  var G__36756__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36756__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36756 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36756__1.call(this, x);
      case 2:
        return G__36756__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36756.cljs$core$IFn$_invoke$arity$1 = G__36756__1;
  G__36756.cljs$core$IFn$_invoke$arity$2 = G__36756__2;
  return G__36756;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__36757 = null;
  var G__36757__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36757__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36757 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36757__1.call(this, x);
      case 2:
        return G__36757__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36757.cljs$core$IFn$_invoke$arity$1 = G__36757__1;
  G__36757.cljs$core$IFn$_invoke$arity$2 = G__36757__2;
  return G__36757;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__36759 = cljs.core.seq(coll);
  var chunk__36760 = null;
  var count__36761 = 0;
  var i__36762 = 0;
  while (true) {
    if (i__36762 < count__36761) {
      var vec__36763 = chunk__36760.cljs$core$IIndexed$_nth$arity$2(null, i__36762);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36763, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36763, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__36776 = seq__36759;
      var G__36777 = chunk__36760;
      var G__36778 = count__36761;
      var G__36779 = i__36762 + 1;
      seq__36759 = G__36776;
      chunk__36760 = G__36777;
      count__36761 = G__36778;
      i__36762 = G__36779;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__36759);
      if (temp__4657__auto__) {
        var seq__36759__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__36759__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__36759__$1);
          var G__36780 = cljs.core.chunk_rest(seq__36759__$1);
          var G__36781 = c__27051__auto__;
          var G__36782 = cljs.core.count(c__27051__auto__);
          var G__36783 = 0;
          seq__36759 = G__36780;
          chunk__36760 = G__36781;
          count__36761 = G__36782;
          i__36762 = G__36783;
          continue;
        } else {
          var vec__36766 = cljs.core.first(seq__36759__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36766, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36766, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__36784 = cljs.core.next(seq__36759__$1);
          var G__36785 = null;
          var G__36786 = 0;
          var G__36787 = 0;
          seq__36759 = G__36784;
          chunk__36760 = G__36785;
          count__36761 = G__36786;
          i__36762 = G__36787;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__36769 = init__$1;
        var G__36770 = self__.arr[i];
        var G__36771 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36769, G__36770, G__36771) : f.call(null, G__36769, G__36770, G__36771);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__36788 = i + 2;
        var G__36789 = init__$2;
        i = G__36788;
        init__$1 = G__36789;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__36790 = i + 2;
              i = G__36790;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__36791 = s + 2;
            var G__36792 = d;
            s = G__36791;
            d = G__36792;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__36793 = s + 2;
            var G__36794 = d + 2;
            s = G__36793;
            d = G__36794;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__36775 = cljs.core.aclone(self__.arr);
        G__36775[idx + 1] = v;
        return G__36775;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__36795 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__36796 = cljs.core.next(es);
          ret = G__36795;
          es = G__36796;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__36797 = null;
  var G__36797__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__36797__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__36797 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36797__2.call(this, self__, k);
      case 3:
        return G__36797__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36797.cljs$core$IFn$_invoke$arity$2 = G__36797__2;
  G__36797.cljs$core$IFn$_invoke$arity$3 = G__36797__3;
  return G__36797;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args36758) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36758)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_36798 = 0;
    while (true) {
      if (i_36798 < arr__$1.length) {
        var k_36799 = arr__$1[i_36798];
        var v_36800 = arr__$1[i_36798 + 1];
        var idx_36801 = cljs.core.array_index_of(ret, k_36799);
        if (idx_36801 === -1) {
          ret.push(k_36799);
          ret.push(v_36800);
        } else {
        }
        var G__36802 = i_36798 + 2;
        i_36798 = G__36802;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__36805 = cljs.core.next(es);
          var G__36806 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__36805;
          tcoll__$2 = G__36806;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__36804_36807 = self__.arr;
      G__36804_36807.pop();
      G__36804_36807.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__36808 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__36809 = i + 2;
      out = G__36808;
      i = G__36809;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args36810 = [];
  var len__27315__auto___36815 = arguments.length;
  var i__27316__auto___36816 = 0;
  while (true) {
    if (i__27316__auto___36816 < len__27315__auto___36815) {
      args36810.push(arguments[i__27316__auto___36816]);
      var G__36817 = i__27316__auto___36816 + 1;
      i__27316__auto___36816 = G__36817;
      continue;
    } else {
    }
    break;
  }
  var G__36812 = args36810.length;
  switch(G__36812) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36810.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__36813 = cljs.core.aclone(arr);
  G__36813[i] = a;
  return G__36813;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__36814 = cljs.core.aclone(arr);
  G__36814[i] = a;
  G__36814[j] = b;
  return G__36814;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args36819 = [];
  var len__27315__auto___36822 = arguments.length;
  var i__27316__auto___36823 = 0;
  while (true) {
    if (i__27316__auto___36823 < len__27315__auto___36822) {
      args36819.push(arguments[i__27316__auto___36823]);
      var G__36824 = i__27316__auto___36823 + 1;
      i__27316__auto___36823 = G__36824;
      continue;
    } else {
    }
    break;
  }
  var G__36821 = args36819.length;
  switch(G__36821) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36819.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__36829 = init__$1;
          var G__36830 = k;
          var G__36831 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36829, G__36830, G__36831) : f.call(null, G__36829, G__36830, G__36831);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__36832 = i + 2;
        var G__36833 = init__$2;
        i = G__36832;
        init__$1 = G__36833;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__26240__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__26240__auto____$1) {
      return or__26240__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_36847 = 0;
        var j_36848 = 0;
        while (true) {
          if (i_36847 < 32) {
            if ((self__.bitmap >>> i_36847 & 1) === 0) {
              var G__36849 = i_36847 + 1;
              var G__36850 = j_36848;
              i_36847 = G__36849;
              j_36848 = G__36850;
              continue;
            } else {
              nodes[i_36847] = !(self__.arr[j_36848] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_36848]), self__.arr[j_36848], self__.arr[j_36848 + 1], added_leaf_QMARK_) : self__.arr[j_36848 + 1];
              var G__36851 = i_36847 + 1;
              var G__36852 = j_36848 + 2;
              i_36847 = G__36851;
              j_36848 = G__36852;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__36834 = edit__$1;
          var G__36835 = shift + 5;
          var G__36836 = key_or_nil;
          var G__36837 = val_or_node;
          var G__36838 = hash;
          var G__36839 = key;
          var G__36840 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__36834, G__36835, G__36836, G__36837, G__36838, G__36839, G__36840) : cljs.core.create_node.call(null, G__36834, G__36835, G__36836, G__36837, G__36838, G__36839, G__36840);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_36853 = 0;
      var j_36854 = 0;
      while (true) {
        if (i_36853 < 32) {
          if ((self__.bitmap >>> i_36853 & 1) === 0) {
            var G__36855 = i_36853 + 1;
            var G__36856 = j_36854;
            i_36853 = G__36855;
            j_36854 = G__36856;
            continue;
          } else {
            nodes[i_36853] = !(self__.arr[j_36854] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_36854]), self__.arr[j_36854], self__.arr[j_36854 + 1], added_leaf_QMARK_) : self__.arr[j_36854 + 1];
            var G__36857 = i_36853 + 1;
            var G__36858 = j_36854 + 2;
            i_36853 = G__36857;
            j_36854 = G__36858;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__36841 = shift + 5;
          var G__36842 = key_or_nil;
          var G__36843 = val_or_node;
          var G__36844 = hash;
          var G__36845 = key;
          var G__36846 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__36841, G__36842, G__36843, G__36844, G__36845, G__36846) : cljs.core.create_node.call(null, G__36841, G__36842, G__36843, G__36844, G__36845, G__36846);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__36859 = i + 1;
        var G__36860 = j + 2;
        var G__36861 = bitmap | 1 << i;
        i = G__36859;
        j = G__36860;
        bitmap = G__36861;
        continue;
      } else {
        var G__36862 = i + 1;
        var G__36863 = j;
        var G__36864 = bitmap;
        i = G__36862;
        j = G__36863;
        bitmap = G__36864;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__36865 = i + 1;
          var G__36866 = init__$2;
          i = G__36865;
          init__$1 = G__36866;
          continue;
        }
      } else {
        var G__36867 = i + 1;
        var G__36868 = init__$1;
        i = G__36867;
        init__$1 = G__36868;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__36869 = i + 2;
        i = G__36869;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args36870 = [];
  var len__27315__auto___36873 = arguments.length;
  var i__27316__auto___36874 = 0;
  while (true) {
    if (i__27316__auto___36874 < len__27315__auto___36873) {
      args36870.push(arguments[i__27316__auto___36874]);
      var G__36875 = i__27316__auto___36874 + 1;
      i__27316__auto___36874 = G__36875;
      continue;
    } else {
    }
    break;
  }
  var G__36872 = args36870.length;
  switch(G__36872) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36870.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__36883 = null;
  var G__36883__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36883__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36883 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36883__1.call(this, x);
      case 2:
        return G__36883__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36883.cljs$core$IFn$_invoke$arity$1 = G__36883__1;
  G__36883.cljs$core$IFn$_invoke$arity$2 = G__36883__2;
  return G__36883;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__36884 = null;
  var G__36884__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36884__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36884 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36884__1.call(this, x);
      case 2:
        return G__36884__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36884.cljs$core$IFn$_invoke$arity$1 = G__36884__1;
  G__36884.cljs$core$IFn$_invoke$arity$2 = G__36884__2;
  return G__36884;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? function() {
    var G__36877 = self__.nodes;
    var G__36878 = self__.i + 2;
    var G__36879 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__36877, G__36878, G__36879) : cljs.core.create_inode_seq.call(null, G__36877, G__36878, G__36879);
  }() : function() {
    var G__36880 = self__.nodes;
    var G__36881 = self__.i;
    var G__36882 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__36880, G__36881, G__36882) : cljs.core.create_inode_seq.call(null, G__36880, G__36881, G__36882);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args36885 = [];
  var len__27315__auto___36888 = arguments.length;
  var i__27316__auto___36889 = 0;
  while (true) {
    if (i__27316__auto___36889 < len__27315__auto___36888) {
      args36885.push(arguments[i__27316__auto___36889]);
      var G__36890 = i__27316__auto___36889 + 1;
      i__27316__auto___36889 = G__36890;
      continue;
    } else {
    }
    break;
  }
  var G__36887 = args36885.length;
  switch(G__36887) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36885.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__36892 = j + 2;
              j = G__36892;
              continue;
            }
          } else {
            var G__36893 = j + 2;
            j = G__36893;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__36898 = null;
  var G__36898__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36898__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36898 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36898__1.call(this, x);
      case 2:
        return G__36898__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36898.cljs$core$IFn$_invoke$arity$1 = G__36898__1;
  G__36898.cljs$core$IFn$_invoke$arity$2 = G__36898__2;
  return G__36898;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__36899 = null;
  var G__36899__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36899__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36899 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36899__1.call(this, x);
      case 2:
        return G__36899__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36899.cljs$core$IFn$_invoke$arity$1 = G__36899__1;
  G__36899.cljs$core$IFn$_invoke$arity$2 = G__36899__2;
  return G__36899;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = function() {
    var G__36894 = null;
    var G__36895 = self__.nodes;
    var G__36896 = self__.i;
    var G__36897 = cljs.core.next(self__.s);
    return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__36894, G__36895, G__36896, G__36897) : cljs.core.create_array_node_seq.call(null, G__36894, G__36895, G__36896, G__36897);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args36900 = [];
  var len__27315__auto___36903 = arguments.length;
  var i__27316__auto___36904 = 0;
  while (true) {
    if (i__27316__auto___36904 < len__27315__auto___36903) {
      args36900.push(arguments[i__27316__auto___36904]);
      var G__36905 = i__27316__auto___36904 + 1;
      i__27316__auto___36904 = G__36905;
      continue;
    } else {
    }
    break;
  }
  var G__36902 = args36900.length;
  switch(G__36902) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36900.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__36907 = j + 1;
            j = G__36907;
            continue;
          }
        } else {
          var G__36908 = j + 1;
          j = G__36908;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__36910 = cljs.core.seq(coll);
  var chunk__36911 = null;
  var count__36912 = 0;
  var i__36913 = 0;
  while (true) {
    if (i__36913 < count__36912) {
      var vec__36914 = chunk__36911.cljs$core$IIndexed$_nth$arity$2(null, i__36913);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36914, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36914, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__36922 = seq__36910;
      var G__36923 = chunk__36911;
      var G__36924 = count__36912;
      var G__36925 = i__36913 + 1;
      seq__36910 = G__36922;
      chunk__36911 = G__36923;
      count__36912 = G__36924;
      i__36913 = G__36925;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__36910);
      if (temp__4657__auto__) {
        var seq__36910__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__36910__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__36910__$1);
          var G__36926 = cljs.core.chunk_rest(seq__36910__$1);
          var G__36927 = c__27051__auto__;
          var G__36928 = cljs.core.count(c__27051__auto__);
          var G__36929 = 0;
          seq__36910 = G__36926;
          chunk__36911 = G__36927;
          count__36912 = G__36928;
          i__36913 = G__36929;
          continue;
        } else {
          var vec__36917 = cljs.core.first(seq__36910__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36917, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36917, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__36930 = cljs.core.next(seq__36910__$1);
          var G__36931 = null;
          var G__36932 = 0;
          var G__36933 = 0;
          seq__36910 = G__36930;
          chunk__36911 = G__36931;
          count__36912 = G__36932;
          i__36913 = G__36933;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__36934 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__36935 = cljs.core.next(es);
          ret = G__36934;
          es = G__36935;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__36936 = null;
  var G__36936__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__36936__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__36936 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36936__2.call(this, self__, k);
      case 3:
        return G__36936__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36936.cljs$core$IFn$_invoke$arity$2 = G__36936__2;
  G__36936.cljs$core$IFn$_invoke$arity$3 = G__36936__3;
  return G__36936;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args36909) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36909)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__36937 = i + 2;
      var G__36938 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__36937;
      ret = G__36938;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__36939 = i + 1;
      var G__36940 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__36939;
      out = G__36940;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__36942 = cljs.core.next(es);
          var G__36943 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__36942;
          tcoll__$1 = G__36943;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__36944 = ascending_QMARK_ ? t.left : t.right;
      var G__36945 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__36944;
      stack__$1 = G__36945;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__36946 = null;
  var G__36946__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36946__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36946 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36946__1.call(this, x);
      case 2:
        return G__36946__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36946.cljs$core$IFn$_invoke$arity$1 = G__36946__1;
  G__36946.cljs$core$IFn$_invoke$arity$2 = G__36946__2;
  return G__36946;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__36947 = null;
  var G__36947__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36947__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36947 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36947__1.call(this, x);
      case 2:
        return G__36947__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36947.cljs$core$IFn$_invoke$arity$1 = G__36947__1;
  G__36947.cljs$core$IFn$_invoke$arity$2 = G__36947__2;
  return G__36947;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__36957 = init__$1;
      var G__36958 = node.key;
      var G__36959 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36957, G__36958, G__36959) : f.call(null, G__36957, G__36958, G__36959);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__36961 = null;
  var G__36961__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36961__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36961 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36961__1.call(this, x);
      case 2:
        return G__36961__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36961.cljs$core$IFn$_invoke$arity$1 = G__36961__1;
  G__36961.cljs$core$IFn$_invoke$arity$2 = G__36961__2;
  return G__36961;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__36962 = null;
  var G__36962__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36962__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36962 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36962__1.call(this, x);
      case 2:
        return G__36962__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36962.cljs$core$IFn$_invoke$arity$1 = G__36962__1;
  G__36962.cljs$core$IFn$_invoke$arity$2 = G__36962__2;
  return G__36962;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__27074__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__27074__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto____$1);
  }(), x__27074__auto__);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__36963 = null;
  var G__36963__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__36963__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__36963 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36963__2.call(this, self__, k);
      case 3:
        return G__36963__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36963.cljs$core$IFn$_invoke$arity$2 = G__36963__2;
  G__36963.cljs$core$IFn$_invoke$arity$3 = G__36963__3;
  return G__36963;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args36960) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36960)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__36965 = null;
  var G__36965__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__36965__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36965 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36965__1.call(this, x);
      case 2:
        return G__36965__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36965.cljs$core$IFn$_invoke$arity$1 = G__36965__1;
  G__36965.cljs$core$IFn$_invoke$arity$2 = G__36965__2;
  return G__36965;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__36966 = null;
  var G__36966__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__36966__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__36966 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__36966__1.call(this, x);
      case 2:
        return G__36966__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36966.cljs$core$IFn$_invoke$arity$1 = G__36966__1;
  G__36966.cljs$core$IFn$_invoke$arity$2 = G__36966__2;
  return G__36966;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__27074__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__27074__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto____$1);
  }(), x__27074__auto__);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__36967 = null;
  var G__36967__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__36967__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__36967 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__36967__2.call(this, self__, k);
      case 3:
        return G__36967__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__36967.cljs$core$IFn$_invoke$arity$2 = G__36967__2;
  G__36967.cljs$core$IFn$_invoke$arity$3 = G__36967__3;
  return G__36967;
}();
cljs.core.RedNode.prototype.apply = function(self__, args36964) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args36964)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__36980 = k;
      var G__36981 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__36980, G__36981) : comp.call(null, G__36980, G__36981);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__37000 = k;
      var G__37001 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__37000, G__37001) : comp.call(null, G__37000, G__37001);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__37011 = cljs.core.seq(coll);
  var chunk__37012 = null;
  var count__37013 = 0;
  var i__37014 = 0;
  while (true) {
    if (i__37014 < count__37013) {
      var vec__37015 = chunk__37012.cljs$core$IIndexed$_nth$arity$2(null, i__37014);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37015, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37015, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__37025 = seq__37011;
      var G__37026 = chunk__37012;
      var G__37027 = count__37013;
      var G__37028 = i__37014 + 1;
      seq__37011 = G__37025;
      chunk__37012 = G__37026;
      count__37013 = G__37027;
      i__37014 = G__37028;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__37011);
      if (temp__4657__auto__) {
        var seq__37011__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__37011__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__37011__$1);
          var G__37029 = cljs.core.chunk_rest(seq__37011__$1);
          var G__37030 = c__27051__auto__;
          var G__37031 = cljs.core.count(c__27051__auto__);
          var G__37032 = 0;
          seq__37011 = G__37029;
          chunk__37012 = G__37030;
          count__37013 = G__37031;
          i__37014 = G__37032;
          continue;
        } else {
          var vec__37018 = cljs.core.first(seq__37011__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37018, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37018, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__37033 = cljs.core.next(seq__37011__$1);
          var G__37034 = null;
          var G__37035 = 0;
          var G__37036 = 0;
          seq__37011 = G__37033;
          chunk__37012 = G__37034;
          count__37013 = G__37035;
          i__37014 = G__37036;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__37021 = k;
        var G__37022 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__37021, G__37022) : self__.comp.call(null, G__37021, G__37022);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__37037 = t.left;
          t = G__37037;
          continue;
        } else {
          var G__37038 = t.right;
          t = G__37038;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__37039 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__37040 = cljs.core.next(es);
          ret = G__37039;
          es = G__37040;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__37041 = null;
  var G__37041__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__37041__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__37041 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__37041__2.call(this, self__, k);
      case 3:
        return G__37041__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37041.cljs$core$IFn$_invoke$arity$2 = G__37041__2;
  G__37041.cljs$core$IFn$_invoke$arity$3 = G__37041__3;
  return G__37041;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args37010) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args37010)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__37023 = k;
          var G__37024 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__37023, G__37024) : self__.comp.call(null, G__37023, G__37024);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__37042 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__37043 = t.left;
              stack = G__37042;
              t = G__37043;
              continue;
            } else {
              var G__37044 = stack;
              var G__37045 = t.right;
              stack = G__37044;
              t = G__37045;
              continue;
            }
          } else {
            if (c > 0) {
              var G__37046 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__37047 = t.right;
              stack = G__37046;
              t = G__37047;
              continue;
            } else {
              var G__37048 = stack;
              var G__37049 = t.left;
              stack = G__37048;
              t = G__37049;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37051 = arguments.length;
  var i__27316__auto___37052 = 0;
  while (true) {
    if (i__27316__auto___37052 < len__27315__auto___37051) {
      args__27322__auto__.push(arguments[i__27316__auto___37052]);
      var G__37053 = i__27316__auto___37052 + 1;
      i__27316__auto___37052 = G__37053;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__37054 = cljs.core.nnext(in$);
      var G__37055 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__37054;
      out = G__37055;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq37050) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37050));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37057 = arguments.length;
  var i__27316__auto___37058 = 0;
  while (true) {
    if (i__27316__auto___37058 < len__27315__auto___37057) {
      args__27322__auto__.push(arguments[i__27316__auto___37058]);
      var G__37059 = i__27316__auto___37058 + 1;
      i__27316__auto___37058 = G__37059;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq37056) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37056));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37063 = arguments.length;
  var i__27316__auto___37064 = 0;
  while (true) {
    if (i__27316__auto___37064 < len__27315__auto___37063) {
      args__27322__auto__.push(arguments[i__27316__auto___37064]);
      var G__37065 = i__27316__auto___37064 + 1;
      i__27316__auto___37064 = G__37065;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__37066 = cljs.core.nnext(kvs);
      kvs = G__37066;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq37060) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37060));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37068 = arguments.length;
  var i__27316__auto___37069 = 0;
  while (true) {
    if (i__27316__auto___37069 < len__27315__auto___37068) {
      args__27322__auto__.push(arguments[i__27316__auto___37069]);
      var G__37070 = i__27316__auto___37069 + 1;
      i__27316__auto___37069 = G__37070;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__37071 = cljs.core.nnext(in$);
      var G__37072 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__37071;
      out = G__37072;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq37067) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37067));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37075 = arguments.length;
  var i__27316__auto___37076 = 0;
  while (true) {
    if (i__27316__auto___37076 < len__27315__auto___37075) {
      args__27322__auto__.push(arguments[i__27316__auto___37076]);
      var G__37077 = i__27316__auto___37076 + 1;
      i__27316__auto___37076 = G__37077;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__37078 = cljs.core.nnext(in$);
      var G__37079 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__37078;
      out = G__37079;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq37073) {
  var G__37074 = cljs.core.first(seq37073);
  var seq37073__$1 = cljs.core.next(seq37073);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__37074, seq37073__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__37082 = null;
  var G__37082__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__37082__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__37082 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__37082__1.call(this, x);
      case 2:
        return G__37082__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37082.cljs$core$IFn$_invoke$arity$1 = G__37082__1;
  G__37082.cljs$core$IFn$_invoke$arity$2 = G__37082__2;
  return G__37082;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__37083 = null;
  var G__37083__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__37083__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__37083 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__37083__1.call(this, x);
      case 2:
        return G__37083__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37083.cljs$core$IFn$_invoke$arity$1 = G__37083__1;
  G__37083.cljs$core$IFn$_invoke$arity$2 = G__37083__2;
  return G__37083;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__37086 = null;
  var G__37086__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__37086__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__37086 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__37086__1.call(this, x);
      case 2:
        return G__37086__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37086.cljs$core$IFn$_invoke$arity$1 = G__37086__1;
  G__37086.cljs$core$IFn$_invoke$arity$2 = G__37086__2;
  return G__37086;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__37087 = null;
  var G__37087__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__37087__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__37087 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__37087__1.call(this, x);
      case 2:
        return G__37087__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37087.cljs$core$IFn$_invoke$arity$1 = G__37087__1;
  G__37087.cljs$core$IFn$_invoke$arity$2 = G__37087__2;
  return G__37087;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37091 = arguments.length;
  var i__27316__auto___37092 = 0;
  while (true) {
    if (i__27316__auto___37092 < len__27315__auto___37091) {
      args__27322__auto__.push(arguments[i__27316__auto___37092]);
      var G__37093 = i__27316__auto___37092 + 1;
      i__27316__auto___37092 = G__37093;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__37088_SHARP_, p2__37089_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__26240__auto__ = p1__37088_SHARP_;
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__37089_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq37090) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37090));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37098 = arguments.length;
  var i__27316__auto___37099 = 0;
  while (true) {
    if (i__27316__auto___37099 < len__27315__auto___37098) {
      args__27322__auto__.push(arguments[i__27316__auto___37099]);
      var G__37100 = i__27316__auto___37099 + 1;
      i__27316__auto___37099 = G__37100;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__37096 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__37097 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37096, G__37097) : f.call(null, G__37096, G__37097);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__26240__auto__ = m1;
          if (cljs.core.truth_(or__26240__auto__)) {
            return or__26240__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq37094) {
  var G__37095 = cljs.core.first(seq37094);
  var seq37094__$1 = cljs.core.next(seq37094);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__37095, seq37094__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__37101 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__37102 = cljs.core.next(keys);
      ret = G__37101;
      keys = G__37102;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__37105 = cljs.core.seq(coll);
  var chunk__37106 = null;
  var count__37107 = 0;
  var i__37108 = 0;
  while (true) {
    if (i__37108 < count__37107) {
      var vec__37109 = chunk__37106.cljs$core$IIndexed$_nth$arity$2(null, i__37108);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37109, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37109, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__37115 = seq__37105;
      var G__37116 = chunk__37106;
      var G__37117 = count__37107;
      var G__37118 = i__37108 + 1;
      seq__37105 = G__37115;
      chunk__37106 = G__37116;
      count__37107 = G__37117;
      i__37108 = G__37118;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__37105);
      if (temp__4657__auto__) {
        var seq__37105__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__37105__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__37105__$1);
          var G__37119 = cljs.core.chunk_rest(seq__37105__$1);
          var G__37120 = c__27051__auto__;
          var G__37121 = cljs.core.count(c__27051__auto__);
          var G__37122 = 0;
          seq__37105 = G__37119;
          chunk__37106 = G__37120;
          count__37107 = G__37121;
          i__37108 = G__37122;
          continue;
        } else {
          var vec__37112 = cljs.core.first(seq__37105__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37112, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37112, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__37123 = cljs.core.next(seq__37105__$1);
          var G__37124 = null;
          var G__37125 = 0;
          var G__37126 = 0;
          seq__37105 = G__37123;
          chunk__37106 = G__37124;
          count__37107 = G__37125;
          i__37108 = G__37126;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__37103_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__37103_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__37127 = null;
  var G__37127__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__37127__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__37127 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__37127__2.call(this, self__, k);
      case 3:
        return G__37127__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37127.cljs$core$IFn$_invoke$arity$2 = G__37127__2;
  G__37127.cljs$core$IFn$_invoke$arity$3 = G__37127__3;
  return G__37127;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args37104) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args37104)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__37128 = i + 1;
        var G__37129 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__37128;
        out = G__37129;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__37130 = i + 1;
        var G__37131 = cljs.core._conj_BANG_(out, items[i]);
        i = G__37130;
        out = G__37131;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__37133 = null;
  var G__37133__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__37133__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__37133 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__37133__2.call(this, self__, k);
      case 3:
        return G__37133__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37133.cljs$core$IFn$_invoke$arity$2 = G__37133__2;
  G__37133.cljs$core$IFn$_invoke$arity$3 = G__37133__3;
  return G__37133;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args37132) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args37132)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__37136 = cljs.core.seq(coll);
  var chunk__37137 = null;
  var count__37138 = 0;
  var i__37139 = 0;
  while (true) {
    if (i__37139 < count__37138) {
      var vec__37140 = chunk__37137.cljs$core$IIndexed$_nth$arity$2(null, i__37139);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37140, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37140, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__37146 = seq__37136;
      var G__37147 = chunk__37137;
      var G__37148 = count__37138;
      var G__37149 = i__37139 + 1;
      seq__37136 = G__37146;
      chunk__37137 = G__37147;
      count__37138 = G__37148;
      i__37139 = G__37149;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__37136);
      if (temp__4657__auto__) {
        var seq__37136__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__37136__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__37136__$1);
          var G__37150 = cljs.core.chunk_rest(seq__37136__$1);
          var G__37151 = c__27051__auto__;
          var G__37152 = cljs.core.count(c__27051__auto__);
          var G__37153 = 0;
          seq__37136 = G__37150;
          chunk__37137 = G__37151;
          count__37138 = G__37152;
          i__37139 = G__37153;
          continue;
        } else {
          var vec__37143 = cljs.core.first(seq__37136__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37143, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37143, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__37154 = cljs.core.next(seq__37136__$1);
          var G__37155 = null;
          var G__37156 = 0;
          var G__37157 = 0;
          seq__37136 = G__37154;
          chunk__37137 = G__37155;
          count__37138 = G__37156;
          i__37139 = G__37157;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__37134_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__37134_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__37158 = null;
  var G__37158__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__37158__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__37158 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__37158__2.call(this, self__, k);
      case 3:
        return G__37158__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37158.cljs$core$IFn$_invoke$arity$2 = G__37158__2;
  G__37158.cljs$core$IFn$_invoke$arity$3 = G__37158__3;
  return G__37158;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args37135) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args37135)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__27149__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__27149__auto__.length) {
        var G__37159 = i + 1;
        var G__37160 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__37159;
        res = G__37160;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__37161 = cljs.core.next(in$__$1);
          var G__37162 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__37161;
          out = G__37162;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args37163 = [];
  var len__27315__auto___37167 = arguments.length;
  var i__27316__auto___37168 = 0;
  while (true) {
    if (i__27316__auto___37168 < len__27315__auto___37167) {
      args37163.push(arguments[i__27316__auto___37168]);
      var G__37169 = i__27316__auto___37168 + 1;
      i__27316__auto___37168 = G__37169;
      continue;
    } else {
    }
    break;
  }
  var G__37166 = args37163.length;
  switch(G__37166) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37163.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__27334__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq37164) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37164));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37172 = arguments.length;
  var i__27316__auto___37173 = 0;
  while (true) {
    if (i__27316__auto___37173 < len__27315__auto___37172) {
      args__27322__auto__.push(arguments[i__27316__auto___37173]);
      var G__37174 = i__27316__auto___37173 + 1;
      i__27316__auto___37173 = G__37174;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq37171) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37171));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37177 = arguments.length;
  var i__27316__auto___37178 = 0;
  while (true) {
    if (i__27316__auto___37178 < len__27315__auto___37177) {
      args__27322__auto__.push(arguments[i__27316__auto___37178]);
      var G__37179 = i__27316__auto___37178 + 1;
      i__27316__auto___37178 = G__37179;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq37175) {
  var G__37176 = cljs.core.first(seq37175);
  var seq37175__$1 = cljs.core.next(seq37175);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__37176, seq37175__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args37182 = [];
  var len__27315__auto___37185 = arguments.length;
  var i__27316__auto___37186 = 0;
  while (true) {
    if (i__27316__auto___37186 < len__27315__auto___37185) {
      args37182.push(arguments[i__27316__auto___37186]);
      var G__37187 = i__27316__auto___37186 + 1;
      i__27316__auto___37186 = G__37187;
      continue;
    } else {
    }
    break;
  }
  var G__37184 = args37182.length;
  switch(G__37184) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37182.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__37180_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__37180_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__37180_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__37181_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__37181_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__37181_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args37189 = [];
  var len__27315__auto___37202 = arguments.length;
  var i__27316__auto___37203 = 0;
  while (true) {
    if (i__27316__auto___37203 < len__27315__auto___37202) {
      args37189.push(arguments[i__27316__auto___37203]);
      var G__37204 = i__27316__auto___37203 + 1;
      i__27316__auto___37203 = G__37204;
      continue;
    } else {
    }
    break;
  }
  var G__37191 = args37189.length;
  switch(G__37191) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37189.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__37206 = null;
        var G__37206__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__37206__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__37206__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__37206 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__37206__0.call(this);
            case 1:
              return G__37206__1.call(this, result);
            case 2:
              return G__37206__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__37206.cljs$core$IFn$_invoke$arity$0 = G__37206__0;
        G__37206.cljs$core$IFn$_invoke$arity$1 = G__37206__1;
        G__37206.cljs$core$IFn$_invoke$arity$2 = G__37206__2;
        return G__37206;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__37198, seen__$1) {
        while (true) {
          var vec__37199 = p__37198;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37199, 0, null);
          var xs__$1 = vec__37199;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__37207 = cljs.core.rest(s);
              var G__37208 = seen__$1;
              p__37198 = G__37207;
              seen__$1 = G__37208;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__37209 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__37210 = cljs.core.next(s__$1);
      ret = G__37209;
      s__$1 = G__37210;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__37213 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__37214 = cljs.core.next(ks);
      var G__37215 = cljs.core.next(vs);
      map = G__37213;
      ks = G__37214;
      vs = G__37215;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args37218 = [];
  var len__27315__auto___37225 = arguments.length;
  var i__27316__auto___37226 = 0;
  while (true) {
    if (i__27316__auto___37226 < len__27315__auto___37225) {
      args37218.push(arguments[i__27316__auto___37226]);
      var G__37227 = i__27316__auto___37226 + 1;
      i__27316__auto___37226 = G__37227;
      continue;
    } else {
    }
    break;
  }
  var G__37224 = args37218.length;
  switch(G__37224) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37218.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__37216_SHARP_, p2__37217_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__37216_SHARP_, p2__37217_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq37219) {
  var G__37220 = cljs.core.first(seq37219);
  var seq37219__$1 = cljs.core.next(seq37219);
  var G__37221 = cljs.core.first(seq37219__$1);
  var seq37219__$2 = cljs.core.next(seq37219__$1);
  var G__37222 = cljs.core.first(seq37219__$2);
  var seq37219__$3 = cljs.core.next(seq37219__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__37220, G__37221, G__37222, seq37219__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args37231 = [];
  var len__27315__auto___37238 = arguments.length;
  var i__27316__auto___37239 = 0;
  while (true) {
    if (i__27316__auto___37239 < len__27315__auto___37238) {
      args37231.push(arguments[i__27316__auto___37239]);
      var G__37240 = i__27316__auto___37239 + 1;
      i__27316__auto___37239 = G__37240;
      continue;
    } else {
    }
    break;
  }
  var G__37237 = args37231.length;
  switch(G__37237) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37231.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__37229_SHARP_, p2__37230_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__37229_SHARP_, p2__37230_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq37232) {
  var G__37233 = cljs.core.first(seq37232);
  var seq37232__$1 = cljs.core.next(seq37232);
  var G__37234 = cljs.core.first(seq37232__$1);
  var seq37232__$2 = cljs.core.next(seq37232__$1);
  var G__37235 = cljs.core.first(seq37232__$2);
  var seq37232__$3 = cljs.core.next(seq37232__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__37233, G__37234, G__37235, seq37232__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args37242 = [];
  var len__27315__auto___37245 = arguments.length;
  var i__27316__auto___37246 = 0;
  while (true) {
    if (i__27316__auto___37246 < len__27315__auto___37245) {
      args37242.push(arguments[i__27316__auto___37246]);
      var G__37247 = i__27316__auto___37246 + 1;
      i__27316__auto___37246 = G__37247;
      continue;
    } else {
    }
    break;
  }
  var G__37244 = args37242.length;
  switch(G__37244) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37242.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__37249 = null;
        var G__37249__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__37249__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__37249__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__37249 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__37249__0.call(this);
            case 1:
              return G__37249__1.call(this, result);
            case 2:
              return G__37249__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__37249.cljs$core$IFn$_invoke$arity$0 = G__37249__0;
        G__37249.cljs$core$IFn$_invoke$arity$1 = G__37249__1;
        G__37249.cljs$core$IFn$_invoke$arity$2 = G__37249__2;
        return G__37249;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args37250 = [];
  var len__27315__auto___37254 = arguments.length;
  var i__27316__auto___37255 = 0;
  while (true) {
    if (i__27316__auto___37255 < len__27315__auto___37254) {
      args37250.push(arguments[i__27316__auto___37255]);
      var G__37256 = i__27316__auto___37255 + 1;
      i__27316__auto___37255 = G__37256;
      continue;
    } else {
    }
    break;
  }
  var G__37252 = args37250.length;
  switch(G__37252) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37250.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__37258 = null;
      var G__37258__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__37258__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__37258__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__37258 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__37258__0.call(this);
          case 1:
            return G__37258__1.call(this, result);
          case 2:
            return G__37258__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__37258.cljs$core$IFn$_invoke$arity$0 = G__37258__0;
      G__37258.cljs$core$IFn$_invoke$arity$1 = G__37258__1;
      G__37258.cljs$core$IFn$_invoke$arity$2 = G__37258__2;
      return G__37258;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__37253 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__37253) : pred.call(null, G__37253);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__37263 = function() {
      var G__37265 = cljs.core._entry_key(sc, e);
      var G__37266 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__37265, G__37266) : comp.call(null, G__37265, G__37266);
    }();
    var G__37264 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__37263, G__37264) : test.call(null, G__37263, G__37264);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args37267 = [];
  var len__27315__auto___37276 = arguments.length;
  var i__27316__auto___37277 = 0;
  while (true) {
    if (i__27316__auto___37277 < len__27315__auto___37276) {
      args37267.push(arguments[i__27316__auto___37277]);
      var G__37278 = i__27316__auto___37277 + 1;
      i__27316__auto___37277 = G__37278;
      continue;
    } else {
    }
    break;
  }
  var G__37269 = args37267.length;
  switch(G__37269) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37267.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__37270 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37270, 0, null);
      var s = vec__37270;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__37273 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37273, 0, null);
    var s = vec__37273;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args37280 = [];
  var len__27315__auto___37289 = arguments.length;
  var i__27316__auto___37290 = 0;
  while (true) {
    if (i__27316__auto___37290 < len__27315__auto___37289) {
      args37280.push(arguments[i__27316__auto___37290]);
      var G__37291 = i__27316__auto___37290 + 1;
      i__27316__auto___37290 = G__37291;
      continue;
    } else {
    }
    break;
  }
  var G__37282 = args37280.length;
  switch(G__37282) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37280.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__37283 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37283, 0, null);
      var s = vec__37283;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__37286 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37286, 0, null);
    var s = vec__37286;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__37294 = null;
  var G__37294__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__37294__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__37294 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__37294__1.call(this, x);
      case 2:
        return G__37294__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37294.cljs$core$IFn$_invoke$arity$1 = G__37294__1;
  G__37294.cljs$core$IFn$_invoke$arity$2 = G__37294__2;
  return G__37294;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__37295 = null;
  var G__37295__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__37295__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__37295 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__37295__1.call(this, x);
      case 2:
        return G__37295__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37295.cljs$core$IFn$_invoke$arity$1 = G__37295__1;
  G__37295.cljs$core$IFn$_invoke$arity$2 = G__37295__2;
  return G__37295;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__37293 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__37293);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__37296 = i + self__.step;
        var G__37297 = ret__$1;
        i = G__37296;
        ret = G__37297;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args37298 = [];
  var len__27315__auto___37301 = arguments.length;
  var i__27316__auto___37302 = 0;
  while (true) {
    if (i__27316__auto___37302 < len__27315__auto___37301) {
      args37298.push(arguments[i__27316__auto___37302]);
      var G__37303 = i__27316__auto___37302 + 1;
      i__27316__auto___37302 = G__37303;
      continue;
    } else {
    }
    break;
  }
  var G__37300 = args37298.length;
  switch(G__37300) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37298.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args37305 = [];
  var len__27315__auto___37308 = arguments.length;
  var i__27316__auto___37309 = 0;
  while (true) {
    if (i__27316__auto___37309 < len__27315__auto___37308) {
      args37305.push(arguments[i__27316__auto___37309]);
      var G__37310 = i__27316__auto___37309 + 1;
      i__27316__auto___37309 = G__37310;
      continue;
    } else {
    }
    break;
  }
  var G__37307 = args37305.length;
  switch(G__37307) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37305.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__37312 = null;
        var G__37312__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__37312__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__37312__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__37312 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__37312__0.call(this);
            case 1:
              return G__37312__1.call(this, result);
            case 2:
              return G__37312__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__37312.cljs$core$IFn$_invoke$arity$0 = G__37312__0;
        G__37312.cljs$core$IFn$_invoke$arity$1 = G__37312__1;
        G__37312.cljs$core$IFn$_invoke$arity$2 = G__37312__2;
        return G__37312;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args37314 = [];
  var len__27315__auto___37317 = arguments.length;
  var i__27316__auto___37318 = 0;
  while (true) {
    if (i__27316__auto___37318 < len__27315__auto___37317) {
      args37314.push(arguments[i__27316__auto___37318]);
      var G__37319 = i__27316__auto___37318 + 1;
      i__27316__auto___37318 = G__37319;
      continue;
    } else {
    }
    break;
  }
  var G__37316 = args37314.length;
  switch(G__37316) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37314.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__37321 = null;
        var G__37321__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__37321__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__37321__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__37321 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__37321__0.call(this);
            case 1:
              return G__37321__1.call(this, result);
            case 2:
              return G__37321__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__37321.cljs$core$IFn$_invoke$arity$0 = G__37321__0;
        G__37321.cljs$core$IFn$_invoke$arity$1 = G__37321__1;
        G__37321.cljs$core$IFn$_invoke$arity$2 = G__37321__2;
        return G__37321;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__37313_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__37313_SHARP_) : f.call(null, p1__37313_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args37322 = [];
  var len__27315__auto___37327 = arguments.length;
  var i__27316__auto___37328 = 0;
  while (true) {
    if (i__27316__auto___37328 < len__27315__auto___37327) {
      args37322.push(arguments[i__27316__auto___37328]);
      var G__37329 = i__27316__auto___37328 + 1;
      i__27316__auto___37328 = G__37329;
      continue;
    } else {
    }
    break;
  }
  var G__37324 = args37322.length;
  switch(G__37324) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37322.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      var x__27074__auto__ = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    var x__27074__auto__ = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init) : cljs.core.deref.call(null, init);
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__37325 = init;
          var G__37326 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37325, G__37326) : f.call(null, G__37325, G__37326);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args37341 = [];
  var len__27315__auto___37348 = arguments.length;
  var i__27316__auto___37349 = 0;
  while (true) {
    if (i__27316__auto___37349 < len__27315__auto___37348) {
      args37341.push(arguments[i__27316__auto___37349]);
      var G__37350 = i__27316__auto___37349 + 1;
      i__27316__auto___37349 = G__37350;
      continue;
    } else {
    }
    break;
  }
  var G__37347 = args37341.length;
  switch(G__37347) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37341.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__37352 = null;
    var G__37352__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__37352__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__37352__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__37352__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__37352__4 = function() {
      var G__37353__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__37353 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__37354__i = 0, G__37354__a = new Array(arguments.length - 3);
          while (G__37354__i < G__37354__a.length) {
            G__37354__a[G__37354__i] = arguments[G__37354__i + 3];
            ++G__37354__i;
          }
          args = new cljs.core.IndexedSeq(G__37354__a, 0);
        }
        return G__37353__delegate.call(this, x, y, z, args);
      };
      G__37353.cljs$lang$maxFixedArity = 3;
      G__37353.cljs$lang$applyTo = function(arglist__37355) {
        var x = cljs.core.first(arglist__37355);
        arglist__37355 = cljs.core.next(arglist__37355);
        var y = cljs.core.first(arglist__37355);
        arglist__37355 = cljs.core.next(arglist__37355);
        var z = cljs.core.first(arglist__37355);
        var args = cljs.core.rest(arglist__37355);
        return G__37353__delegate(x, y, z, args);
      };
      G__37353.cljs$core$IFn$_invoke$arity$variadic = G__37353__delegate;
      return G__37353;
    }();
    G__37352 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__37352__0.call(this);
        case 1:
          return G__37352__1.call(this, x);
        case 2:
          return G__37352__2.call(this, x, y);
        case 3:
          return G__37352__3.call(this, x, y, z);
        default:
          var G__37356 = null;
          if (arguments.length > 3) {
            var G__37357__i = 0, G__37357__a = new Array(arguments.length - 3);
            while (G__37357__i < G__37357__a.length) {
              G__37357__a[G__37357__i] = arguments[G__37357__i + 3];
              ++G__37357__i;
            }
            G__37356 = new cljs.core.IndexedSeq(G__37357__a, 0);
          }
          return G__37352__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__37356);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__37352.cljs$lang$maxFixedArity = 3;
    G__37352.cljs$lang$applyTo = G__37352__4.cljs$lang$applyTo;
    G__37352.cljs$core$IFn$_invoke$arity$0 = G__37352__0;
    G__37352.cljs$core$IFn$_invoke$arity$1 = G__37352__1;
    G__37352.cljs$core$IFn$_invoke$arity$2 = G__37352__2;
    G__37352.cljs$core$IFn$_invoke$arity$3 = G__37352__3;
    G__37352.cljs$core$IFn$_invoke$arity$variadic = G__37352__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__37352;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__37358 = null;
    var G__37358__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__37358__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__37358__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__37358__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__37358__4 = function() {
      var G__37359__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__37359 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__37360__i = 0, G__37360__a = new Array(arguments.length - 3);
          while (G__37360__i < G__37360__a.length) {
            G__37360__a[G__37360__i] = arguments[G__37360__i + 3];
            ++G__37360__i;
          }
          args = new cljs.core.IndexedSeq(G__37360__a, 0);
        }
        return G__37359__delegate.call(this, x, y, z, args);
      };
      G__37359.cljs$lang$maxFixedArity = 3;
      G__37359.cljs$lang$applyTo = function(arglist__37361) {
        var x = cljs.core.first(arglist__37361);
        arglist__37361 = cljs.core.next(arglist__37361);
        var y = cljs.core.first(arglist__37361);
        arglist__37361 = cljs.core.next(arglist__37361);
        var z = cljs.core.first(arglist__37361);
        var args = cljs.core.rest(arglist__37361);
        return G__37359__delegate(x, y, z, args);
      };
      G__37359.cljs$core$IFn$_invoke$arity$variadic = G__37359__delegate;
      return G__37359;
    }();
    G__37358 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__37358__0.call(this);
        case 1:
          return G__37358__1.call(this, x);
        case 2:
          return G__37358__2.call(this, x, y);
        case 3:
          return G__37358__3.call(this, x, y, z);
        default:
          var G__37362 = null;
          if (arguments.length > 3) {
            var G__37363__i = 0, G__37363__a = new Array(arguments.length - 3);
            while (G__37363__i < G__37363__a.length) {
              G__37363__a[G__37363__i] = arguments[G__37363__i + 3];
              ++G__37363__i;
            }
            G__37362 = new cljs.core.IndexedSeq(G__37363__a, 0);
          }
          return G__37358__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__37362);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__37358.cljs$lang$maxFixedArity = 3;
    G__37358.cljs$lang$applyTo = G__37358__4.cljs$lang$applyTo;
    G__37358.cljs$core$IFn$_invoke$arity$0 = G__37358__0;
    G__37358.cljs$core$IFn$_invoke$arity$1 = G__37358__1;
    G__37358.cljs$core$IFn$_invoke$arity$2 = G__37358__2;
    G__37358.cljs$core$IFn$_invoke$arity$3 = G__37358__3;
    G__37358.cljs$core$IFn$_invoke$arity$variadic = G__37358__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__37358;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__37364 = null;
    var G__37364__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__37364__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__37364__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__37364__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__37364__4 = function() {
      var G__37365__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__37365 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__37366__i = 0, G__37366__a = new Array(arguments.length - 3);
          while (G__37366__i < G__37366__a.length) {
            G__37366__a[G__37366__i] = arguments[G__37366__i + 3];
            ++G__37366__i;
          }
          args = new cljs.core.IndexedSeq(G__37366__a, 0);
        }
        return G__37365__delegate.call(this, x, y, z, args);
      };
      G__37365.cljs$lang$maxFixedArity = 3;
      G__37365.cljs$lang$applyTo = function(arglist__37367) {
        var x = cljs.core.first(arglist__37367);
        arglist__37367 = cljs.core.next(arglist__37367);
        var y = cljs.core.first(arglist__37367);
        arglist__37367 = cljs.core.next(arglist__37367);
        var z = cljs.core.first(arglist__37367);
        var args = cljs.core.rest(arglist__37367);
        return G__37365__delegate(x, y, z, args);
      };
      G__37365.cljs$core$IFn$_invoke$arity$variadic = G__37365__delegate;
      return G__37365;
    }();
    G__37364 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__37364__0.call(this);
        case 1:
          return G__37364__1.call(this, x);
        case 2:
          return G__37364__2.call(this, x, y);
        case 3:
          return G__37364__3.call(this, x, y, z);
        default:
          var G__37368 = null;
          if (arguments.length > 3) {
            var G__37369__i = 0, G__37369__a = new Array(arguments.length - 3);
            while (G__37369__i < G__37369__a.length) {
              G__37369__a[G__37369__i] = arguments[G__37369__i + 3];
              ++G__37369__i;
            }
            G__37368 = new cljs.core.IndexedSeq(G__37369__a, 0);
          }
          return G__37364__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__37368);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__37364.cljs$lang$maxFixedArity = 3;
    G__37364.cljs$lang$applyTo = G__37364__4.cljs$lang$applyTo;
    G__37364.cljs$core$IFn$_invoke$arity$0 = G__37364__0;
    G__37364.cljs$core$IFn$_invoke$arity$1 = G__37364__1;
    G__37364.cljs$core$IFn$_invoke$arity$2 = G__37364__2;
    G__37364.cljs$core$IFn$_invoke$arity$3 = G__37364__3;
    G__37364.cljs$core$IFn$_invoke$arity$variadic = G__37364__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__37364;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__37370 = null;
      var G__37370__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__37331_SHARP_, p2__37332_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__37331_SHARP_, p2__37332_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__37332_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__37332_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__37370__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__37333_SHARP_, p2__37334_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__37333_SHARP_, p2__37334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__37334_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__37334_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__37370__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__37335_SHARP_, p2__37336_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__37335_SHARP_, p2__37336_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__37336_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__37336_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__37370__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__37337_SHARP_, p2__37338_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__37337_SHARP_, p2__37338_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__37338_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__37338_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__37370__4 = function() {
        var G__37371__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__37339_SHARP_, p2__37340_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__37339_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__37340_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__37371 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__37372__i = 0, G__37372__a = new Array(arguments.length - 3);
            while (G__37372__i < G__37372__a.length) {
              G__37372__a[G__37372__i] = arguments[G__37372__i + 3];
              ++G__37372__i;
            }
            args = new cljs.core.IndexedSeq(G__37372__a, 0);
          }
          return G__37371__delegate.call(this, x, y, z, args);
        };
        G__37371.cljs$lang$maxFixedArity = 3;
        G__37371.cljs$lang$applyTo = function(arglist__37373) {
          var x = cljs.core.first(arglist__37373);
          arglist__37373 = cljs.core.next(arglist__37373);
          var y = cljs.core.first(arglist__37373);
          arglist__37373 = cljs.core.next(arglist__37373);
          var z = cljs.core.first(arglist__37373);
          var args = cljs.core.rest(arglist__37373);
          return G__37371__delegate(x, y, z, args);
        };
        G__37371.cljs$core$IFn$_invoke$arity$variadic = G__37371__delegate;
        return G__37371;
      }();
      G__37370 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__37370__0.call(this);
          case 1:
            return G__37370__1.call(this, x);
          case 2:
            return G__37370__2.call(this, x, y);
          case 3:
            return G__37370__3.call(this, x, y, z);
          default:
            var G__37374 = null;
            if (arguments.length > 3) {
              var G__37375__i = 0, G__37375__a = new Array(arguments.length - 3);
              while (G__37375__i < G__37375__a.length) {
                G__37375__a[G__37375__i] = arguments[G__37375__i + 3];
                ++G__37375__i;
              }
              G__37374 = new cljs.core.IndexedSeq(G__37375__a, 0);
            }
            return G__37370__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__37374);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__37370.cljs$lang$maxFixedArity = 3;
      G__37370.cljs$lang$applyTo = G__37370__4.cljs$lang$applyTo;
      G__37370.cljs$core$IFn$_invoke$arity$0 = G__37370__0;
      G__37370.cljs$core$IFn$_invoke$arity$1 = G__37370__1;
      G__37370.cljs$core$IFn$_invoke$arity$2 = G__37370__2;
      G__37370.cljs$core$IFn$_invoke$arity$3 = G__37370__3;
      G__37370.cljs$core$IFn$_invoke$arity$variadic = G__37370__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__37370;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq37342) {
  var G__37343 = cljs.core.first(seq37342);
  var seq37342__$1 = cljs.core.next(seq37342);
  var G__37344 = cljs.core.first(seq37342__$1);
  var seq37342__$2 = cljs.core.next(seq37342__$1);
  var G__37345 = cljs.core.first(seq37342__$2);
  var seq37342__$3 = cljs.core.next(seq37342__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__37343, G__37344, G__37345, seq37342__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args37376 = [];
  var len__27315__auto___37379 = arguments.length;
  var i__27316__auto___37380 = 0;
  while (true) {
    if (i__27316__auto___37380 < len__27315__auto___37379) {
      args37376.push(arguments[i__27316__auto___37380]);
      var G__37381 = i__27316__auto___37380 + 1;
      i__27316__auto___37380 = G__37381;
      continue;
    } else {
    }
    break;
  }
  var G__37378 = args37376.length;
  switch(G__37378) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37376.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__37383 = cljs.core.next(coll);
      coll = G__37383;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__37384 = n - 1;
      var G__37385 = cljs.core.next(coll);
      n = G__37384;
      coll = G__37385;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args37386 = [];
  var len__27315__auto___37389 = arguments.length;
  var i__27316__auto___37390 = 0;
  while (true) {
    if (i__27316__auto___37390 < len__27315__auto___37389) {
      args37386.push(arguments[i__27316__auto___37390]);
      var G__37391 = i__27316__auto___37390 + 1;
      i__27316__auto___37390 = G__37391;
      continue;
    } else {
    }
    break;
  }
  var G__37388 = args37386.length;
  switch(G__37388) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37386.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__37396 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37396, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37396, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__26240__auto__ = flags;
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_37406 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__26240__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__37407_37413 = cljs.core.first(coll);
          var G__37408_37414 = writer;
          var G__37409_37415 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__37407_37413, G__37408_37414, G__37409_37415) : print_one.call(null, G__37407_37413, G__37408_37414, G__37409_37415);
        } else {
        }
        var coll_37416__$1 = cljs.core.next(coll);
        var n_37417 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_37416__$1 && (n_37417 == null || !(n_37417 === 0))) {
            cljs.core._write(writer, sep);
            var G__37410_37418 = cljs.core.first(coll_37416__$1);
            var G__37411_37419 = writer;
            var G__37412_37420 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__37410_37418, G__37411_37419, G__37412_37420) : print_one.call(null, G__37410_37418, G__37411_37419, G__37412_37420);
            var G__37421 = cljs.core.next(coll_37416__$1);
            var G__37422 = n_37417 - 1;
            coll_37416__$1 = G__37421;
            n_37417 = G__37422;
            continue;
          } else {
            if (cljs.core.seq(coll_37416__$1) && n_37417 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__26240__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__26240__auto__)) {
                  return or__26240__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_37406;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37429 = arguments.length;
  var i__27316__auto___37430 = 0;
  while (true) {
    if (i__27316__auto___37430 < len__27315__auto___37429) {
      args__27322__auto__.push(arguments[i__27316__auto___37430]);
      var G__37431 = i__27316__auto___37430 + 1;
      i__27316__auto___37430 = G__37431;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__37425 = cljs.core.seq(ss);
  var chunk__37426 = null;
  var count__37427 = 0;
  var i__37428 = 0;
  while (true) {
    if (i__37428 < count__37427) {
      var s = chunk__37426.cljs$core$IIndexed$_nth$arity$2(null, i__37428);
      cljs.core._write(writer, s);
      var G__37432 = seq__37425;
      var G__37433 = chunk__37426;
      var G__37434 = count__37427;
      var G__37435 = i__37428 + 1;
      seq__37425 = G__37432;
      chunk__37426 = G__37433;
      count__37427 = G__37434;
      i__37428 = G__37435;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__37425);
      if (temp__4657__auto__) {
        var seq__37425__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__37425__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__37425__$1);
          var G__37436 = cljs.core.chunk_rest(seq__37425__$1);
          var G__37437 = c__27051__auto__;
          var G__37438 = cljs.core.count(c__27051__auto__);
          var G__37439 = 0;
          seq__37425 = G__37436;
          chunk__37426 = G__37437;
          count__37427 = G__37438;
          i__37428 = G__37439;
          continue;
        } else {
          var s = cljs.core.first(seq__37425__$1);
          cljs.core._write(writer, s);
          var G__37440 = cljs.core.next(seq__37425__$1);
          var G__37441 = null;
          var G__37442 = 0;
          var G__37443 = 0;
          seq__37425 = G__37440;
          chunk__37426 = G__37441;
          count__37427 = G__37442;
          i__37428 = G__37443;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq37423) {
  var G__37424 = cljs.core.first(seq37423);
  var seq37423__$1 = cljs.core.next(seq37423);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__37424, seq37423__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj37445 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj37445;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__26228__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__26228__auto__) {
    var and__26228__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__26228__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__37460_37468 = cljs.core.meta(obj);
      var G__37461_37469 = writer;
      var G__37462_37470 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__37460_37468, G__37461_37469, G__37462_37470) : cljs.core.pr_writer.call(null, G__37460_37468, G__37461_37469, G__37462_37470);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__37464 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__37465 = cljs.core.pr_writer;
            var G__37466 = writer;
            var G__37467 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__37464, G__37465, G__37466, G__37467) : cljs.core.print_map.call(null, G__37464, G__37465, G__37466, G__37467);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__26240__auto__ = name == null;
                    if (or__26240__auto__) {
                      return or__26240__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__37471 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__37471;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__26240__auto__ = name == null;
                          if (or__26240__auto__) {
                            return or__26240__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__37475 = obj;
    var G__37476 = writer;
    var G__37477 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__37475, G__37476, G__37477) : alt_impl.call(null, G__37475, G__37476, G__37477);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__37482 = cljs.core.seq(cljs.core.next(objs));
  var chunk__37483 = null;
  var count__37484 = 0;
  var i__37485 = 0;
  while (true) {
    if (i__37485 < count__37484) {
      var obj = chunk__37483.cljs$core$IIndexed$_nth$arity$2(null, i__37485);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__37486 = seq__37482;
      var G__37487 = chunk__37483;
      var G__37488 = count__37484;
      var G__37489 = i__37485 + 1;
      seq__37482 = G__37486;
      chunk__37483 = G__37487;
      count__37484 = G__37488;
      i__37485 = G__37489;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__37482);
      if (temp__4657__auto__) {
        var seq__37482__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__37482__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__37482__$1);
          var G__37490 = cljs.core.chunk_rest(seq__37482__$1);
          var G__37491 = c__27051__auto__;
          var G__37492 = cljs.core.count(c__27051__auto__);
          var G__37493 = 0;
          seq__37482 = G__37490;
          chunk__37483 = G__37491;
          count__37484 = G__37492;
          i__37485 = G__37493;
          continue;
        } else {
          var obj = cljs.core.first(seq__37482__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__37494 = cljs.core.next(seq__37482__$1);
          var G__37495 = null;
          var G__37496 = 0;
          var G__37497 = 0;
          seq__37482 = G__37494;
          chunk__37483 = G__37495;
          count__37484 = G__37496;
          i__37485 = G__37497;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args37498 = [];
  var len__27315__auto___37501 = arguments.length;
  var i__27316__auto___37502 = 0;
  while (true) {
    if (i__27316__auto___37502 < len__27315__auto___37501) {
      args37498.push(arguments[i__27316__auto___37502]);
      var G__37503 = i__27316__auto___37502 + 1;
      i__27316__auto___37502 = G__37503;
      continue;
    } else {
    }
    break;
  }
  var G__37500 = args37498.length;
  switch(G__37500) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37498.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37506 = arguments.length;
  var i__27316__auto___37507 = 0;
  while (true) {
    if (i__27316__auto___37507 < len__27315__auto___37506) {
      args__27322__auto__.push(arguments[i__27316__auto___37507]);
      var G__37508 = i__27316__auto___37507 + 1;
      i__27316__auto___37507 = G__37508;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq37505) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37505));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37510 = arguments.length;
  var i__27316__auto___37511 = 0;
  while (true) {
    if (i__27316__auto___37511 < len__27315__auto___37510) {
      args__27322__auto__.push(arguments[i__27316__auto___37511]);
      var G__37512 = i__27316__auto___37511 + 1;
      i__27316__auto___37511 = G__37512;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq37509) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37509));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37514 = arguments.length;
  var i__27316__auto___37515 = 0;
  while (true) {
    if (i__27316__auto___37515 < len__27315__auto___37514) {
      args__27322__auto__.push(arguments[i__27316__auto___37515]);
      var G__37516 = i__27316__auto___37515 + 1;
      i__27316__auto___37515 = G__37516;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq37513) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37513));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__37517__i = 0, G__37517__a = new Array(arguments.length - 0);
      while (G__37517__i < G__37517__a.length) {
        G__37517__a[G__37517__i] = arguments[G__37517__i + 0];
        ++G__37517__i;
      }
      objs = new cljs.core.IndexedSeq(G__37517__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__37518) {
    var objs = cljs.core.seq(arglist__37518);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37520 = arguments.length;
  var i__27316__auto___37521 = 0;
  while (true) {
    if (i__27316__auto___37521 < len__27315__auto___37520) {
      args__27322__auto__.push(arguments[i__27316__auto___37521]);
      var G__37522 = i__27316__auto___37521 + 1;
      i__27316__auto___37521 = G__37522;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq37519) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37519));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37524 = arguments.length;
  var i__27316__auto___37525 = 0;
  while (true) {
    if (i__27316__auto___37525 < len__27315__auto___37524) {
      args__27322__auto__.push(arguments[i__27316__auto___37525]);
      var G__37526 = i__27316__auto___37525 + 1;
      i__27316__auto___37525 = G__37526;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq37523) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37523));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37528 = arguments.length;
  var i__27316__auto___37529 = 0;
  while (true) {
    if (i__27316__auto___37529 < len__27315__auto___37528) {
      args__27322__auto__.push(arguments[i__27316__auto___37529]);
      var G__37530 = i__27316__auto___37529 + 1;
      i__27316__auto___37529 = G__37530;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq37527) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37527));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37532 = arguments.length;
  var i__27316__auto___37533 = 0;
  while (true) {
    if (i__27316__auto___37533 < len__27315__auto___37532) {
      args__27322__auto__.push(arguments[i__27316__auto___37533]);
      var G__37534 = i__27316__auto___37533 + 1;
      i__27316__auto___37533 = G__37534;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq37531) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37531));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__37541_37547 = cljs.core.key(e);
    var G__37542_37548 = w;
    var G__37543_37549 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__37541_37547, G__37542_37548, G__37543_37549) : print_one.call(null, G__37541_37547, G__37542_37548, G__37543_37549);
    cljs.core._write(w, " ");
    var G__37544 = cljs.core.val(e);
    var G__37545 = w;
    var G__37546 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__37544, G__37545, G__37546) : print_one.call(null, G__37544, G__37545, G__37546);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37553 = arguments.length;
  var i__27316__auto___37554 = 0;
  while (true) {
    if (i__27316__auto___37554 < len__27315__auto___37553) {
      args__27322__auto__.push(arguments[i__27316__auto___37554]);
      var G__37555 = i__27316__auto___37554 + 1;
      i__27316__auto___37554 = G__37555;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq37550) {
  var G__37551 = cljs.core.first(seq37550);
  var seq37550__$1 = cljs.core.next(seq37550);
  var G__37552 = cljs.core.first(seq37550__$1);
  var seq37550__$2 = cljs.core.next(seq37550__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__37551, G__37552, seq37550__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args37556 = [];
  var len__27315__auto___37559 = arguments.length;
  var i__27316__auto___37560 = 0;
  while (true) {
    if (i__27316__auto___37560 < len__27315__auto___37559) {
      args37556.push(arguments[i__27316__auto___37560]);
      var G__37561 = i__27316__auto___37560 + 1;
      i__27316__auto___37560 = G__37561;
      continue;
    } else {
    }
    break;
  }
  var G__37558 = args37556.length;
  switch(G__37558) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37556.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__37563_SHARP_, p2__37564_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__37563_SHARP_, p2__37564_SHARP_) : rf.call(null, p1__37563_SHARP_, p2__37564_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__37565 = null;
      var G__37565__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__37565__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__37565__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__37565 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__37565__0.call(this);
          case 1:
            return G__37565__1.call(this, result);
          case 2:
            return G__37565__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__37565.cljs$core$IFn$_invoke$arity$0 = G__37565__0;
      G__37565.cljs$core$IFn$_invoke$arity$1 = G__37565__1;
      G__37565.cljs$core$IFn$_invoke$arity$2 = G__37565__2;
      return G__37565;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args37566 = [];
  var len__27315__auto___37569 = arguments.length;
  var i__27316__auto___37570 = 0;
  while (true) {
    if (i__27316__auto___37570 < len__27315__auto___37569) {
      args37566.push(arguments[i__27316__auto___37570]);
      var G__37571 = i__27316__auto___37570 + 1;
      i__27316__auto___37570 = G__37571;
      continue;
    } else {
    }
    break;
  }
  var G__37568 = args37566.length;
  switch(G__37568) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37566.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__37573 = null;
        var G__37573__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__37573__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__37573__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__37573 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__37573__0.call(this);
            case 1:
              return G__37573__1.call(this, result);
            case 2:
              return G__37573__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__37573.cljs$core$IFn$_invoke$arity$0 = G__37573__0;
        G__37573.cljs$core$IFn$_invoke$arity$1 = G__37573__1;
        G__37573.cljs$core$IFn$_invoke$arity$2 = G__37573__2;
        return G__37573;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args37574 = [];
  var len__27315__auto___37577 = arguments.length;
  var i__27316__auto___37578 = 0;
  while (true) {
    if (i__27316__auto___37578 < len__27315__auto___37577) {
      args37574.push(arguments[i__27316__auto___37578]);
      var G__37579 = i__27316__auto___37578 + 1;
      i__27316__auto___37578 = G__37579;
      continue;
    } else {
    }
    break;
  }
  var G__37576 = args37574.length;
  switch(G__37576) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37574.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__37581 = null;
  var G__37581__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__37581__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__37581 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__37581__1.call(this, x);
      case 2:
        return G__37581__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37581.cljs$core$IFn$_invoke$arity$1 = G__37581__1;
  G__37581.cljs$core$IFn$_invoke$arity$2 = G__37581__2;
  return G__37581;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__37582 = null;
  var G__37582__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__37582__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__37582 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__37582__1.call(this, x);
      case 2:
        return G__37582__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37582.cljs$core$IFn$_invoke$arity$1 = G__37582__1;
  G__37582.cljs$core$IFn$_invoke$arity$2 = G__37582__2;
  return G__37582;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37584 = arguments.length;
  var i__27316__auto___37585 = 0;
  while (true) {
    if (i__27316__auto___37585 < len__27315__auto___37584) {
      args__27322__auto__.push(arguments[i__27316__auto___37585]);
      var G__37586 = i__27316__auto___37585 + 1;
      i__27316__auto___37585 = G__37586;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq37583) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq37583));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__37588_SHARP_, p2__37587_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__37587_SHARP_) : proc.call(null, p2__37587_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._key__GT_js[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__37611_37625 = cljs.core.seq(x);
            var chunk__37612_37626 = null;
            var count__37613_37627 = 0;
            var i__37614_37628 = 0;
            while (true) {
              if (i__37614_37628 < count__37613_37627) {
                var vec__37615_37629 = chunk__37612_37626.cljs$core$IIndexed$_nth$arity$2(null, i__37614_37628);
                var k_37630 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37615_37629, 0, null);
                var v_37631 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37615_37629, 1, null);
                m[cljs.core.key__GT_js(k_37630)] = cljs$core$clj__GT_js(v_37631);
                var G__37632 = seq__37611_37625;
                var G__37633 = chunk__37612_37626;
                var G__37634 = count__37613_37627;
                var G__37635 = i__37614_37628 + 1;
                seq__37611_37625 = G__37632;
                chunk__37612_37626 = G__37633;
                count__37613_37627 = G__37634;
                i__37614_37628 = G__37635;
                continue;
              } else {
                var temp__4657__auto___37636 = cljs.core.seq(seq__37611_37625);
                if (temp__4657__auto___37636) {
                  var seq__37611_37637__$1 = temp__4657__auto___37636;
                  if (cljs.core.chunked_seq_QMARK_(seq__37611_37637__$1)) {
                    var c__27051__auto___37638 = cljs.core.chunk_first(seq__37611_37637__$1);
                    var G__37639 = cljs.core.chunk_rest(seq__37611_37637__$1);
                    var G__37640 = c__27051__auto___37638;
                    var G__37641 = cljs.core.count(c__27051__auto___37638);
                    var G__37642 = 0;
                    seq__37611_37625 = G__37639;
                    chunk__37612_37626 = G__37640;
                    count__37613_37627 = G__37641;
                    i__37614_37628 = G__37642;
                    continue;
                  } else {
                    var vec__37618_37643 = cljs.core.first(seq__37611_37637__$1);
                    var k_37644 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37618_37643, 0, null);
                    var v_37645 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37618_37643, 1, null);
                    m[cljs.core.key__GT_js(k_37644)] = cljs$core$clj__GT_js(v_37645);
                    var G__37646 = cljs.core.next(seq__37611_37637__$1);
                    var G__37647 = null;
                    var G__37648 = 0;
                    var G__37649 = 0;
                    seq__37611_37625 = G__37646;
                    chunk__37612_37626 = G__37647;
                    count__37613_37627 = G__37648;
                    i__37614_37628 = G__37649;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__37621_37650 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__37622_37651 = null;
              var count__37623_37652 = 0;
              var i__37624_37653 = 0;
              while (true) {
                if (i__37624_37653 < count__37623_37652) {
                  var x_37654__$1 = chunk__37622_37651.cljs$core$IIndexed$_nth$arity$2(null, i__37624_37653);
                  arr.push(x_37654__$1);
                  var G__37655 = seq__37621_37650;
                  var G__37656 = chunk__37622_37651;
                  var G__37657 = count__37623_37652;
                  var G__37658 = i__37624_37653 + 1;
                  seq__37621_37650 = G__37655;
                  chunk__37622_37651 = G__37656;
                  count__37623_37652 = G__37657;
                  i__37624_37653 = G__37658;
                  continue;
                } else {
                  var temp__4657__auto___37659 = cljs.core.seq(seq__37621_37650);
                  if (temp__4657__auto___37659) {
                    var seq__37621_37660__$1 = temp__4657__auto___37659;
                    if (cljs.core.chunked_seq_QMARK_(seq__37621_37660__$1)) {
                      var c__27051__auto___37661 = cljs.core.chunk_first(seq__37621_37660__$1);
                      var G__37662 = cljs.core.chunk_rest(seq__37621_37660__$1);
                      var G__37663 = c__27051__auto___37661;
                      var G__37664 = cljs.core.count(c__27051__auto___37661);
                      var G__37665 = 0;
                      seq__37621_37650 = G__37662;
                      chunk__37622_37651 = G__37663;
                      count__37623_37652 = G__37664;
                      i__37624_37653 = G__37665;
                      continue;
                    } else {
                      var x_37666__$1 = cljs.core.first(seq__37621_37660__$1);
                      arr.push(x_37666__$1);
                      var G__37667 = cljs.core.next(seq__37621_37660__$1);
                      var G__37668 = null;
                      var G__37669 = 0;
                      var G__37670 = 0;
                      seq__37621_37650 = G__37667;
                      chunk__37622_37651 = G__37668;
                      count__37623_37652 = G__37669;
                      i__37624_37653 = G__37670;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__26904__auto__.call(null, x, options);
    } else {
      var m__26904__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__26904__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args37671 = [];
  var len__27315__auto___37696 = arguments.length;
  var i__27316__auto___37697 = 0;
  while (true) {
    if (i__27316__auto___37697 < len__27315__auto___37696) {
      args37671.push(arguments[i__27316__auto___37697]);
      var G__37698 = i__27316__auto___37697 + 1;
      i__27316__auto___37697 = G__37698;
      continue;
    } else {
    }
    break;
  }
  var G__37675 = args37671.length;
  switch(G__37675) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37671.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__37676 = opts;
  var map__37676__$1 = (!(map__37676 == null) ? map__37676.cljs$lang$protocol_mask$partition0$ & 64 || map__37676.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__37676) : map__37676;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__37676__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__37676, map__37676__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__27020__auto__ = function(map__37676, map__37676__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__37690(s__37691) {
                      return new cljs.core.LazySeq(null, function(map__37676, map__37676__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__37691__$1 = s__37691;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__37691__$1);
                            if (temp__4657__auto__) {
                              var s__37691__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__37691__$2)) {
                                var c__27018__auto__ = cljs.core.chunk_first(s__37691__$2);
                                var size__27019__auto__ = cljs.core.count(c__27018__auto__);
                                var b__37693 = cljs.core.chunk_buffer(size__27019__auto__);
                                if (function() {
                                  var i__37692 = 0;
                                  while (true) {
                                    if (i__37692 < size__27019__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__27018__auto__, i__37692);
                                      cljs.core.chunk_append(b__37693, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__37700 = i__37692 + 1;
                                      i__37692 = G__37700;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__37693), cljs$core$thisfn_$_iter__37690(cljs.core.chunk_rest(s__37691__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__37693), null);
                                }
                              } else {
                                var k = cljs.core.first(s__37691__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__37690(cljs.core.rest(s__37691__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__37676, map__37676__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__37676, map__37676__$1, keywordize_keys, keyfn);
                  return iter__27020__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__37676, map__37676__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq37672) {
  var G__37673 = cljs.core.first(seq37672);
  var seq37672__$1 = cljs.core.next(seq37672);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__37673, seq37672__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__37702 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__37702) : cljs.core.atom.call(null, G__37702);
  }();
  return function(mem) {
    return function() {
      var G__37703__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__37703 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__37704__i = 0, G__37704__a = new Array(arguments.length - 0);
          while (G__37704__i < G__37704__a.length) {
            G__37704__a[G__37704__i] = arguments[G__37704__i + 0];
            ++G__37704__i;
          }
          args = new cljs.core.IndexedSeq(G__37704__a, 0);
        }
        return G__37703__delegate.call(this, args);
      };
      G__37703.cljs$lang$maxFixedArity = 0;
      G__37703.cljs$lang$applyTo = function(arglist__37705) {
        var args = cljs.core.seq(arglist__37705);
        return G__37703__delegate(args);
      };
      G__37703.cljs$core$IFn$_invoke$arity$variadic = G__37703__delegate;
      return G__37703;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args37706 = [];
  var len__27315__auto___37711 = arguments.length;
  var i__27316__auto___37712 = 0;
  while (true) {
    if (i__27316__auto___37712 < len__27315__auto___37711) {
      args37706.push(arguments[i__27316__auto___37712]);
      var G__37713 = i__27316__auto___37712 + 1;
      i__27316__auto___37712 = G__37713;
      continue;
    } else {
    }
    break;
  }
  var G__37710 = args37706.length;
  switch(G__37710) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37706.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__37715 = ret;
      f = G__37715;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq37707) {
  var G__37708 = cljs.core.first(seq37707);
  var seq37707__$1 = cljs.core.next(seq37707);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__37708, seq37707__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args37716 = [];
  var len__27315__auto___37719 = arguments.length;
  var i__27316__auto___37720 = 0;
  while (true) {
    if (i__27316__auto___37720 < len__27315__auto___37719) {
      args37716.push(arguments[i__27316__auto___37720]);
      var G__37721 = i__27316__auto___37720 + 1;
      i__27316__auto___37720 = G__37721;
      continue;
    } else {
    }
    break;
  }
  var G__37718 = args37716.length;
  switch(G__37718) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37716.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__37724 = Math.random() * n;
  return Math.floor(G__37724);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__37726 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__37726) : cljs.core.atom.call(null, G__37726);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37729 = arguments.length;
  var i__27316__auto___37730 = 0;
  while (true) {
    if (i__27316__auto___37730 < len__27315__auto___37729) {
      args__27322__auto__.push(arguments[i__27316__auto___37730]);
      var G__37731 = i__27316__auto___37730 + 1;
      i__27316__auto___37730 = G__37731;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq37727) {
  var G__37728 = cljs.core.first(seq37727);
  var seq37727__$1 = cljs.core.next(seq37727);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__37728, seq37727__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args37732 = [];
  var len__27315__auto___37736 = arguments.length;
  var i__27316__auto___37737 = 0;
  while (true) {
    if (i__27316__auto___37737 < len__27315__auto___37736) {
      args37732.push(arguments[i__27316__auto___37737]);
      var G__37738 = i__27316__auto___37737 + 1;
      i__27316__auto___37737 = G__37738;
      continue;
    } else {
    }
    break;
  }
  var G__37734 = args37732.length;
  switch(G__37734) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37732.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__37735 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37735) : cljs.core.deref.call(null, G__37735);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__26240__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__26240__auto____$1) {
      return or__26240__auto____$1;
    } else {
      var and__26228__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__26228__auto__) {
        var and__26228__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__26228__auto____$1) {
          var and__26228__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__26228__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__37740 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__37741 = i + 1;
                ret = G__37740;
                i = G__37741;
                continue;
              }
              break;
            }
          } else {
            return and__26228__auto____$2;
          }
        } else {
          return and__26228__auto____$1;
        }
      } else {
        return and__26228__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args37742 = [];
  var len__27315__auto___37746 = arguments.length;
  var i__27316__auto___37747 = 0;
  while (true) {
    if (i__27316__auto___37747 < len__27315__auto___37746) {
      args37742.push(arguments[i__27316__auto___37747]);
      var G__37748 = i__27316__auto___37747 + 1;
      i__27316__auto___37747 = G__37748;
      continue;
    } else {
    }
    break;
  }
  var G__37744 = args37742.length;
  switch(G__37744) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37742.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__37745 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37745) : cljs.core.deref.call(null, G__37745);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args37750 = [];
  var len__27315__auto___37754 = arguments.length;
  var i__27316__auto___37755 = 0;
  while (true) {
    if (i__27316__auto___37755 < len__27315__auto___37754) {
      args37750.push(arguments[i__27316__auto___37755]);
      var G__37756 = i__27316__auto___37755 + 1;
      i__27316__auto___37755 = G__37756;
      continue;
    } else {
    }
    break;
  }
  var G__37752 = args37750.length;
  switch(G__37752) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37750.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__37753 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37753) : cljs.core.deref.call(null, G__37753);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args37758 = [];
  var len__27315__auto___37762 = arguments.length;
  var i__27316__auto___37763 = 0;
  while (true) {
    if (i__27316__auto___37763 < len__27315__auto___37762) {
      args37758.push(arguments[i__27316__auto___37763]);
      var G__37764 = i__27316__auto___37763 + 1;
      i__27316__auto___37763 = G__37764;
      continue;
    } else {
    }
    break;
  }
  var G__37760 = args37758.length;
  switch(G__37760) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37758.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__37761 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37761) : cljs.core.deref.call(null, G__37761);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args37766 = [];
  var len__27315__auto___37769 = arguments.length;
  var i__27316__auto___37770 = 0;
  while (true) {
    if (i__27316__auto___37770 < len__27315__auto___37769) {
      args37766.push(arguments[i__27316__auto___37770]);
      var G__37771 = i__27316__auto___37770 + 1;
      i__27316__auto___37770 = G__37771;
      continue;
    } else {
    }
    break;
  }
  var G__37768 = args37766.length;
  switch(G__37768) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37766.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__26240__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args37776 = [];
  var len__27315__auto___37779 = arguments.length;
  var i__27316__auto___37780 = 0;
  while (true) {
    if (i__27316__auto___37780 < len__27315__auto___37779) {
      args37776.push(arguments[i__27316__auto___37780]);
      var G__37781 = i__27316__auto___37780 + 1;
      i__27316__auto___37780 = G__37781;
      continue;
    } else {
    }
    break;
  }
  var G__37778 = args37776.length;
  switch(G__37778) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37776.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__37773_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__37773_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__37773_SHARP_), cljs.core.second(p1__37773_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__37774_SHARP_, p2__37775_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__37774_SHARP_, p2__37775_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__26240__auto__ = cljs.core.truth_(function() {
    var and__26228__auto__ = xprefs;
    if (cljs.core.truth_(and__26228__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__26228__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__37795 = cljs.core.rest(ps);
          ps = G__37795;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__26240__auto____$1)) {
      return or__26240__auto____$1;
    } else {
      var or__26240__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__37796 = cljs.core.rest(ps);
            ps = G__37796;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__26240__auto____$2)) {
        return or__26240__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__26240__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__37801) {
    var vec__37802 = p__37801;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37802, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37802, 1, null);
    var e = vec__37802;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__26240__auto__ = be == null;
        if (or__26240__auto__) {
          return or__26240__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._reset[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._reset["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._add_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__26904__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__26904__auto____$1 = cljs.core._add_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__26904__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._remove_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto__.call(null, mf, dispatch_val);
    } else {
      var m__26904__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._prefer_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__26904__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__26904__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__26904__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._get_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto__.call(null, mf, dispatch_val);
    } else {
      var m__26904__auto____$1 = cljs.core._get_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._methods[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._methods["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._prefers[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._prefers["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__37806 = null;
  var G__37806__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__37806__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__37806__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__37806__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__37806__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__37806__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__37806__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__37806__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__37806__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__37806__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__37806__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__37806__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__37806__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__37806__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__37806__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__37806__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__37806__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__37806__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__37806__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__37806__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__37806__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__37806__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__37806 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__37806__1.call(this, self__);
      case 2:
        return G__37806__2.call(this, self__, a);
      case 3:
        return G__37806__3.call(this, self__, a, b);
      case 4:
        return G__37806__4.call(this, self__, a, b, c);
      case 5:
        return G__37806__5.call(this, self__, a, b, c, d);
      case 6:
        return G__37806__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__37806__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__37806__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__37806__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__37806__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__37806__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__37806__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__37806__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__37806__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__37806__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__37806__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__37806__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__37806__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__37806__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__37806__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__37806__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__37806__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37806.cljs$core$IFn$_invoke$arity$1 = G__37806__1;
  G__37806.cljs$core$IFn$_invoke$arity$2 = G__37806__2;
  G__37806.cljs$core$IFn$_invoke$arity$3 = G__37806__3;
  G__37806.cljs$core$IFn$_invoke$arity$4 = G__37806__4;
  G__37806.cljs$core$IFn$_invoke$arity$5 = G__37806__5;
  G__37806.cljs$core$IFn$_invoke$arity$6 = G__37806__6;
  G__37806.cljs$core$IFn$_invoke$arity$7 = G__37806__7;
  G__37806.cljs$core$IFn$_invoke$arity$8 = G__37806__8;
  G__37806.cljs$core$IFn$_invoke$arity$9 = G__37806__9;
  G__37806.cljs$core$IFn$_invoke$arity$10 = G__37806__10;
  G__37806.cljs$core$IFn$_invoke$arity$11 = G__37806__11;
  G__37806.cljs$core$IFn$_invoke$arity$12 = G__37806__12;
  G__37806.cljs$core$IFn$_invoke$arity$13 = G__37806__13;
  G__37806.cljs$core$IFn$_invoke$arity$14 = G__37806__14;
  G__37806.cljs$core$IFn$_invoke$arity$15 = G__37806__15;
  G__37806.cljs$core$IFn$_invoke$arity$16 = G__37806__16;
  G__37806.cljs$core$IFn$_invoke$arity$17 = G__37806__17;
  G__37806.cljs$core$IFn$_invoke$arity$18 = G__37806__18;
  G__37806.cljs$core$IFn$_invoke$arity$19 = G__37806__19;
  G__37806.cljs$core$IFn$_invoke$arity$20 = G__37806__20;
  G__37806.cljs$core$IFn$_invoke$arity$21 = G__37806__21;
  G__37806.cljs$core$IFn$_invoke$arity$22 = G__37806__22;
  return G__37806;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args37805) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args37805)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = true;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__37807 = self__.uuid;
  var G__37808 = other.uuid;
  return goog.array.defaultCompare(G__37807, G__37808);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args37811 = [];
  var len__27315__auto___37814 = arguments.length;
  var i__27316__auto___37815 = 0;
  while (true) {
    if (i__27316__auto___37815 < len__27315__auto___37814) {
      args37811.push(arguments[i__27316__auto___37815]);
      var G__37816 = i__27316__auto___37815 + 1;
      i__27316__auto___37815 = G__37816;
      continue;
    } else {
    }
    break;
  }
  var G__37813 = args37811.length;
  switch(G__37813) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37811.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, 
  "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, 
  null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, 
  "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__37818 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__37818) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__37820_SHARP_, p2__37821_SHARP_) {
      goog.object.set(p1__37820_SHARP_, p2__37821_SHARP_, true);
      return p1__37820_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__37824 = cljs.core.next(ks__$1);
          var G__37825 = [cljs.core.str(function() {
            var G__37823 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__37823), cljs.core.str("|")].join("");
            } else {
              return G__37823;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__37824;
          ret = G__37825;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_37826 = 0;
  while (true) {
    if (i_37826 < name.length) {
      var c_37827 = name.charAt(i_37826);
      var sub_37828 = goog.object.get(cljs.core.CHAR_MAP, c_37827);
      if (!(sub_37828 == null)) {
        sb.append(sub_37828);
      } else {
        sb.append(c_37827);
      }
      var G__37829 = i_37826 + 1;
      i_37826 = G__37829;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__37833 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37833, 0, null);
      var G__37836 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__37837 = r.lastIndex;
      ret = G__37836;
      last_match_end = G__37837;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__37842 = function() {
          var G__37840 = ctxt;
          var G__37841 = cljs.core.first(xs);
          return goog.object.get(G__37840, G__37841);
        }();
        var G__37843 = cljs.core.next(xs);
        ctxt = G__37842;
        xs = G__37843;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__37847 = cljs.core._STAR_target_STAR_;
  switch(G__37847) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__37849 = cljs.core.first(segs);
            return eval(G__37849);
          } catch (e37848) {
            if (e37848 instanceof ReferenceError) {
              var e = e37848;
              return null;
            } else {
              throw e37848;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args37851 = [];
  var len__27315__auto___37854 = arguments.length;
  var i__27316__auto___37855 = 0;
  while (true) {
    if (i__27316__auto___37855 < len__27315__auto___37854) {
      args37851.push(arguments[i__27316__auto___37855]);
      var G__37856 = i__27316__auto___37855 + 1;
      i__27316__auto___37855 = G__37856;
      continue;
    } else {
    }
    break;
  }
  var G__37853 = args37851.length;
  switch(G__37853) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37851.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__37859 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__37859) : cljs.core.atom.call(null, G__37859);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__37861 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__37861) : cljs.core.atom.call(null, G__37861);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__37864__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__37864 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__37865__i = 0, G__37865__a = new Array(arguments.length - 0);
        while (G__37865__i < G__37865__a.length) {
          G__37865__a[G__37865__i] = arguments[G__37865__i + 0];
          ++G__37865__i;
        }
        args = new cljs.core.IndexedSeq(G__37865__a, 0);
      }
      return G__37864__delegate.call(this, args);
    };
    G__37864.cljs$lang$maxFixedArity = 0;
    G__37864.cljs$lang$applyTo = function(arglist__37866) {
      var args = cljs.core.seq(arglist__37866);
      return G__37864__delegate(args);
    };
    G__37864.cljs$core$IFn$_invoke$arity$variadic = G__37864__delegate;
    return G__37864;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args37867 = [];
  var len__27315__auto___37870 = arguments.length;
  var i__27316__auto___37871 = 0;
  while (true) {
    if (i__27316__auto___37871 < len__27315__auto___37870) {
      args37867.push(arguments[i__27316__auto___37871]);
      var G__37872 = i__27316__auto___37871 + 1;
      i__27316__auto___37871 = G__37872;
      continue;
    } else {
    }
    break;
  }
  var G__37869 = args37867.length;
  switch(G__37869) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37867.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__37874 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__37875 = cljs.core.next.call(null, coll__$1);
      sb = G__37874;
      coll__$1 = G__37875;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__37876 = sb;
      var G__37877 = coll__$2;
      sb = G__37876;
      coll__$1 = G__37877;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__37878 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__37878;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__37882 = cljs.core._EQ__EQ_;
    var expr__37883 = limit;
    if (cljs.core.truth_(pred__37882.call(null, 1, expr__37883))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__37882.call(null, 2, expr__37883))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args37885 = [];
  var len__27315__auto___37888 = arguments.length;
  var i__27316__auto___37889 = 0;
  while (true) {
    if (i__27316__auto___37889 < len__27315__auto___37888) {
      args37885.push(arguments[i__27316__auto___37889]);
      var G__37890 = i__27316__auto___37889 + 1;
      i__27316__auto___37889 = G__37890;
      continue;
    } else {
    }
    break;
  }
  var G__37887 = args37885.length;
  switch(G__37887) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37885.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__37892 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__37893 = limit__$1 - 1;
          var G__37894 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__37892;
          limit__$1 = G__37893;
          parts = G__37894;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__37895 = index - 1;
        index = G__37895;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__37896 = index + 1;
      index = G__37896;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args37897 = [];
  var len__27315__auto___37900 = arguments.length;
  var i__27316__auto___37901 = 0;
  while (true) {
    if (i__27316__auto___37901 < len__27315__auto___37900) {
      args37897.push(arguments[i__27316__auto___37901]);
      var G__37902 = i__27316__auto___37901 + 1;
      i__27316__auto___37901 = G__37902;
      continue;
    } else {
    }
    break;
  }
  var G__37899 = args37897.length;
  switch(G__37899) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37897.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args37904 = [];
  var len__27315__auto___37907 = arguments.length;
  var i__27316__auto___37908 = 0;
  while (true) {
    if (i__27316__auto___37908 < len__27315__auto___37907) {
      args37904.push(arguments[i__27316__auto___37908]);
      var G__37909 = i__27316__auto___37908 + 1;
      i__27316__auto___37908 = G__37909;
      continue;
    } else {
    }
    break;
  }
  var G__37906 = args37904.length;
  switch(G__37906) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37904.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37914 = arguments.length;
  var i__27316__auto___37915 = 0;
  while (true) {
    if (i__27316__auto___37915 < len__27315__auto___37914) {
      args__27322__auto__.push(arguments[i__27316__auto___37915]);
      var G__37916 = i__27316__auto___37915 + 1;
      i__27316__auto___37915 = G__37916;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq37913) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq37913));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37918 = arguments.length;
  var i__27316__auto___37919 = 0;
  while (true) {
    if (i__27316__auto___37919 < len__27315__auto___37918) {
      args__27322__auto__.push(arguments[i__27316__auto___37919]);
      var G__37920 = i__27316__auto___37919 + 1;
      i__27316__auto___37919 = G__37920;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq37917) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq37917));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__37924 = cljs.core._EQ_;
    var expr__37925 = c;
    if (cljs.core.truth_(pred__37924.call(null, "\b", expr__37925))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__37924.call(null, "\t", expr__37925))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__37924.call(null, "\n", expr__37925))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__37924.call(null, "\f", expr__37925))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__37924.call(null, "\r", expr__37925))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__37924.call(null, '"', expr__37925))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__37924.call(null, "\\", expr__37925))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37928 = arguments.length;
  var i__27316__auto___37929 = 0;
  while (true) {
    if (i__27316__auto___37929 < len__27315__auto___37928) {
      args__27322__auto__.push(arguments[i__27316__auto___37929]);
      var G__37930 = i__27316__auto___37929 + 1;
      i__27316__auto___37929 = G__37930;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq37927) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq37927));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37932 = arguments.length;
  var i__27316__auto___37933 = 0;
  while (true) {
    if (i__27316__auto___37933 < len__27315__auto___37932) {
      args__27322__auto__.push(arguments[i__27316__auto___37933]);
      var G__37934 = i__27316__auto___37933 + 1;
      i__27316__auto___37933 = G__37934;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq37931) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq37931));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__37938 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__37938, 0, null);
      var new_context = cljs.core.nth.call(null, vec__37938, 1, null);
      var G__37941 = new_context;
      var G__37942 = remainder;
      var G__37943 = cljs.core.conj.call(null, acc, result);
      context = G__37941;
      lis__$1 = G__37942;
      acc = G__37943;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__37947 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__37947, 0, null);
    var new_context = cljs.core.nth.call(null, vec__37947, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__37950 = new_context;
      var G__37951 = cljs.core.conj.call(null, acc, result);
      context = G__37950;
      acc = G__37951;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__37955 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__37955, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__37955, 1, null);
    var new_context = cljs.core.nth.call(null, vec__37955, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__37958 = new_context;
      var G__37959 = cljs.core.conj.call(null, acc, result);
      context = G__37958;
      acc = G__37959;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function cljs$pprint$unzip_map_$_iter__38016(s__38017) {
      return new cljs.core.LazySeq(null, function() {
        var s__38017__$1 = s__38017;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__38017__$1);
          if (temp__4657__auto__) {
            var s__38017__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__38017__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__38017__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__38019 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__38018 = 0;
                while (true) {
                  if (i__38018 < size__27019__auto__) {
                    var vec__38032 = cljs.core._nth.call(null, c__27018__auto__, i__38018);
                    var k = cljs.core.nth.call(null, vec__38032, 0, null);
                    var vec__38035 = cljs.core.nth.call(null, vec__38032, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__38035, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__38035, 1, null);
                    cljs.core.chunk_append.call(null, b__38019, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__38072 = i__38018 + 1;
                    i__38018 = G__38072;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38019), cljs$pprint$unzip_map_$_iter__38016.call(null, cljs.core.chunk_rest.call(null, s__38017__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38019), null);
              }
            } else {
              var vec__38038 = cljs.core.first.call(null, s__38017__$2);
              var k = cljs.core.nth.call(null, vec__38038, 0, null);
              var vec__38041 = cljs.core.nth.call(null, vec__38038, 1, null);
              var v1 = cljs.core.nth.call(null, vec__38041, 0, null);
              var v2 = cljs.core.nth.call(null, vec__38041, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__38016.call(null, cljs.core.rest.call(null, s__38017__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function cljs$pprint$unzip_map_$_iter__38044(s__38045) {
      return new cljs.core.LazySeq(null, function() {
        var s__38045__$1 = s__38045;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__38045__$1);
          if (temp__4657__auto__) {
            var s__38045__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__38045__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__38045__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__38047 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__38046 = 0;
                while (true) {
                  if (i__38046 < size__27019__auto__) {
                    var vec__38060 = cljs.core._nth.call(null, c__27018__auto__, i__38046);
                    var k = cljs.core.nth.call(null, vec__38060, 0, null);
                    var vec__38063 = cljs.core.nth.call(null, vec__38060, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__38063, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__38063, 1, null);
                    cljs.core.chunk_append.call(null, b__38047, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__38073 = i__38046 + 1;
                    i__38046 = G__38073;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38047), cljs$pprint$unzip_map_$_iter__38044.call(null, cljs.core.chunk_rest.call(null, s__38045__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38047), null);
              }
            } else {
              var vec__38066 = cljs.core.first.call(null, s__38045__$2);
              var k = cljs.core.nth.call(null, vec__38066, 0, null);
              var vec__38069 = cljs.core.nth.call(null, vec__38066, 1, null);
              var v1 = cljs.core.nth.call(null, vec__38069, 0, null);
              var v2 = cljs.core.nth.call(null, vec__38069, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__38044.call(null, cljs.core.rest.call(null, s__38045__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function cljs$pprint$tuple_map_$_iter__38090(s__38091) {
      return new cljs.core.LazySeq(null, function() {
        var s__38091__$1 = s__38091;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__38091__$1);
          if (temp__4657__auto__) {
            var s__38091__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__38091__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__38091__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__38093 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__38092 = 0;
                while (true) {
                  if (i__38092 < size__27019__auto__) {
                    var vec__38100 = cljs.core._nth.call(null, c__27018__auto__, i__38092);
                    var k = cljs.core.nth.call(null, vec__38100, 0, null);
                    var v = cljs.core.nth.call(null, vec__38100, 1, null);
                    cljs.core.chunk_append.call(null, b__38093, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__38106 = i__38092 + 1;
                    i__38092 = G__38106;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38093), cljs$pprint$tuple_map_$_iter__38090.call(null, cljs.core.chunk_rest.call(null, s__38091__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38093), null);
              }
            } else {
              var vec__38103 = cljs.core.first.call(null, s__38091__$2);
              var k = cljs.core.nth.call(null, vec__38103, 0, null);
              var v = cljs.core.nth.call(null, vec__38103, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__38090.call(null, cljs.core.rest.call(null, s__38091__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__38107 = n - 1;
          n = G__38107;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__38108 = n + 1;
        n = G__38108;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__38109 = pos + 1;
      pos = G__38109;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__26903__auto__ = pp == null ? null : pp;
    var m__26904__auto__ = cljs.pprint._ppflush[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.call(null, pp);
    } else {
      var m__26904__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var args38111 = [];
  var len__27315__auto___38120 = arguments.length;
  var i__27316__auto___38121 = 0;
  while (true) {
    if (i__27316__auto___38121 < len__27315__auto___38120) {
      args38111.push(arguments[i__27316__auto___38121]);
      var G__38122 = i__27316__auto___38121 + 1;
      i__27316__auto___38121 = G__38122;
      continue;
    } else {
    }
    break;
  }
  var G__38113 = args38111.length;
  switch(G__38113) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38111.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t_cljs$pprint38114 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint38114 = function(writer, max_columns, fields, meta38115) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta38115 = meta38115;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint38114.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_38116, meta38115__$1) {
        var self__ = this;
        var _38116__$1 = this;
        return new cljs.pprint.t_cljs$pprint38114(self__.writer, self__.max_columns, self__.fields, meta38115__$1);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint38114.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_38116) {
        var self__ = this;
        var _38116__$1 = this;
        return self__.meta38115;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint38114.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint38114.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint38114.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__38117 = cljs.core._EQ_;
        var expr__38118 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__38117.call(null, String, expr__38118))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__38117, expr__38118, this$__$1, fields) {
              return function(p1__38110_SHARP_) {
                return cljs.core._EQ_.call(null, p1__38110_SHARP_, "\n");
              };
            }(s, nl, pred__38117, expr__38118, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__38117.call(null, Number, expr__38118))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38118)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t_cljs$pprint38114.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta38115", "meta38115", -1306598384, null)], null);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint38114.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint38114.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint38114";
    cljs.pprint.t_cljs$pprint38114.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint38114");
      };
    }(fields);
    cljs.pprint.__GT_t_cljs$pprint38114 = function(fields) {
      return function cljs$pprint$__GT_t_cljs$pprint38114(writer__$1, max_columns__$1, fields__$1, meta38115) {
        return new cljs.pprint.t_cljs$pprint38114(writer__$1, max_columns__$1, fields__$1, meta38115);
      };
    }(fields);
  }
  return new cljs.pprint.t_cljs$pprint38114(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38125, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38127 = k38125 instanceof cljs.core.Keyword ? k38125.fqn : null;
  switch(G__38127) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38125, else__26865__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38124) {
  var self__ = this;
  var G__38124__$1 = this;
  return new cljs.core.RecordIter(0, G__38124__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38124) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38128 = cljs.core.keyword_identical_QMARK_;
  var expr__38129 = k__26870__auto__;
  if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__38129))) {
    return new cljs.pprint.logical_block(G__38124, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__38129))) {
      return new cljs.pprint.logical_block(self__.parent, G__38124, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__38129))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__38124, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__38129))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__38124, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__38129))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__38124, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__38129))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__38124, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__38129))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__38124, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__38129))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__38124, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__38129))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__38124, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__38128.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__38129))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__38124, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38124), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38124) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__38124, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__38126) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__38126), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__38126), null, cljs.core.dissoc.call(null, G__38126, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__38132 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__38132;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38134, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38136 = k38134 instanceof cljs.core.Keyword ? k38134.fqn : null;
  switch(G__38136) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38134, else__26865__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38133) {
  var self__ = this;
  var G__38133__$1 = this;
  return new cljs.core.RecordIter(0, G__38133__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38133) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38137 = cljs.core.keyword_identical_QMARK_;
  var expr__38138 = k__26870__auto__;
  if (cljs.core.truth_(pred__38137.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__38138))) {
    return new cljs.pprint.buffer_blob(G__38133, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38137.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__38138))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__38133, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38137.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__38138))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__38133, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__38137.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__38138))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__38133, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__38137.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__38138))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__38133, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38133), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38133) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__38133, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__38135) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__38135), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__38135), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__38135), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__38135), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__38135), null, cljs.core.dissoc.call(null, G__38135, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__28294__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28294__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38142, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38144 = k38142 instanceof cljs.core.Keyword ? k38142.fqn : null;
  switch(G__38144) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38142, else__26865__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38141) {
  var self__ = this;
  var G__38141__$1 = this;
  return new cljs.core.RecordIter(0, G__38141__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38141) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38145 = cljs.core.keyword_identical_QMARK_;
  var expr__38146 = k__26870__auto__;
  if (cljs.core.truth_(pred__38145.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__38146))) {
    return new cljs.pprint.nl_t(G__38141, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38145.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__38146))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__38141, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38145.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__38146))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__38141, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__38145.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__38146))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__38141, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__38145.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__38146))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__38141, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38141), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38141) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__38141, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__38143) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__38143), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__38143), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__38143), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__38143), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__38143), null, cljs.core.dissoc.call(null, G__38143, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__28294__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28294__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38150, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38152 = k38150 instanceof cljs.core.Keyword ? k38150.fqn : null;
  switch(G__38152) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38150, else__26865__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38149) {
  var self__ = this;
  var G__38149__$1 = this;
  return new cljs.core.RecordIter(0, G__38149__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38149) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38153 = cljs.core.keyword_identical_QMARK_;
  var expr__38154 = k__26870__auto__;
  if (cljs.core.truth_(pred__38153.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__38154))) {
    return new cljs.pprint.start_block_t(G__38149, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38153.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__38154))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__38149, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38153.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__38154))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__38149, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__38153.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__38154))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__38149, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38149), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38149) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__38149, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__38151) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__38151), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__38151), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__38151), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__38151), null, cljs.core.dissoc.call(null, 
  G__38151, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__28294__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28294__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38158, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38160 = k38158 instanceof cljs.core.Keyword ? k38158.fqn : null;
  switch(G__38160) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38158, else__26865__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38157) {
  var self__ = this;
  var G__38157__$1 = this;
  return new cljs.core.RecordIter(0, G__38157__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38157) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38161 = cljs.core.keyword_identical_QMARK_;
  var expr__38162 = k__26870__auto__;
  if (cljs.core.truth_(pred__38161.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__38162))) {
    return new cljs.pprint.end_block_t(G__38157, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38161.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__38162))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__38157, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38161.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__38162))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__38157, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__38161.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__38162))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__38157, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38157), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38157) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__38157, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__38159) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__38159), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__38159), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__38159), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__38159), null, cljs.core.dissoc.call(null, 
  G__38159, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__28294__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28294__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38166, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38168 = k38166 instanceof cljs.core.Keyword ? k38166.fqn : null;
  switch(G__38168) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38166, else__26865__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38165) {
  var self__ = this;
  var G__38165__$1 = this;
  return new cljs.core.RecordIter(0, G__38165__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38165) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38169 = cljs.core.keyword_identical_QMARK_;
  var expr__38170 = k__26870__auto__;
  if (cljs.core.truth_(pred__38169.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__38170))) {
    return new cljs.pprint.indent_t(G__38165, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38169.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__38170))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__38165, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38169.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__38170))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__38165, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__38169.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__38170))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__38165, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__38169.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__38170))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__38165, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__38169.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__38170))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__38165, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38165), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38165) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__38165, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__38167) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__38167), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__38167), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__38167), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__38167), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__38167), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__38167), null, cljs.core.dissoc.call(null, G__38167, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__28294__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28294__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__) {
      return function(p1__38174_SHARP_, p2__38173_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__38173_SHARP_);
      };
    }(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4657__auto___38175 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___38175)) {
    var cb_38176 = temp__4657__auto___38175;
    cb_38176.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4657__auto___38177 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4657__auto___38177)) {
    var prefix_38178 = temp__4657__auto___38177;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_38178);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4657__auto___38179 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___38179)) {
    var cb_38180 = temp__4657__auto___38179;
    cb_38180.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var suffix = temp__4657__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__38181 = cljs.core._EQ_;
    var expr__38182 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__38181.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__38182))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__38181.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__38182))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38182)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__26240__auto__) {
      return or__26240__auto__;
    } else {
      var and__26228__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__26228__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__26228__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4655__auto___38184 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4655__auto___38184)) {
      var tws_38185 = temp__4655__auto___38184;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_38185);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__38190 = cljs.core.seq.call(null, tokens);
  var chunk__38191 = null;
  var count__38192 = 0;
  var i__38193 = 0;
  while (true) {
    if (i__38193 < count__38192) {
      var token = cljs.core._nth.call(null, chunk__38191, i__38193);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4655__auto___38194 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4655__auto___38194)) {
          var tws_38195 = temp__4655__auto___38194;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_38195);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_38196 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__26228__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__26228__auto__)) {
          return tws_38196;
        } else {
          return and__26228__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_38196);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__38197 = seq__38190;
      var G__38198 = chunk__38191;
      var G__38199 = count__38192;
      var G__38200 = i__38193 + 1;
      seq__38190 = G__38197;
      chunk__38191 = G__38198;
      count__38192 = G__38199;
      i__38193 = G__38200;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__38190);
      if (temp__4657__auto__) {
        var seq__38190__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__38190__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__38190__$1);
          var G__38201 = cljs.core.chunk_rest.call(null, seq__38190__$1);
          var G__38202 = c__27051__auto__;
          var G__38203 = cljs.core.count.call(null, c__27051__auto__);
          var G__38204 = 0;
          seq__38190 = G__38201;
          chunk__38191 = G__38202;
          count__38192 = G__38203;
          i__38193 = G__38204;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__38190__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4655__auto___38205 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4655__auto___38205)) {
              var tws_38206 = temp__4655__auto___38205;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_38206);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_38207 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__26228__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__26228__auto__)) {
              return tws_38207;
            } else {
              return and__26228__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_38207);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__38208 = cljs.core.next.call(null, seq__38190__$1);
          var G__38209 = null;
          var G__38210 = 0;
          var G__38211 = 0;
          seq__38190 = G__38208;
          chunk__38191 = G__38209;
          count__38192 = G__38210;
          i__38193 = G__38211;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__26240__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__26228__auto__ = miser_width;
  if (cljs.core.truth_(and__26228__auto__)) {
    var and__26228__auto____$1 = maxcol;
    if (cljs.core.truth_(and__26228__auto____$1)) {
      var and__26228__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__26228__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__26228__auto____$2;
      }
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__26240__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__26240__auto____$1) {
      return or__26240__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__38212_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__26228__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__38212_SHARP_);
        if (cljs.core.truth_(and__26228__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__38212_SHARP_), lb);
        } else {
          return and__26228__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__38213_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__38213_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__26228__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__38213_SHARP_);
        if (cljs.core.truth_(and__26228__auto__)) {
          var or__26240__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__26240__auto__) {
            return or__26240__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__38214 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__38214;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_38215 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_38215);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__38216_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__38216_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__38223 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__38223, 0, null);
  var b = cljs.core.nth.call(null, vec__38223, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__38226 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__38226, 0, null);
    var remainder = cljs.core.nth.call(null, vec__38226, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__38229 = new_buffer;
        buffer = G__38229;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var buf = temp__4655__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var tws = temp__4657__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_38238 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_38239 = oldpos_38238 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_38239);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_38238, newpos_38239));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__38234_38240 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__38235_38241 = null;
    var count__38236_38242 = 0;
    var i__38237_38243 = 0;
    while (true) {
      if (i__38237_38243 < count__38236_38242) {
        var l_38244__$1 = cljs.core._nth.call(null, chunk__38235_38241, i__38237_38243);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_38244__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__38245 = seq__38234_38240;
        var G__38246 = chunk__38235_38241;
        var G__38247 = count__38236_38242;
        var G__38248 = i__38237_38243 + 1;
        seq__38234_38240 = G__38245;
        chunk__38235_38241 = G__38246;
        count__38236_38242 = G__38247;
        i__38237_38243 = G__38248;
        continue;
      } else {
        var temp__4657__auto___38249 = cljs.core.seq.call(null, seq__38234_38240);
        if (temp__4657__auto___38249) {
          var seq__38234_38250__$1 = temp__4657__auto___38249;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__38234_38250__$1)) {
            var c__27051__auto___38251 = cljs.core.chunk_first.call(null, seq__38234_38250__$1);
            var G__38252 = cljs.core.chunk_rest.call(null, seq__38234_38250__$1);
            var G__38253 = c__27051__auto___38251;
            var G__38254 = cljs.core.count.call(null, c__27051__auto___38251);
            var G__38255 = 0;
            seq__38234_38240 = G__38252;
            chunk__38235_38241 = G__38253;
            count__38236_38242 = G__38254;
            i__38237_38243 = G__38255;
            continue;
          } else {
            var l_38256__$1 = cljs.core.first.call(null, seq__38234_38250__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_38256__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__38257 = cljs.core.next.call(null, seq__38234_38250__$1);
            var G__38258 = null;
            var G__38259 = 0;
            var G__38260 = 0;
            seq__38234_38240 = G__38257;
            chunk__38235_38241 = G__38258;
            count__38236_38242 = G__38259;
            i__38237_38243 = G__38260;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t_cljs$pprint38267 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint38267 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta38268) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta38268 = meta38268;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint38267.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_38269, meta38268__$1) {
        var self__ = this;
        var _38269__$1 = this;
        return new cljs.pprint.t_cljs$pprint38267(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta38268__$1);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint38267.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_38269) {
        var self__ = this;
        var _38269__$1 = this;
        return self__.meta38268;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint38267.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint38267.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__38270 = cljs.core._EQ_;
        var expr__38271 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__38270.call(null, String, expr__38271))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__38270.call(null, Number, expr__38271))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38271)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint38267.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint38267.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t_cljs$pprint38267.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint38267.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta38268", "meta38268", -1989416409, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint38267.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint38267.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint38267";
    cljs.pprint.t_cljs$pprint38267.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint38267");
      };
    }(lb, fields);
    cljs.pprint.__GT_t_cljs$pprint38267 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint38267(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta38268) {
        return new cljs.pprint.t_cljs$pprint38267(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta38268);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t_cljs$pprint38267(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4657__auto___38273 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___38273)) {
      var cb_38274 = temp__4657__auto___38273;
      cb_38274.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4657__auto___38275 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___38275)) {
      var cb_38276 = temp__4657__auto___38275;
      cb_38276.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_38277 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_38278 = oldpos_38277 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_38278);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_38277, newpos_38278));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__38282 = cljs.core._EQ_;
      var expr__38283 = relative_to;
      if (cljs.core.truth_(pred__38282.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__38283))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__38282.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__38283))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38283)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 
1, true, 119, 130, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 83, 89, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 
17, 1, true, 107, 117, cljs.core.List.EMPTY, "*print-length* controls how many items of each collection the\n  printer will print. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  number of items of each collection to print. If a collection contains\n  more items, the printer will print items up to the limit followed by\n  '...' to represent the remaining items. The root binding is nil\n  indicating no limit.", new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__38285_SHARP_) {
    var temp__4657__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__38285_SHARP_));
    if (cljs.core.truth_(temp__4657__auto__)) {
      var v = temp__4657__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__38285_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__26228__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__26228__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__26228__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__26228__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___38306 = arguments.length;
  var i__27316__auto___38307 = 0;
  while (true) {
    if (i__27316__auto___38307 < len__27315__auto___38306) {
      args__27322__auto__.push(arguments[i__27316__auto___38307]);
      var G__38308 = i__27316__auto___38307 + 1;
      i__27316__auto___38307 = G__38308;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_38292 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_38293 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_38294 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_38295 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_38296 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_38297 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_38298 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_38299 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_38300 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_38301 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_38302 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_38303 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__28277__auto___38309 = base_writer;
        var new_writer__28278__auto___38310 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__28277__auto___38309));
        var _STAR_out_STAR_38304_38311 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__28278__auto___38310 ? cljs.pprint.make_pretty_writer.call(null, base_writer__28277__auto___38309, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__28277__auto___38309;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_38304_38311;
        }
      } else {
        var _STAR_out_STAR_38305_38312 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_38305_38312;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_38303;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_38302;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_38301;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_38300;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_38299;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_38298;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_38297;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_38296;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_38295;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_38294;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_38293;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_38292;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq38290) {
  var G__38291 = cljs.core.first.call(null, seq38290);
  var seq38290__$1 = cljs.core.next.call(null, seq38290);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__38291, seq38290__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var args38313 = [];
  var len__27315__auto___38319 = arguments.length;
  var i__27316__auto___38320 = 0;
  while (true) {
    if (i__27316__auto___38320 < len__27315__auto___38319) {
      args38313.push(arguments[i__27316__auto___38320]);
      var G__38321 = i__27316__auto___38320 + 1;
      i__27316__auto___38320 = G__38321;
      continue;
    } else {
    }
    break;
  }
  var G__38315 = args38313.length;
  switch(G__38315) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38313.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_38316 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_38316;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__28277__auto__ = writer;
  var new_writer__28278__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__28277__auto__));
  var _STAR_out_STAR_38317 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__28278__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__28277__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__28277__auto__;
  try {
    var _STAR_print_pretty_STAR_38318_38323 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_38318_38323;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_38317;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__26228__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__26228__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__26228__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___38327 = arguments.length;
  var i__27316__auto___38328 = 0;
  while (true) {
    if (i__27316__auto___38328 < len__27315__auto___38327) {
      args__27322__auto__.push(arguments[i__27316__auto___38328]);
      var G__38329 = i__27316__auto___38328 + 1;
      i__27316__auto___38328 = G__38329;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq38324) {
  var G__38325 = cljs.core.first.call(null, seq38324);
  var seq38324__$1 = cljs.core.next.call(null, seq38324);
  var G__38326 = cljs.core.first.call(null, seq38324__$1);
  var seq38324__$2 = cljs.core.next.call(null, seq38324__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__38325, G__38326, seq38324__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38331, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38333 = k38331 instanceof cljs.core.Keyword ? k38331.fqn : null;
  switch(G__38333) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38331, else__26865__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38330) {
  var self__ = this;
  var G__38330__$1 = this;
  return new cljs.core.RecordIter(0, G__38330__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38330) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38334 = cljs.core.keyword_identical_QMARK_;
  var expr__38335 = k__26870__auto__;
  if (cljs.core.truth_(pred__38334.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__38335))) {
    return new cljs.pprint.arg_navigator(G__38330, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38334.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__38335))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__38330, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38334.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__38335))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__38330, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38330), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38330) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__38330, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__38332) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__38332), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__38332), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__38332), null, cljs.core.dissoc.call(null, G__38332, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__38341 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__38341, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38341, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k38345, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__38347 = k38345 instanceof cljs.core.Keyword ? k38345.fqn : null;
  switch(G__38347) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k38345, else__26865__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__38344) {
  var self__ = this;
  var G__38344__$1 = this;
  return new cljs.core.RecordIter(0, G__38344__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__38344) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__38348 = cljs.core.keyword_identical_QMARK_;
  var expr__38349 = k__26870__auto__;
  if (cljs.core.truth_(pred__38348.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__38349))) {
    return new cljs.pprint.compiled_directive(G__38344, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__38348.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__38349))) {
      return new cljs.pprint.compiled_directive(self__.func, G__38344, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__38348.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__38349))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__38344, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__38348.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__38349))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__38344, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__38344), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__38344) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__38344, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__38346) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__38346), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__38346), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__38346), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__38346), null, cljs.core.dissoc.call(null, G__38346, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__38352, navigator) {
  var vec__38362 = p__38352;
  var param = cljs.core.nth.call(null, vec__38362, 0, null);
  var vec__38365 = cljs.core.nth.call(null, vec__38362, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__38365, 0, null);
  var offset = cljs.core.nth.call(null, vec__38365, 1, null);
  var vec__38368 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__38368, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__38368, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__38374 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__38374, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__38374, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__26240__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__38380 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__38380, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__38380, 1, null);
  var base_output = function() {
    var or__26240__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__38383_SHARP_) {
    if (p1__38383_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__38383_SHARP_, base), cljs.core.quot.call(null, p1__38383_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__38384_SHARP_) {
        if (p1__38384_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__38384_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__38384_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__38389 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__38389, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__38389, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_38392 = arg < 0;
    var pos_arg_38393 = neg_38392 ? -arg : arg;
    var raw_str_38394 = cljs.pprint.opt_base_str.call(null, base, pos_arg_38393);
    var group_str_38395 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_38392, pos_arg_38393, raw_str_38394, vec__38389, arg, arg_navigator__$1) {
        return function(p1__38385_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__38385_SHARP_);
        };
      }(neg_38392, pos_arg_38393, raw_str_38394, vec__38389, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_38394));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_38394;
    var signed_str_38396 = neg_38392 ? [cljs.core.str("-"), cljs.core.str(group_str_38395)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_38395)].join("") : group_str_38395;
    var padded_str_38397 = signed_str_38396.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_38396.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_38396)].join("") : 
    signed_str_38396;
    cljs.pprint.print.call(null, padded_str_38397);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__38398 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__38399 = pos - 1;
      var G__38400 = cljs.core.first.call(null, remainder);
      var G__38401 = cljs.core.next.call(null, remainder);
      acc = G__38398;
      pos = G__38399;
      this$ = G__38400;
      remainder = G__38401;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__38405 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38405, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38405, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_38408 = arg < 0 ? -arg : arg;
    var parts_38409 = cljs.pprint.remainders.call(null, 1E3, abs_arg_38408);
    if (cljs.core.count.call(null, parts_38409) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_38410 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_38409);
      var full_str_38411 = cljs.pprint.add_english_scales.call(null, parts_strs_38410, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_38411)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__38415 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38415, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38415, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_38418 = arg < 0 ? -arg : arg;
    var parts_38419 = cljs.pprint.remainders.call(null, 1E3, abs_arg_38418);
    if (cljs.core.count.call(null, parts_38419) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_38420 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_38419));
      var head_str_38421 = cljs.pprint.add_english_scales.call(null, parts_strs_38420, 1);
      var tail_str_38422 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_38419));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_38421) && !cljs.core.empty_QMARK_.call(null, tail_str_38422) ? [cljs.core.str(head_str_38421), cljs.core.str(", "), cljs.core.str(tail_str_38422)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_38421) ? [cljs.core.str(head_str_38421), cljs.core.str("th")].join("") : tail_str_38422)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_38423 = cljs.core.rem.call(null, arg, 100);
      var not_teens_38424 = 11 < low_two_digits_38423 || 19 > low_two_digits_38423;
      var low_digit_38425 = cljs.core.rem.call(null, low_two_digits_38423, 10);
      cljs.pprint.print.call(null, low_digit_38425 === 1 && not_teens_38424 ? "st" : low_digit_38425 === 2 && not_teens_38424 ? "nd" : low_digit_38425 === 3 && not_teens_38424 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__38429 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38429, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38429, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_38432 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_38433 = cljs.core.PersistentVector.EMPTY;
    var pos_38434 = cljs.core.count.call(null, digits_38432) - 1;
    var digits_38435__$1 = digits_38432;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_38435__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_38433));
      } else {
        var digit_38436 = cljs.core.first.call(null, digits_38435__$1);
        var G__38437 = cljs.core._EQ_.call(null, 0, digit_38436) ? acc_38433 : cljs.core.conj.call(null, acc_38433, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_38434), digit_38436 - 1));
        var G__38438 = pos_38434 - 1;
        var G__38439 = cljs.core.next.call(null, digits_38435__$1);
        acc_38433 = G__38437;
        pos_38434 = G__38438;
        digits_38435__$1 = G__38439;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__38443 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__38443, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38443, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__38452 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__38452, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38452, 1, null);
  var pred__38455_38458 = cljs.core._EQ_;
  var expr__38456_38459 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__38455_38458.call(null, "o", expr__38456_38459))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__38455_38458.call(null, "u", expr__38456_38459))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__38455_38458.call(null, null, expr__38456_38459))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38456_38459)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__38463 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__38463, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38463, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__38472 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__38472, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__38472, 1, null);
      var vec__38475 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__38475, 0, null);
      var offsets = cljs.core.nth.call(null, vec__38475, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__38481 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__38481, 0, null);
  var e = cljs.core.nth.call(null, vec__38481, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__38484 = i - 1;
        i = G__38484;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = d;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__26571__auto__ = 2;
      var y__26572__auto__ = w;
      return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__26571__auto__ = e + 1;
      var y__26572__auto__ = w__$1 - 1;
      return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
    }() : w__$1 + e;
    var vec__38488 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__38488, 0, null);
    var e1 = cljs.core.nth.call(null, vec__38488, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__38488, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__38488, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__38494 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__38494, 0, null);
  var e1 = cljs.core.nth.call(null, vec__38494, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__38509 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38509, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38509, 1, null);
  var vec__38512 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__38512, 0, null);
  var abs = cljs.core.nth.call(null, vec__38512, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__38515 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__38515, 0, null);
  var exp = cljs.core.nth.call(null, vec__38515, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__38518 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__38518, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__38518, 1, null);
  var expanded = cljs.core.nth.call(null, vec__38518, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__26228__auto__ = w;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = d;
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_38521 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_38522 = cljs.core.truth_(add_sign) ? len_38521 + 1 : len_38521;
    var prepend_zero_38523__$1 = prepend_zero && !(signed_len_38522 >= w);
    var append_zero_38524__$1 = append_zero && !(signed_len_38522 >= w);
    var full_len_38525 = prepend_zero_38523__$1 || append_zero_38524__$1 ? signed_len_38522 + 1 : signed_len_38522;
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = full_len_38525 > w;
      if (and__26228__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__26228__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_38525, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_38523__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_38524__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__38542 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38542, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38542, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__38548_38558 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__38549_38559 = G__38548_38558;
  var mantissa_38560 = cljs.core.nth.call(null, vec__38549_38559, 0, null);
  var exp_38561 = cljs.core.nth.call(null, vec__38549_38559, 1, null);
  var G__38548_38562__$1 = G__38548_38558;
  while (true) {
    var vec__38552_38563 = G__38548_38562__$1;
    var mantissa_38564__$1 = cljs.core.nth.call(null, vec__38552_38563, 0, null);
    var exp_38565__$1 = cljs.core.nth.call(null, vec__38552_38563, 1, null);
    var w_38566 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_38567 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_38568 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_38569 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_38570 = function() {
      var or__26240__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_38571 = function() {
      var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_38572 = k_38569 <= 0;
    var scaled_exp_38573 = exp_38565__$1 - (k_38569 - 1);
    var scaled_exp_str_38574 = [cljs.core.str(Math.abs(scaled_exp_38573))].join("");
    var scaled_exp_str_38575__$1 = [cljs.core.str(expchar_38570), cljs.core.str(scaled_exp_38573 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_38568) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_38568 - cljs.core.count.call(null, scaled_exp_str_38574), "0")) : null), cljs.core.str(scaled_exp_str_38574)].join("");
    var exp_width_38576 = cljs.core.count.call(null, scaled_exp_str_38575__$1);
    var base_mantissa_width_38577 = cljs.core.count.call(null, mantissa_38564__$1);
    var scaled_mantissa_38578 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_38569, "0"))), cljs.core.str(mantissa_38564__$1), cljs.core.str(cljs.core.truth_(d_38567) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_38567 - (base_mantissa_width_38577 - 1) - (k_38569 < 0 ? -k_38569 : 0), "0")) : null)].join("");
    var w_mantissa_38579 = cljs.core.truth_(w_38566) ? w_38566 - exp_width_38576 : null;
    var vec__38555_38580 = cljs.pprint.round_str.call(null, scaled_mantissa_38578, 0, cljs.core._EQ_.call(null, k_38569, 0) ? d_38567 - 1 : k_38569 > 0 ? d_38567 : k_38569 < 0 ? d_38567 - 1 : null, cljs.core.truth_(w_mantissa_38579) ? w_mantissa_38579 - (cljs.core.truth_(add_sign_38571) ? 1 : 0) : null);
    var rounded_mantissa_38581 = cljs.core.nth.call(null, vec__38555_38580, 0, null);
    var __38582 = cljs.core.nth.call(null, vec__38555_38580, 1, null);
    var incr_exp_38583 = cljs.core.nth.call(null, vec__38555_38580, 2, null);
    var full_mantissa_38584 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_38581, k_38569);
    var append_zero_38585 = cljs.core._EQ_.call(null, k_38569, cljs.core.count.call(null, rounded_mantissa_38581)) && d_38567 == null;
    if (cljs.core.not.call(null, incr_exp_38583)) {
      if (cljs.core.truth_(w_38566)) {
        var len_38586 = cljs.core.count.call(null, full_mantissa_38584) + exp_width_38576;
        var signed_len_38587 = cljs.core.truth_(add_sign_38571) ? len_38586 + 1 : len_38586;
        var prepend_zero_38588__$1 = prepend_zero_38572 && !cljs.core._EQ_.call(null, signed_len_38587, w_38566);
        var full_len_38589 = prepend_zero_38588__$1 ? signed_len_38587 + 1 : signed_len_38587;
        var append_zero_38590__$1 = append_zero_38585 && full_len_38589 < w_38566;
        if (cljs.core.truth_(function() {
          var and__26228__auto__ = function() {
            var or__26240__auto__ = full_len_38589 > w_38566;
            if (or__26240__auto__) {
              return or__26240__auto__;
            } else {
              var and__26228__auto__ = e_38568;
              if (cljs.core.truth_(and__26228__auto__)) {
                return exp_width_38576 - 2 > e_38568;
              } else {
                return and__26228__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__26228__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__26228__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_38566, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_38566 - full_len_38589 - (append_zero_38590__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_38571) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_38588__$1 ? "0" : null), cljs.core.str(full_mantissa_38584), cljs.core.str(append_zero_38590__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_38575__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_38571) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_38572 ? "0" : null), cljs.core.str(full_mantissa_38584), cljs.core.str(append_zero_38585 ? "0" : null), cljs.core.str(scaled_exp_str_38575__$1)].join(""));
      }
    } else {
      var G__38591 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_38581, exp_38565__$1 + 1], null);
      G__38548_38562__$1 = G__38591;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__38598 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38598, 0, null);
  var _ = cljs.core.nth.call(null, vec__38598, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__38601 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__38601, 0, null);
  var exp = cljs.core.nth.call(null, vec__38601, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__26571__auto__ = cljs.core.count.call(null, mantissa);
    var y__26572__auto__ = function() {
      var x__26578__auto__ = n;
      var y__26579__auto__ = 7;
      return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
    }();
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__38613 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38613, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38613, 1, null);
  var vec__38616 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__38616, 0, null);
  var exp = cljs.core.nth.call(null, vec__38616, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__38619 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__38619, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__38619, 1, null);
  var expanded = cljs.core.nth.call(null, vec__38619, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__26228__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__26228__auto__)) {
      return add_sign;
    } else {
      return and__26228__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__26228__auto__) {
      return add_sign;
    } else {
      return and__26228__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__38625 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__38625, 0, null);
  var navigator = cljs.core.nth.call(null, vec__38625, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__38631 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__38631, 0, null);
  var navigator = cljs.core.nth.call(null, vec__38631, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__38637 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__38637, 0, null);
  var navigator = cljs.core.nth.call(null, vec__38637, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__38646 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__38646, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38646, 1, null);
  var vec__38649 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__38649, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__38649, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__38652 = count + 1;
        var G__38653 = iter_result;
        var G__38654 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__38652;
        args__$1 = G__38653;
        last_pos = G__38654;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__38661 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__38661, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38661, 1, null);
  var vec__38664 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__38664, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__38664, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__38667 = count + 1;
        var G__38668 = cljs.core.next.call(null, arg_list__$1);
        count = G__38667;
        arg_list__$1 = G__38668;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__38672 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__38672, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38672, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__38675 = count + 1;
        var G__38676 = iter_result;
        var G__38677 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__38675;
        navigator__$2 = G__38676;
        last_pos = G__38677;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__38684 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__38684, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38684, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__38687 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__38687, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__38687, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__38690 = count + 1;
        var G__38691 = navigator__$3;
        count = G__38690;
        navigator__$2 = G__38691;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__38696 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_38699 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_38699;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__38696, 0, null);
      var result_str = cljs.core.nth.call(null, vec__38696, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__38700 = cljs.core.next.call(null, clauses__$1);
        var G__38701 = cljs.core.conj.call(null, acc, result_str);
        var G__38702 = iter_result;
        clauses__$1 = G__38700;
        acc = G__38701;
        navigator__$1 = G__38702;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__38715 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var else$ = temp__4657__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__38718 = cljs.core.nth.call(null, vec__38715, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__38718, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__38715, 1, null);
  var navigator__$1 = function() {
    var or__26240__auto__ = new_navigator;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__38721 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__38721, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__38721, 1, null);
  var navigator__$2 = function() {
    var or__26240__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__26240__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__26240__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__38724 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__38724, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__38724, 1, null);
  var slots = function() {
    var x__26571__auto__ = 1;
    var y__26572__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__26571__auto__ = minpad;
    var y__26572__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = eol_str;
    if (cljs.core.truth_(and__26228__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_38727__$1 = slots;
  var extra_pad_38728__$1 = extra_pad;
  var strs_38729__$1 = strs;
  var pad_only_38730 = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_38729__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_38729__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_38730) ? cljs.core.first.call(null, strs_38729__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__26240__auto__ = pad_only_38730;
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          var or__26240__auto____$1 = cljs.core.next.call(null, strs_38729__$1);
          if (or__26240__auto____$1) {
            return or__26240__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_38728__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__38731 = slots_38727__$1 - 1;
      var G__38732 = extra_pad_38728__$1 - 1;
      var G__38733 = cljs.core.truth_(pad_only_38730) ? strs_38729__$1 : cljs.core.next.call(null, strs_38729__$1);
      var G__38734 = false;
      slots_38727__$1 = G__38731;
      extra_pad_38728__$1 = G__38732;
      strs_38729__$1 = G__38733;
      pad_only_38730 = G__38734;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint38741 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint38741 = function(downcase_writer, writer, meta38742) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta38742 = meta38742;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint38741.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_38743, meta38742__$1) {
      var self__ = this;
      var _38743__$1 = this;
      return new cljs.pprint.t_cljs$pprint38741(self__.downcase_writer, self__.writer, meta38742__$1);
    };
    cljs.pprint.t_cljs$pprint38741.prototype.cljs$core$IMeta$_meta$arity$1 = function(_38743) {
      var self__ = this;
      var _38743__$1 = this;
      return self__.meta38742;
    };
    cljs.pprint.t_cljs$pprint38741.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint38741.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__38744 = cljs.core._EQ_;
      var expr__38745 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__38744.call(null, String, expr__38745))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__38744.call(null, Number, expr__38745))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38745)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint38741.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta38742", "meta38742", 739346478, null)], null);
    };
    cljs.pprint.t_cljs$pprint38741.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint38741.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint38741";
    cljs.pprint.t_cljs$pprint38741.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint38741");
    };
    cljs.pprint.__GT_t_cljs$pprint38741 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint38741(downcase_writer__$1, writer__$1, meta38742) {
      return new cljs.pprint.t_cljs$pprint38741(downcase_writer__$1, writer__$1, meta38742);
    };
  }
  return new cljs.pprint.t_cljs$pprint38741(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint38753 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint38753 = function(upcase_writer, writer, meta38754) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta38754 = meta38754;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint38753.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_38755, meta38754__$1) {
      var self__ = this;
      var _38755__$1 = this;
      return new cljs.pprint.t_cljs$pprint38753(self__.upcase_writer, self__.writer, meta38754__$1);
    };
    cljs.pprint.t_cljs$pprint38753.prototype.cljs$core$IMeta$_meta$arity$1 = function(_38755) {
      var self__ = this;
      var _38755__$1 = this;
      return self__.meta38754;
    };
    cljs.pprint.t_cljs$pprint38753.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint38753.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__38756 = cljs.core._EQ_;
      var expr__38757 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__38756.call(null, String, expr__38757))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__38756.call(null, Number, expr__38757))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38757)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint38753.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta38754", "meta38754", 1365265160, null)], null);
    };
    cljs.pprint.t_cljs$pprint38753.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint38753.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint38753";
    cljs.pprint.t_cljs$pprint38753.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint38753");
    };
    cljs.pprint.__GT_t_cljs$pprint38753 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint38753(upcase_writer__$1, writer__$1, meta38754) {
      return new cljs.pprint.t_cljs$pprint38753(upcase_writer__$1, writer__$1, meta38754);
    };
  }
  return new cljs.pprint.t_cljs$pprint38753(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__26228__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = f;
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__26228__auto__ = m;
          if (cljs.core.truth_(and__26228__auto__)) {
            return m.index + 1;
          } else {
            return and__26228__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t_cljs$pprint38765 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint38765 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta38766) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta38766 = meta38766;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint38765.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_38767, meta38766__$1) {
        var self__ = this;
        var _38767__$1 = this;
        return new cljs.pprint.t_cljs$pprint38765(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta38766__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint38765.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_38767) {
        var self__ = this;
        var _38767__$1 = this;
        return self__.meta38766;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint38765.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint38765.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__38768 = cljs.core._EQ_;
        var expr__38769 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__38768.call(null, String, expr__38769))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__38768.call(null, Number, expr__38769))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38769)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint38765.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta38766", "meta38766", -1244230840, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint38765.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint38765.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint38765";
    cljs.pprint.t_cljs$pprint38765.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint38765");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t_cljs$pprint38765 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint38765(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta38766) {
        return new cljs.pprint.t_cljs$pprint38765(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta38766);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t_cljs$pprint38765(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t_cljs$pprint38777 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint38777 = function(init_cap_writer, writer, capped, meta38778) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta38778 = meta38778;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint38777.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_38779, meta38778__$1) {
        var self__ = this;
        var _38779__$1 = this;
        return new cljs.pprint.t_cljs$pprint38777(self__.init_cap_writer, self__.writer, self__.capped, meta38778__$1);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint38777.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_38779) {
        var self__ = this;
        var _38779__$1 = this;
        return self__.meta38778;
      };
    }(capped);
    cljs.pprint.t_cljs$pprint38777.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint38777.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__38780 = cljs.core._EQ_;
        var expr__38781 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__38780.call(null, String, expr__38781))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__26228__auto__ = m;
              if (cljs.core.truth_(and__26228__auto__)) {
                return m.index;
              } else {
                return and__26228__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__38780.call(null, Number, expr__38781))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__26228__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__26228__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__26228__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__38781)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t_cljs$pprint38777.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta38778", "meta38778", 906767025, null)], null);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint38777.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint38777.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint38777";
    cljs.pprint.t_cljs$pprint38777.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint38777");
      };
    }(capped);
    cljs.pprint.__GT_t_cljs$pprint38777 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint38777(init_cap_writer__$1, writer__$1, capped__$1, meta38778) {
        return new cljs.pprint.t_cljs$pprint38777(init_cap_writer__$1, writer__$1, capped__$1, meta38778);
      };
    }(capped);
  }
  return new cljs.pprint.t_cljs$pprint38777(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_38784 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_38784;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_38787 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_38788 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_38789 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_38790 = current_38789 < colnum_38787 ? colnum_38787 - current_38789 : cljs.core._EQ_.call(null, colinc_38788, 0) ? 0 : colinc_38788 - cljs.core.rem.call(null, current_38789 - colnum_38787, colinc_38788);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_38790, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_38791 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_38792 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_38793 = colrel_38791 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_38794 = colinc_38792 > 0 ? cljs.core.rem.call(null, start_col_38793, colinc_38792) : 0;
  var space_count_38795 = colrel_38791 + (cljs.core._EQ_.call(null, 0, offset_38794) ? 0 : colinc_38792 - offset_38794);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_38795, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__38801 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__38801, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__38801, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_38804_38806 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_38805_38807 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_38805_38807;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_38804_38806;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__38808_SHARP_, p2__38809_SHARP_, p3__38810_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__38808_SHARP_, p2__38809_SHARP_, p3__38810_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__38811_SHARP_, p2__38812_SHARP_, p3__38813_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__38811_SHARP_, p2__38812_SHARP_, p3__38813_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__38814_SHARP_, p2__38815_SHARP_, p3__38816_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__38814_SHARP_, p2__38815_SHARP_, p3__38816_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__38817_SHARP_, p2__38818_SHARP_, p3__38819_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__38817_SHARP_, p2__38818_SHARP_, p3__38819_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__38820_SHARP_, p2__38821_SHARP_, p3__38822_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__38820_SHARP_, p2__38821_SHARP_, p3__38822_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__38823_SHARP_, p2__38824_SHARP_, p3__38825_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__38823_SHARP_, p2__38824_SHARP_, p3__38825_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__38826_SHARP_, p2__38827_SHARP_, p3__38828_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__38826_SHARP_), p1__38826_SHARP_, p2__38827_SHARP_, p3__38828_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__26228__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__26228__auto__;
      }
    }())) {
      return function(p1__38829_SHARP_, p2__38830_SHARP_, p3__38831_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__38829_SHARP_, p2__38830_SHARP_, p3__38831_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__38832_SHARP_, p2__38833_SHARP_, p3__38834_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__38832_SHARP_, p2__38833_SHARP_, p3__38834_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__38835_SHARP_, p2__38836_SHARP_, p3__38837_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__38835_SHARP_, p2__38836_SHARP_, p3__38837_SHARP_);
          };
        } else {
          return function(p1__38838_SHARP_, p2__38839_SHARP_, p3__38840_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__38838_SHARP_, p2__38839_SHARP_, p3__38840_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__38850 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__38850, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__38850, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__27155__auto___38868 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_38869 = 0;
    while (true) {
      if (i_38869 < n__27155__auto___38868) {
        cljs.pprint.prn.call(null);
        var G__38870 = i_38869 + 1;
        i_38869 = G__38870;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_38871 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_38871 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__27155__auto___38872 = cnt_38871 - 1;
    var i_38873 = 0;
    while (true) {
      if (i_38873 < n__27155__auto___38872) {
        cljs.pprint.prn.call(null);
        var G__38874 = i_38873 + 1;
        i_38873 = G__38874;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__27155__auto___38875 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_38876 = 0;
    while (true) {
      if (i_38876 < n__27155__auto___38875) {
        cljs.pprint.print.call(null, "\f");
        var G__38877 = i_38876 + 1;
        i_38876 = G__38877;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__38841_SHARP_, p2__38842_SHARP_, p3__38843_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__38841_SHARP_, p2__38842_SHARP_, p3__38843_SHARP_);
    };
  } else {
    return function(p1__38844_SHARP_, p2__38845_SHARP_, p3__38846_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__38844_SHARP_, p2__38845_SHARP_, p3__38846_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__38853 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__38853, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__38853, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__38856 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__38856, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__38856, 1, null);
      var vec__38859 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__38859, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__38859, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__26228__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__26228__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__26228__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__38847_SHARP_, p2__38848_SHARP_, p3__38849_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__38847_SHARP_, p2__38848_SHARP_, p3__38849_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__26228__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__26228__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = arg1;
      if (cljs.core.truth_(and__26228__auto__)) {
        var and__26228__auto____$1 = arg2;
        if (cljs.core.truth_(and__26228__auto____$1)) {
          return arg3;
        } else {
          return and__26228__auto____$1;
        }
      } else {
        return and__26228__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__26228__auto__ = arg1;
        if (cljs.core.truth_(and__26228__auto__)) {
          return arg2;
        } else {
          return and__26228__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__38862 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__38862, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__38862, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__38865 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__38865, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__38865, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__38878) {
  var vec__38882 = p__38878;
  var s = cljs.core.nth.call(null, vec__38882, 0, null);
  var offset = cljs.core.nth.call(null, vec__38882, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__38882, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__38885) {
  var vec__38889 = p__38885;
  var p = cljs.core.nth.call(null, vec__38889, 0, null);
  var offset = cljs.core.nth.call(null, vec__38889, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__38896) {
    var vec__38897 = p__38896;
    var s__$1 = cljs.core.nth.call(null, vec__38897, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__38897, 1, null);
    var flags = cljs.core.nth.call(null, vec__38897, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__26228__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__26228__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__26228__auto__) {
      var and__26228__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__26578__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__26579__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__38900_SHARP_, p2__38901_SHARP_) {
    var val = cljs.core.first.call(null, p1__38900_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__38901_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__38901_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__38900_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__27020__auto__ = function cljs$pprint$map_params_$_iter__38933(s__38934) {
      return new cljs.core.LazySeq(null, function() {
        var s__38934__$1 = s__38934;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__38934__$1);
          if (temp__4657__auto__) {
            var s__38934__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__38934__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__38934__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__38936 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__38935 = 0;
                while (true) {
                  if (i__38935 < size__27019__auto__) {
                    var vec__38949 = cljs.core._nth.call(null, c__27018__auto__, i__38935);
                    var name = cljs.core.nth.call(null, vec__38949, 0, null);
                    var vec__38952 = cljs.core.nth.call(null, vec__38949, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__38952, 0, null);
                    cljs.core.chunk_append.call(null, b__38936, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__38961 = i__38935 + 1;
                    i__38935 = G__38961;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38936), cljs$pprint$map_params_$_iter__38933.call(null, cljs.core.chunk_rest.call(null, s__38934__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__38936), null);
              }
            } else {
              var vec__38955 = cljs.core.first.call(null, s__38934__$2);
              var name = cljs.core.nth.call(null, vec__38955, 0, null);
              var vec__38958 = cljs.core.nth.call(null, vec__38955, 1, null);
              var default$ = cljs.core.nth.call(null, vec__38958, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__38933.call(null, cljs.core.rest.call(null, s__38934__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__38902_SHARP_, p2__38903_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__38902_SHARP_, p2__38903_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__38904_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__38904_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__38974 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__38974, 0, null);
  var vec__38977 = cljs.core.nth.call(null, vec__38974, 1, null);
  var rest = cljs.core.nth.call(null, vec__38977, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__38977, 1, null);
  var vec__38980 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__38980, 0, null);
  var vec__38983 = cljs.core.nth.call(null, vec__38980, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__38983, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__38983, 1, null);
  var flags = cljs.core.nth.call(null, vec__38983, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__26228__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__26228__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__26228__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__38989 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__38989, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__38989, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__39002) {
    var vec__39003 = p__39002;
    var clause_map = cljs.core.nth.call(null, vec__39003, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__39003, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__39003, 2, null);
    var vec__39006 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__39006, 0, null);
    var vec__39009 = cljs.core.nth.call(null, vec__39006, 1, null);
    var type = cljs.core.nth.call(null, vec__39009, 0, null);
    var right_params = cljs.core.nth.call(null, vec__39009, 1, null);
    var else_params = cljs.core.nth.call(null, vec__39009, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__39009, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_39017 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_39017) {
      return function(p__39018) {
        var vec__39019 = p__39018;
        var s = cljs.core.nth.call(null, vec__39019, 0, null);
        var offset = cljs.core.nth.call(null, vec__39019, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_39017), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_39017;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__26240__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          var or__26240__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__26240__auto____$1)) {
            return or__26240__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__39022 = cljs.core.next.call(null, format__$1);
        format__$1 = G__39022;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var args39023 = [];
  var len__27315__auto___39033 = arguments.length;
  var i__27316__auto___39034 = 0;
  while (true) {
    if (i__27316__auto___39034 < len__27315__auto___39033) {
      args39023.push(arguments[i__27316__auto___39034]);
      var G__39035 = i__27316__auto___39034 + 1;
      i__27316__auto___39034 = G__39035;
      continue;
    } else {
    }
    break;
  }
  var G__39025 = args39023.length;
  switch(G__39025) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39023.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__26228__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__26228__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_39026 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_39026;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__39027 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__39027, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__39027, 1, null);
      var vec__39030 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__39030, 0, null);
      var offsets = cljs.core.nth.call(null, vec__39030, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = macro_char;
    if (cljs.core.truth_(and__26228__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39040_39043 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39041_39044 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count39042_39045 = 0;
      var alis_39046__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count39042_39045 < cljs.core._STAR_print_length_STAR_) {
          if (alis_39046__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_39046__$1));
            if (cljs.core.next.call(null, alis_39046__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__39047 = length_count39042_39045 + 1;
              var G__39048 = cljs.core.next.call(null, alis_39046__$1);
              length_count39042_39045 = G__39047;
              alis_39046__$1 = G__39048;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39041_39044;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39040_39043;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39052_39055 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39053_39056 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count39054_39057 = 0;
      var aseq_39058 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count39054_39057 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_39058) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_39058));
            if (cljs.core.next.call(null, aseq_39058)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__39059 = length_count39054_39057 + 1;
              var G__39060 = cljs.core.next.call(null, aseq_39058);
              length_count39054_39057 = G__39059;
              aseq_39058 = G__39060;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39053_39056;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39052_39055;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__28338__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
  return function(format_in__28338__auto__, cf__28339__auto__) {
    return function() {
      var G__39061__delegate = function(args__28340__auto__) {
        var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
        return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
      };
      var G__39061 = function(var_args) {
        var args__28340__auto__ = null;
        if (arguments.length > 0) {
          var G__39062__i = 0, G__39062__a = new Array(arguments.length - 0);
          while (G__39062__i < G__39062__a.length) {
            G__39062__a[G__39062__i] = arguments[G__39062__i + 0];
            ++G__39062__i;
          }
          args__28340__auto__ = new cljs.core.IndexedSeq(G__39062__a, 0);
        }
        return G__39061__delegate.call(this, args__28340__auto__);
      };
      G__39061.cljs$lang$maxFixedArity = 0;
      G__39061.cljs$lang$applyTo = function(arglist__39063) {
        var args__28340__auto__ = cljs.core.seq(arglist__39063);
        return G__39061__delegate(args__28340__auto__);
      };
      G__39061.cljs$core$IFn$_invoke$arity$variadic = G__39061__delegate;
      return G__39061;
    }();
  }(format_in__28338__auto__, cf__28339__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39069_39074 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39070_39075 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count39071_39076 = 0;
      var aseq_39077 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count39071_39076 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_39077) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_39072_39078 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_39073_39079 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_39077));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_39077)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39073_39079;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39072_39078;
              }
            }
            if (cljs.core.next.call(null, aseq_39077)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__39080 = length_count39071_39076 + 1;
              var G__39081 = cljs.core.next.call(null, aseq_39077);
              length_count39071_39076 = G__39080;
              aseq_39077 = G__39081;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39070_39075;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39069_39074;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__28338__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
  return function(format_in__28338__auto__, cf__28339__auto__) {
    return function() {
      var G__39082__delegate = function(args__28340__auto__) {
        var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
        return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
      };
      var G__39082 = function(var_args) {
        var args__28340__auto__ = null;
        if (arguments.length > 0) {
          var G__39083__i = 0, G__39083__a = new Array(arguments.length - 0);
          while (G__39083__i < G__39083__a.length) {
            G__39083__a[G__39083__i] = arguments[G__39083__i + 0];
            ++G__39083__i;
          }
          args__28340__auto__ = new cljs.core.IndexedSeq(G__39083__a, 0);
        }
        return G__39082__delegate.call(this, args__28340__auto__);
      };
      G__39082.cljs$lang$maxFixedArity = 0;
      G__39082.cljs$lang$applyTo = function(arglist__39084) {
        var args__28340__auto__ = cljs.core.seq(arglist__39084);
        return G__39082__delegate(args__28340__auto__);
      };
      G__39082.cljs$core$IFn$_invoke$arity$variadic = G__39082__delegate;
      return G__39082;
    }();
  }(format_in__28338__auto__, cf__28339__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__26240__auto__ = function() {
    var temp__4657__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var match = temp__4657__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39089_39093 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39090_39094 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__26228__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__26228__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__26228__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39090_39094;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39089_39093;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__28338__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
  return function(format_in__28338__auto__, cf__28339__auto__) {
    return function() {
      var G__39095__delegate = function(args__28340__auto__) {
        var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
        return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
      };
      var G__39095 = function(var_args) {
        var args__28340__auto__ = null;
        if (arguments.length > 0) {
          var G__39096__i = 0, G__39096__a = new Array(arguments.length - 0);
          while (G__39096__i < G__39096__a.length) {
            G__39096__a[G__39096__i] = arguments[G__39096__i + 0];
            ++G__39096__i;
          }
          args__28340__auto__ = new cljs.core.IndexedSeq(G__39096__a, 0);
        }
        return G__39095__delegate.call(this, args__28340__auto__);
      };
      G__39095.cljs$lang$maxFixedArity = 0;
      G__39095.cljs$lang$applyTo = function(arglist__39097) {
        var args__28340__auto__ = cljs.core.seq(arglist__39097);
        return G__39095__delegate(args__28340__auto__);
      };
      G__39095.cljs$core$IFn$_invoke$arity$variadic = G__39095__delegate;
      return G__39095;
    }();
  }(format_in__28338__auto__, cf__28339__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__39116 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__39116, 0, null);
    var end = cljs.core.nth.call(null, vec__39116, 1, null);
    var vec__39119 = reference;
    var seq__39120 = cljs.core.seq.call(null, vec__39119);
    var first__39121 = cljs.core.first.call(null, seq__39120);
    var seq__39120__$1 = cljs.core.next.call(null, seq__39120);
    var keyw = first__39121;
    var args = seq__39120__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_39122_39132 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_39123_39133 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__28338__auto__ = "~w~:i";
          var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
          return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args) {
            return function() {
              var G__39134__delegate = function(args__28340__auto__) {
                var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
              };
              var G__39134 = function(var_args) {
                var args__28340__auto__ = null;
                if (arguments.length > 0) {
                  var G__39135__i = 0, G__39135__a = new Array(arguments.length - 0);
                  while (G__39135__i < G__39135__a.length) {
                    G__39135__a[G__39135__i] = arguments[G__39135__i + 0];
                    ++G__39135__i;
                  }
                  args__28340__auto__ = new cljs.core.IndexedSeq(G__39135__a, 0);
                }
                return G__39134__delegate.call(this, args__28340__auto__);
              };
              G__39134.cljs$lang$maxFixedArity = 0;
              G__39134.cljs$lang$applyTo = function(arglist__39136) {
                var args__28340__auto__ = cljs.core.seq(arglist__39136);
                return G__39134__delegate(args__28340__auto__);
              };
              G__39134.cljs$core$IFn$_invoke$arity$variadic = G__39134__delegate;
              return G__39134;
            }();
          }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args);
        })().call(null, keyw);
        var args_39137__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_39137__$1)) {
            (function() {
              var format_in__28338__auto__ = " ";
              var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
              return function(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args) {
                return function() {
                  var G__39138__delegate = function(args__28340__auto__) {
                    var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                    return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                  };
                  var G__39138 = function(var_args) {
                    var args__28340__auto__ = null;
                    if (arguments.length > 0) {
                      var G__39139__i = 0, G__39139__a = new Array(arguments.length - 0);
                      while (G__39139__i < G__39139__a.length) {
                        G__39139__a[G__39139__i] = arguments[G__39139__i + 0];
                        ++G__39139__i;
                      }
                      args__28340__auto__ = new cljs.core.IndexedSeq(G__39139__a, 0);
                    }
                    return G__39138__delegate.call(this, args__28340__auto__);
                  };
                  G__39138.cljs$lang$maxFixedArity = 0;
                  G__39138.cljs$lang$applyTo = function(arglist__39140) {
                    var args__28340__auto__ = cljs.core.seq(arglist__39140);
                    return G__39138__delegate(args__28340__auto__);
                  };
                  G__39138.cljs$core$IFn$_invoke$arity$variadic = G__39138__delegate;
                  return G__39138;
                }();
              }(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args);
            })().call(null);
            var arg_39141 = cljs.core.first.call(null, args_39137__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_39141)) {
              var vec__39124_39142 = cljs.pprint.brackets.call(null, arg_39141);
              var start_39143__$1 = cljs.core.nth.call(null, vec__39124_39142, 0, null);
              var end_39144__$1 = cljs.core.nth.call(null, vec__39124_39142, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_39127_39145 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_39128_39146 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_39143__$1, null, end_39144__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_39141), 3) && cljs.core.second.call(null, arg_39141) instanceof cljs.core.Keyword) {
                    var vec__39129_39147 = arg_39141;
                    var ns_39148 = cljs.core.nth.call(null, vec__39129_39147, 0, null);
                    var kw_39149 = cljs.core.nth.call(null, vec__39129_39147, 1, null);
                    var lis_39150 = cljs.core.nth.call(null, vec__39129_39147, 2, null);
                    (function() {
                      var format_in__28338__auto__ = "~w ~w ";
                      var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
                      return function(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, vec__39129_39147, ns_39148, kw_39149, lis_39150, _STAR_current_level_STAR_39127_39145, _STAR_current_length_STAR_39128_39146, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args) {
                        return function() {
                          var G__39151__delegate = function(args__28340__auto__) {
                            var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                            return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                          };
                          var G__39151 = function(var_args) {
                            var args__28340__auto__ = null;
                            if (arguments.length > 0) {
                              var G__39152__i = 0, G__39152__a = new Array(arguments.length - 0);
                              while (G__39152__i < G__39152__a.length) {
                                G__39152__a[G__39152__i] = arguments[G__39152__i + 0];
                                ++G__39152__i;
                              }
                              args__28340__auto__ = new cljs.core.IndexedSeq(G__39152__a, 0);
                            }
                            return G__39151__delegate.call(this, args__28340__auto__);
                          };
                          G__39151.cljs$lang$maxFixedArity = 0;
                          G__39151.cljs$lang$applyTo = function(arglist__39153) {
                            var args__28340__auto__ = cljs.core.seq(arglist__39153);
                            return G__39151__delegate(args__28340__auto__);
                          };
                          G__39151.cljs$core$IFn$_invoke$arity$variadic = G__39151__delegate;
                          return G__39151;
                        }();
                      }(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, vec__39129_39147, ns_39148, kw_39149, lis_39150, _STAR_current_level_STAR_39127_39145, _STAR_current_length_STAR_39128_39146, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args);
                    })().call(null, ns_39148, kw_39149);
                    if (cljs.core.sequential_QMARK_.call(null, lis_39150)) {
                      (function() {
                        var format_in__28338__auto__ = cljs.core.vector_QMARK_.call(null, lis_39150) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
                        return function(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, vec__39129_39147, ns_39148, kw_39149, lis_39150, _STAR_current_level_STAR_39127_39145, _STAR_current_length_STAR_39128_39146, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args) {
                          return function() {
                            var G__39154__delegate = function(args__28340__auto__) {
                              var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                              return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                            };
                            var G__39154 = function(var_args) {
                              var args__28340__auto__ = null;
                              if (arguments.length > 0) {
                                var G__39155__i = 0, G__39155__a = new Array(arguments.length - 0);
                                while (G__39155__i < G__39155__a.length) {
                                  G__39155__a[G__39155__i] = arguments[G__39155__i + 0];
                                  ++G__39155__i;
                                }
                                args__28340__auto__ = new cljs.core.IndexedSeq(G__39155__a, 0);
                              }
                              return G__39154__delegate.call(this, args__28340__auto__);
                            };
                            G__39154.cljs$lang$maxFixedArity = 0;
                            G__39154.cljs$lang$applyTo = function(arglist__39156) {
                              var args__28340__auto__ = cljs.core.seq(arglist__39156);
                              return G__39154__delegate(args__28340__auto__);
                            };
                            G__39154.cljs$core$IFn$_invoke$arity$variadic = G__39154__delegate;
                            return G__39154;
                          }();
                        }(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, vec__39129_39147, ns_39148, kw_39149, lis_39150, _STAR_current_level_STAR_39127_39145, _STAR_current_length_STAR_39128_39146, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args);
                      })().call(null, lis_39150);
                    } else {
                      cljs.pprint.write_out.call(null, lis_39150);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__28338__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
                      return function(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39127_39145, _STAR_current_length_STAR_39128_39146, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args) {
                        return function() {
                          var G__39157__delegate = function(args__28340__auto__) {
                            var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                            return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                          };
                          var G__39157 = function(var_args) {
                            var args__28340__auto__ = null;
                            if (arguments.length > 0) {
                              var G__39158__i = 0, G__39158__a = new Array(arguments.length - 0);
                              while (G__39158__i < G__39158__a.length) {
                                G__39158__a[G__39158__i] = arguments[G__39158__i + 0];
                                ++G__39158__i;
                              }
                              args__28340__auto__ = new cljs.core.IndexedSeq(G__39158__a, 0);
                            }
                            return G__39157__delegate.call(this, args__28340__auto__);
                          };
                          G__39157.cljs$lang$maxFixedArity = 0;
                          G__39157.cljs$lang$applyTo = function(arglist__39159) {
                            var args__28340__auto__ = cljs.core.seq(arglist__39159);
                            return G__39157__delegate(args__28340__auto__);
                          };
                          G__39157.cljs$core$IFn$_invoke$arity$variadic = G__39157__delegate;
                          return G__39157;
                        }();
                      }(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39127_39145, _STAR_current_length_STAR_39128_39146, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args);
                    }(), arg_39141);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39128_39146;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39127_39145;
                }
              }
              if (cljs.core.next.call(null, args_39137__$1)) {
                (function() {
                  var format_in__28338__auto__ = "~_";
                  var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
                  return function(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args) {
                    return function() {
                      var G__39160__delegate = function(args__28340__auto__) {
                        var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                        return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                      };
                      var G__39160 = function(var_args) {
                        var args__28340__auto__ = null;
                        if (arguments.length > 0) {
                          var G__39161__i = 0, G__39161__a = new Array(arguments.length - 0);
                          while (G__39161__i < G__39161__a.length) {
                            G__39161__a[G__39161__i] = arguments[G__39161__i + 0];
                            ++G__39161__i;
                          }
                          args__28340__auto__ = new cljs.core.IndexedSeq(G__39161__a, 0);
                        }
                        return G__39160__delegate.call(this, args__28340__auto__);
                      };
                      G__39160.cljs$lang$maxFixedArity = 0;
                      G__39160.cljs$lang$applyTo = function(arglist__39162) {
                        var args__28340__auto__ = cljs.core.seq(arglist__39162);
                        return G__39160__delegate(args__28340__auto__);
                      };
                      G__39160.cljs$core$IFn$_invoke$arity$variadic = G__39160__delegate;
                      return G__39160;
                    }();
                  }(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, vec__39124_39142, start_39143__$1, end_39144__$1, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_39141);
              if (cljs.core.next.call(null, args_39137__$1)) {
                (function() {
                  var format_in__28338__auto__ = "~:_";
                  var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
                  return function(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args) {
                    return function() {
                      var G__39163__delegate = function(args__28340__auto__) {
                        var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                        return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                      };
                      var G__39163 = function(var_args) {
                        var args__28340__auto__ = null;
                        if (arguments.length > 0) {
                          var G__39164__i = 0, G__39164__a = new Array(arguments.length - 0);
                          while (G__39164__i < G__39164__a.length) {
                            G__39164__a[G__39164__i] = arguments[G__39164__i + 0];
                            ++G__39164__i;
                          }
                          args__28340__auto__ = new cljs.core.IndexedSeq(G__39164__a, 0);
                        }
                        return G__39163__delegate.call(this, args__28340__auto__);
                      };
                      G__39163.cljs$lang$maxFixedArity = 0;
                      G__39163.cljs$lang$applyTo = function(arglist__39165) {
                        var args__28340__auto__ = cljs.core.seq(arglist__39165);
                        return G__39163__delegate(args__28340__auto__);
                      };
                      G__39163.cljs$core$IFn$_invoke$arity$variadic = G__39163__delegate;
                      return G__39163;
                    }();
                  }(args_39137__$1, format_in__28338__auto__, cf__28339__auto__, arg_39141, _STAR_current_level_STAR_39122_39132, _STAR_current_length_STAR_39123_39133, vec__39116, start, end, vec__39119, seq__39120, first__39121, seq__39120__$1, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__39166 = cljs.core.next.call(null, args_39137__$1);
            args_39137__$1 = G__39166;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39123_39133;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39122_39132;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__39178 = alis;
    var seq__39179 = cljs.core.seq.call(null, vec__39178);
    var first__39180 = cljs.core.first.call(null, seq__39179);
    var seq__39179__$1 = cljs.core.next.call(null, seq__39179);
    var ns_sym = first__39180;
    var first__39180__$1 = cljs.core.first.call(null, seq__39179__$1);
    var seq__39179__$2 = cljs.core.next.call(null, seq__39179__$1);
    var ns_name = first__39180__$1;
    var stuff = seq__39179__$2;
    var vec__39181 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__39181, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__39181, 1, null);
    var vec__39184 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__39184, 0, null);
    var references = cljs.core.nth.call(null, vec__39184, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_39187_39189 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_39188_39190 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__28338__auto__ = "~w ~1I~@_~w";
          var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
          return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39187_39189, _STAR_current_length_STAR_39188_39190, vec__39178, seq__39179, first__39180, seq__39179__$1, ns_sym, first__39180__$1, seq__39179__$2, ns_name, stuff, vec__39181, doc_str, stuff__$1, vec__39184, attr_map, references) {
            return function() {
              var G__39191__delegate = function(args__28340__auto__) {
                var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
              };
              var G__39191 = function(var_args) {
                var args__28340__auto__ = null;
                if (arguments.length > 0) {
                  var G__39192__i = 0, G__39192__a = new Array(arguments.length - 0);
                  while (G__39192__i < G__39192__a.length) {
                    G__39192__a[G__39192__i] = arguments[G__39192__i + 0];
                    ++G__39192__i;
                  }
                  args__28340__auto__ = new cljs.core.IndexedSeq(G__39192__a, 0);
                }
                return G__39191__delegate.call(this, args__28340__auto__);
              };
              G__39191.cljs$lang$maxFixedArity = 0;
              G__39191.cljs$lang$applyTo = function(arglist__39193) {
                var args__28340__auto__ = cljs.core.seq(arglist__39193);
                return G__39191__delegate(args__28340__auto__);
              };
              G__39191.cljs$core$IFn$_invoke$arity$variadic = G__39191__delegate;
              return G__39191;
            }();
          }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39187_39189, _STAR_current_length_STAR_39188_39190, vec__39178, seq__39179, first__39180, seq__39179__$1, ns_sym, first__39180__$1, seq__39179__$2, ns_name, stuff, vec__39181, doc_str, stuff__$1, vec__39184, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__26240__auto__ = doc_str;
          if (cljs.core.truth_(or__26240__auto__)) {
            return or__26240__auto__;
          } else {
            var or__26240__auto____$1 = attr_map;
            if (cljs.core.truth_(or__26240__auto____$1)) {
              return or__26240__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__28338__auto__ = "~@:_";
            var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
            return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39187_39189, _STAR_current_length_STAR_39188_39190, vec__39178, seq__39179, first__39180, seq__39179__$1, ns_sym, first__39180__$1, seq__39179__$2, ns_name, stuff, vec__39181, doc_str, stuff__$1, vec__39184, attr_map, references) {
              return function() {
                var G__39194__delegate = function(args__28340__auto__) {
                  var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                };
                var G__39194 = function(var_args) {
                  var args__28340__auto__ = null;
                  if (arguments.length > 0) {
                    var G__39195__i = 0, G__39195__a = new Array(arguments.length - 0);
                    while (G__39195__i < G__39195__a.length) {
                      G__39195__a[G__39195__i] = arguments[G__39195__i + 0];
                      ++G__39195__i;
                    }
                    args__28340__auto__ = new cljs.core.IndexedSeq(G__39195__a, 0);
                  }
                  return G__39194__delegate.call(this, args__28340__auto__);
                };
                G__39194.cljs$lang$maxFixedArity = 0;
                G__39194.cljs$lang$applyTo = function(arglist__39196) {
                  var args__28340__auto__ = cljs.core.seq(arglist__39196);
                  return G__39194__delegate(args__28340__auto__);
                };
                G__39194.cljs$core$IFn$_invoke$arity$variadic = G__39194__delegate;
                return G__39194;
              }();
            }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39187_39189, _STAR_current_length_STAR_39188_39190, vec__39178, seq__39179, first__39180, seq__39179__$1, ns_sym, first__39180__$1, seq__39179__$2, ns_name, stuff, vec__39181, doc_str, stuff__$1, vec__39184, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__26240__auto__ = attr_map;
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__28338__auto__ = "~w~:[~;~:@_~]";
            var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
            return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39187_39189, _STAR_current_length_STAR_39188_39190, vec__39178, seq__39179, first__39180, seq__39179__$1, ns_sym, first__39180__$1, seq__39179__$2, ns_name, stuff, vec__39181, doc_str, stuff__$1, vec__39184, attr_map, references) {
              return function() {
                var G__39197__delegate = function(args__28340__auto__) {
                  var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                };
                var G__39197 = function(var_args) {
                  var args__28340__auto__ = null;
                  if (arguments.length > 0) {
                    var G__39198__i = 0, G__39198__a = new Array(arguments.length - 0);
                    while (G__39198__i < G__39198__a.length) {
                      G__39198__a[G__39198__i] = arguments[G__39198__i + 0];
                      ++G__39198__i;
                    }
                    args__28340__auto__ = new cljs.core.IndexedSeq(G__39198__a, 0);
                  }
                  return G__39197__delegate.call(this, args__28340__auto__);
                };
                G__39197.cljs$lang$maxFixedArity = 0;
                G__39197.cljs$lang$applyTo = function(arglist__39199) {
                  var args__28340__auto__ = cljs.core.seq(arglist__39199);
                  return G__39197__delegate(args__28340__auto__);
                };
                G__39197.cljs$core$IFn$_invoke$arity$variadic = G__39197__delegate;
                return G__39197;
              }();
            }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39187_39189, _STAR_current_length_STAR_39188_39190, vec__39178, seq__39179, first__39180, seq__39179__$1, ns_sym, first__39180__$1, seq__39179__$2, ns_name, stuff, vec__39181, doc_str, stuff__$1, vec__39184, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_39200__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_39200__$1));
          var temp__4657__auto___39201 = cljs.core.next.call(null, references_39200__$1);
          if (temp__4657__auto___39201) {
            var references_39202__$2 = temp__4657__auto___39201;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__39203 = references_39202__$2;
            references_39200__$1 = G__39203;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39188_39190;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39187_39189;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__28338__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
  return function(format_in__28338__auto__, cf__28339__auto__) {
    return function() {
      var G__39204__delegate = function(args__28340__auto__) {
        var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
        return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
      };
      var G__39204 = function(var_args) {
        var args__28340__auto__ = null;
        if (arguments.length > 0) {
          var G__39205__i = 0, G__39205__a = new Array(arguments.length - 0);
          while (G__39205__i < G__39205__a.length) {
            G__39205__a[G__39205__i] = arguments[G__39205__i + 0];
            ++G__39205__i;
          }
          args__28340__auto__ = new cljs.core.IndexedSeq(G__39205__a, 0);
        }
        return G__39204__delegate.call(this, args__28340__auto__);
      };
      G__39204.cljs$lang$maxFixedArity = 0;
      G__39204.cljs$lang$applyTo = function(arglist__39206) {
        var args__28340__auto__ = cljs.core.seq(arglist__39206);
        return G__39204__delegate(args__28340__auto__);
      };
      G__39204.cljs$core$IFn$_invoke$arity$variadic = G__39204__delegate;
      return G__39204;
    }();
  }(format_in__28338__auto__, cf__28339__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__28338__auto__ = " ~_";
        var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
        return function(format_in__28338__auto__, cf__28339__auto__) {
          return function() {
            var G__39207__delegate = function(args__28340__auto__) {
              var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
              return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
            };
            var G__39207 = function(var_args) {
              var args__28340__auto__ = null;
              if (arguments.length > 0) {
                var G__39208__i = 0, G__39208__a = new Array(arguments.length - 0);
                while (G__39208__i < G__39208__a.length) {
                  G__39208__a[G__39208__i] = arguments[G__39208__i + 0];
                  ++G__39208__i;
                }
                args__28340__auto__ = new cljs.core.IndexedSeq(G__39208__a, 0);
              }
              return G__39207__delegate.call(this, args__28340__auto__);
            };
            G__39207.cljs$lang$maxFixedArity = 0;
            G__39207.cljs$lang$applyTo = function(arglist__39209) {
              var args__28340__auto__ = cljs.core.seq(arglist__39209);
              return G__39207__delegate(args__28340__auto__);
            };
            G__39207.cljs$core$IFn$_invoke$arity$variadic = G__39207__delegate;
            return G__39207;
          }();
        }(format_in__28338__auto__, cf__28339__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__28338__auto__ = " ~@_";
        var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
        return function(format_in__28338__auto__, cf__28339__auto__) {
          return function() {
            var G__39210__delegate = function(args__28340__auto__) {
              var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
              return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
            };
            var G__39210 = function(var_args) {
              var args__28340__auto__ = null;
              if (arguments.length > 0) {
                var G__39211__i = 0, G__39211__a = new Array(arguments.length - 0);
                while (G__39211__i < G__39211__a.length) {
                  G__39211__a[G__39211__i] = arguments[G__39211__i + 0];
                  ++G__39211__i;
                }
                args__28340__auto__ = new cljs.core.IndexedSeq(G__39211__a, 0);
              }
              return G__39210__delegate.call(this, args__28340__auto__);
            };
            G__39210.cljs$lang$maxFixedArity = 0;
            G__39210.cljs$lang$applyTo = function(arglist__39212) {
              var args__28340__auto__ = cljs.core.seq(arglist__39212);
              return G__39210__delegate(args__28340__auto__);
            };
            G__39210.cljs$core$IFn$_invoke$arity$variadic = G__39210__delegate;
            return G__39210;
          }();
        }(format_in__28338__auto__, cf__28339__auto__);
      })().call(null);
    }
    return function() {
      var format_in__28338__auto__ = "~{~w~^ ~_~}";
      var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
      return function(format_in__28338__auto__, cf__28339__auto__) {
        return function() {
          var G__39213__delegate = function(args__28340__auto__) {
            var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
            return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
          };
          var G__39213 = function(var_args) {
            var args__28340__auto__ = null;
            if (arguments.length > 0) {
              var G__39214__i = 0, G__39214__a = new Array(arguments.length - 0);
              while (G__39214__i < G__39214__a.length) {
                G__39214__a[G__39214__i] = arguments[G__39214__i + 0];
                ++G__39214__i;
              }
              args__28340__auto__ = new cljs.core.IndexedSeq(G__39214__a, 0);
            }
            return G__39213__delegate.call(this, args__28340__auto__);
          };
          G__39213.cljs$lang$maxFixedArity = 0;
          G__39213.cljs$lang$applyTo = function(arglist__39215) {
            var args__28340__auto__ = cljs.core.seq(arglist__39215);
            return G__39213__delegate(args__28340__auto__);
          };
          G__39213.cljs$core$IFn$_invoke$arity$variadic = G__39213__delegate;
          return G__39213;
        }();
      }(format_in__28338__auto__, cf__28339__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__28338__auto__ = " ~_~{~w~^ ~_~}";
      var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
      return function(format_in__28338__auto__, cf__28339__auto__) {
        return function() {
          var G__39216__delegate = function(args__28340__auto__) {
            var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
            return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
          };
          var G__39216 = function(var_args) {
            var args__28340__auto__ = null;
            if (arguments.length > 0) {
              var G__39217__i = 0, G__39217__a = new Array(arguments.length - 0);
              while (G__39217__i < G__39217__a.length) {
                G__39217__a[G__39217__i] = arguments[G__39217__i + 0];
                ++G__39217__i;
              }
              args__28340__auto__ = new cljs.core.IndexedSeq(G__39217__a, 0);
            }
            return G__39216__delegate.call(this, args__28340__auto__);
          };
          G__39216.cljs$lang$maxFixedArity = 0;
          G__39216.cljs$lang$applyTo = function(arglist__39218) {
            var args__28340__auto__ = cljs.core.seq(arglist__39218);
            return G__39216__delegate(args__28340__auto__);
          };
          G__39216.cljs$core$IFn$_invoke$arity$variadic = G__39216__delegate;
          return G__39216;
        }();
      }(format_in__28338__auto__, cf__28339__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__39230 = alis;
    var seq__39231 = cljs.core.seq.call(null, vec__39230);
    var first__39232 = cljs.core.first.call(null, seq__39231);
    var seq__39231__$1 = cljs.core.next.call(null, seq__39231);
    var defn_sym = first__39232;
    var first__39232__$1 = cljs.core.first.call(null, seq__39231__$1);
    var seq__39231__$2 = cljs.core.next.call(null, seq__39231__$1);
    var defn_name = first__39232__$1;
    var stuff = seq__39231__$2;
    var vec__39233 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__39233, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__39233, 1, null);
    var vec__39236 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__39236, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__39236, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_39239_39241 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_39240_39242 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__28338__auto__ = "~w ~1I~@_~w";
          var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
          return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39239_39241, _STAR_current_length_STAR_39240_39242, vec__39230, seq__39231, first__39232, seq__39231__$1, defn_sym, first__39232__$1, seq__39231__$2, defn_name, stuff, vec__39233, doc_str, stuff__$1, vec__39236, attr_map, stuff__$2) {
            return function() {
              var G__39243__delegate = function(args__28340__auto__) {
                var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
              };
              var G__39243 = function(var_args) {
                var args__28340__auto__ = null;
                if (arguments.length > 0) {
                  var G__39244__i = 0, G__39244__a = new Array(arguments.length - 0);
                  while (G__39244__i < G__39244__a.length) {
                    G__39244__a[G__39244__i] = arguments[G__39244__i + 0];
                    ++G__39244__i;
                  }
                  args__28340__auto__ = new cljs.core.IndexedSeq(G__39244__a, 0);
                }
                return G__39243__delegate.call(this, args__28340__auto__);
              };
              G__39243.cljs$lang$maxFixedArity = 0;
              G__39243.cljs$lang$applyTo = function(arglist__39245) {
                var args__28340__auto__ = cljs.core.seq(arglist__39245);
                return G__39243__delegate(args__28340__auto__);
              };
              G__39243.cljs$core$IFn$_invoke$arity$variadic = G__39243__delegate;
              return G__39243;
            }();
          }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39239_39241, _STAR_current_length_STAR_39240_39242, vec__39230, seq__39231, first__39232, seq__39231__$1, defn_sym, first__39232__$1, seq__39231__$2, defn_name, stuff, vec__39233, doc_str, stuff__$1, vec__39236, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__28338__auto__ = " ~_~w";
            var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
            return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39239_39241, _STAR_current_length_STAR_39240_39242, vec__39230, seq__39231, first__39232, seq__39231__$1, defn_sym, first__39232__$1, seq__39231__$2, defn_name, stuff, vec__39233, doc_str, stuff__$1, vec__39236, attr_map, stuff__$2) {
              return function() {
                var G__39246__delegate = function(args__28340__auto__) {
                  var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                };
                var G__39246 = function(var_args) {
                  var args__28340__auto__ = null;
                  if (arguments.length > 0) {
                    var G__39247__i = 0, G__39247__a = new Array(arguments.length - 0);
                    while (G__39247__i < G__39247__a.length) {
                      G__39247__a[G__39247__i] = arguments[G__39247__i + 0];
                      ++G__39247__i;
                    }
                    args__28340__auto__ = new cljs.core.IndexedSeq(G__39247__a, 0);
                  }
                  return G__39246__delegate.call(this, args__28340__auto__);
                };
                G__39246.cljs$lang$maxFixedArity = 0;
                G__39246.cljs$lang$applyTo = function(arglist__39248) {
                  var args__28340__auto__ = cljs.core.seq(arglist__39248);
                  return G__39246__delegate(args__28340__auto__);
                };
                G__39246.cljs$core$IFn$_invoke$arity$variadic = G__39246__delegate;
                return G__39246;
              }();
            }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39239_39241, _STAR_current_length_STAR_39240_39242, vec__39230, seq__39231, first__39232, seq__39231__$1, defn_sym, first__39232__$1, seq__39231__$2, defn_name, stuff, vec__39233, doc_str, stuff__$1, vec__39236, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__28338__auto__ = " ~_~w";
            var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
            return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39239_39241, _STAR_current_length_STAR_39240_39242, vec__39230, seq__39231, first__39232, seq__39231__$1, defn_sym, first__39232__$1, seq__39231__$2, defn_name, stuff, vec__39233, doc_str, stuff__$1, vec__39236, attr_map, stuff__$2) {
              return function() {
                var G__39249__delegate = function(args__28340__auto__) {
                  var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
                };
                var G__39249 = function(var_args) {
                  var args__28340__auto__ = null;
                  if (arguments.length > 0) {
                    var G__39250__i = 0, G__39250__a = new Array(arguments.length - 0);
                    while (G__39250__i < G__39250__a.length) {
                      G__39250__a[G__39250__i] = arguments[G__39250__i + 0];
                      ++G__39250__i;
                    }
                    args__28340__auto__ = new cljs.core.IndexedSeq(G__39250__a, 0);
                  }
                  return G__39249__delegate.call(this, args__28340__auto__);
                };
                G__39249.cljs$lang$maxFixedArity = 0;
                G__39249.cljs$lang$applyTo = function(arglist__39251) {
                  var args__28340__auto__ = cljs.core.seq(arglist__39251);
                  return G__39249__delegate(args__28340__auto__);
                };
                G__39249.cljs$core$IFn$_invoke$arity$variadic = G__39249__delegate;
                return G__39249;
              }();
            }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39239_39241, _STAR_current_length_STAR_39240_39242, vec__39230, seq__39231, first__39232, seq__39231__$1, defn_sym, first__39232__$1, seq__39231__$2, defn_name, stuff, vec__39233, doc_str, stuff__$1, vec__39236, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__26240__auto__ = doc_str;
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__26240__auto__ = doc_str;
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39240_39242;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39239_39241;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39257_39262 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39258_39263 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count39259_39264 = 0;
      var binding_39265 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count39259_39264 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_39265)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_39260_39266 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_39261_39267 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_39265));
                if (cljs.core.next.call(null, binding_39265)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_39265));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39261_39267;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39260_39266;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_39265))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__39268 = length_count39259_39264 + 1;
              var G__39269 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_39265));
              length_count39259_39264 = G__39268;
              binding_39265 = G__39269;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39258_39263;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39257_39262;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39272_39274 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39273_39275 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__28338__auto__ = "~w ~1I~@_";
          var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
          return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39272_39274, _STAR_current_length_STAR_39273_39275, base_sym) {
            return function() {
              var G__39276__delegate = function(args__28340__auto__) {
                var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
              };
              var G__39276 = function(var_args) {
                var args__28340__auto__ = null;
                if (arguments.length > 0) {
                  var G__39277__i = 0, G__39277__a = new Array(arguments.length - 0);
                  while (G__39277__i < G__39277__a.length) {
                    G__39277__a[G__39277__i] = arguments[G__39277__i + 0];
                    ++G__39277__i;
                  }
                  args__28340__auto__ = new cljs.core.IndexedSeq(G__39277__a, 0);
                }
                return G__39276__delegate.call(this, args__28340__auto__);
              };
              G__39276.cljs$lang$maxFixedArity = 0;
              G__39276.cljs$lang$applyTo = function(arglist__39278) {
                var args__28340__auto__ = cljs.core.seq(arglist__39278);
                return G__39276__delegate(args__28340__auto__);
              };
              G__39276.cljs$core$IFn$_invoke$arity$variadic = G__39276__delegate;
              return G__39276;
            }();
          }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39272_39274, _STAR_current_length_STAR_39273_39275, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__28338__auto__ = " ~_~{~w~^ ~_~}";
          var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
          return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39272_39274, _STAR_current_length_STAR_39273_39275, base_sym) {
            return function() {
              var G__39279__delegate = function(args__28340__auto__) {
                var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
              };
              var G__39279 = function(var_args) {
                var args__28340__auto__ = null;
                if (arguments.length > 0) {
                  var G__39280__i = 0, G__39280__a = new Array(arguments.length - 0);
                  while (G__39280__i < G__39280__a.length) {
                    G__39280__a[G__39280__i] = arguments[G__39280__i + 0];
                    ++G__39280__i;
                  }
                  args__28340__auto__ = new cljs.core.IndexedSeq(G__39280__a, 0);
                }
                return G__39279__delegate.call(this, args__28340__auto__);
              };
              G__39279.cljs$lang$maxFixedArity = 0;
              G__39279.cljs$lang$applyTo = function(arglist__39281) {
                var args__28340__auto__ = cljs.core.seq(arglist__39281);
                return G__39279__delegate(args__28340__auto__);
              };
              G__39279.cljs$core$IFn$_invoke$arity$variadic = G__39279__delegate;
              return G__39279;
            }();
          }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39272_39274, _STAR_current_length_STAR_39273_39275, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39273_39275;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39272_39274;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__28338__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
  return function(format_in__28338__auto__, cf__28339__auto__) {
    return function() {
      var G__39282__delegate = function(args__28340__auto__) {
        var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
        return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
      };
      var G__39282 = function(var_args) {
        var args__28340__auto__ = null;
        if (arguments.length > 0) {
          var G__39283__i = 0, G__39283__a = new Array(arguments.length - 0);
          while (G__39283__i < G__39283__a.length) {
            G__39283__a[G__39283__i] = arguments[G__39283__i + 0];
            ++G__39283__i;
          }
          args__28340__auto__ = new cljs.core.IndexedSeq(G__39283__a, 0);
        }
        return G__39282__delegate.call(this, args__28340__auto__);
      };
      G__39282.cljs$lang$maxFixedArity = 0;
      G__39282.cljs$lang$applyTo = function(arglist__39284) {
        var args__28340__auto__ = cljs.core.seq(arglist__39284);
        return G__39282__delegate(args__28340__auto__);
      };
      G__39282.cljs$core$IFn$_invoke$arity$variadic = G__39282__delegate;
      return G__39282;
    }();
  }(format_in__28338__auto__, cf__28339__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39290_39295 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39291_39296 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count39292_39297 = 0;
        var alis_39298__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count39292_39297 < cljs.core._STAR_print_length_STAR_) {
            if (alis_39298__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_39293_39299 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_39294_39300 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_39298__$1));
                  if (cljs.core.next.call(null, alis_39298__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_39298__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39294_39300;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39293_39299;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_39298__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__39301 = length_count39292_39297 + 1;
                var G__39302 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_39298__$1));
                length_count39292_39297 = G__39301;
                alis_39298__$1 = G__39302;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39291_39296;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39290_39295;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_39308_39313 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_39309_39314 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__28338__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
          return function(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39308_39313, _STAR_current_length_STAR_39309_39314) {
            return function() {
              var G__39315__delegate = function(args__28340__auto__) {
                var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
                return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
              };
              var G__39315 = function(var_args) {
                var args__28340__auto__ = null;
                if (arguments.length > 0) {
                  var G__39316__i = 0, G__39316__a = new Array(arguments.length - 0);
                  while (G__39316__i < G__39316__a.length) {
                    G__39316__a[G__39316__i] = arguments[G__39316__i + 0];
                    ++G__39316__i;
                  }
                  args__28340__auto__ = new cljs.core.IndexedSeq(G__39316__a, 0);
                }
                return G__39315__delegate.call(this, args__28340__auto__);
              };
              G__39315.cljs$lang$maxFixedArity = 0;
              G__39315.cljs$lang$applyTo = function(arglist__39317) {
                var args__28340__auto__ = cljs.core.seq(arglist__39317);
                return G__39315__delegate(args__28340__auto__);
              };
              G__39315.cljs$core$IFn$_invoke$arity$variadic = G__39315__delegate;
              return G__39315;
            }();
          }(format_in__28338__auto__, cf__28339__auto__, _STAR_current_level_STAR_39308_39313, _STAR_current_length_STAR_39309_39314);
        }(), alis);
        var length_count39310_39318 = 0;
        var alis_39319__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count39310_39318 < cljs.core._STAR_print_length_STAR_) {
            if (alis_39319__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_39311_39320 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_39312_39321 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_39319__$1));
                  if (cljs.core.next.call(null, alis_39319__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_39319__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39312_39321;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39311_39320;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_39319__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__39322 = length_count39310_39318 + 1;
                var G__39323 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_39319__$1));
                length_count39310_39318 = G__39322;
                alis_39319__$1 = G__39323;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39309_39314;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39308_39313;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_39327 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_39327, args, nlis) {
      return function(p1__39324_SHARP_, p2__39325_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__39324_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__39325_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_39327, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__28338__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__28339__auto__ = typeof format_in__28338__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28338__auto__) : format_in__28338__auto__;
        return function(format_in__28338__auto__, cf__28339__auto__, _STAR_symbol_map_STAR_39327, args, nlis) {
          return function() {
            var G__39328__delegate = function(args__28340__auto__) {
              var navigator__28341__auto__ = cljs.pprint.init_navigator.call(null, args__28340__auto__);
              return cljs.pprint.execute_format.call(null, cf__28339__auto__, navigator__28341__auto__);
            };
            var G__39328 = function(var_args) {
              var args__28340__auto__ = null;
              if (arguments.length > 0) {
                var G__39329__i = 0, G__39329__a = new Array(arguments.length - 0);
                while (G__39329__i < G__39329__a.length) {
                  G__39329__a[G__39329__i] = arguments[G__39329__i + 0];
                  ++G__39329__i;
                }
                args__28340__auto__ = new cljs.core.IndexedSeq(G__39329__a, 0);
              }
              return G__39328__delegate.call(this, args__28340__auto__);
            };
            G__39328.cljs$lang$maxFixedArity = 0;
            G__39328.cljs$lang$applyTo = function(arglist__39330) {
              var args__28340__auto__ = cljs.core.seq(arglist__39330);
              return G__39328__delegate(args__28340__auto__);
            };
            G__39328.cljs$core$IFn$_invoke$arity$variadic = G__39328__delegate;
            return G__39328;
          }();
        }(format_in__28338__auto__, cf__28339__auto__, _STAR_symbol_map_STAR_39327, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_39327;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_39334_39337 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_39335_39338 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count39336_39339 = 0;
      var alis_39340__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count39336_39339 < cljs.core._STAR_print_length_STAR_) {
          if (alis_39340__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_39340__$1));
            if (cljs.core.next.call(null, alis_39340__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__39341 = length_count39336_39339 + 1;
              var G__39342 = cljs.core.next.call(null, alis_39340__$1);
              length_count39336_39339 = G__39341;
              alis_39340__$1 = G__39342;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_39335_39338;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_39334_39337;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__27020__auto__ = function cljs$pprint$two_forms_$_iter__39347(s__39348) {
      return new cljs.core.LazySeq(null, function() {
        var s__39348__$1 = s__39348;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__39348__$1);
          if (temp__4657__auto__) {
            var s__39348__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__39348__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39348__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__39350 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__39349 = 0;
                while (true) {
                  if (i__39349 < size__27019__auto__) {
                    var x = cljs.core._nth.call(null, c__27018__auto__, i__39349);
                    cljs.core.chunk_append.call(null, b__39350, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__39351 = i__39349 + 1;
                    i__39349 = G__39351;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39350), cljs$pprint$two_forms_$_iter__39347.call(null, cljs.core.chunk_rest.call(null, s__39348__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39350), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__39348__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__39347.call(null, cljs.core.rest.call(null, s__39348__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__39352_SHARP_) {
      var vec__39356 = p1__39352_SHARP_;
      var s = cljs.core.nth.call(null, vec__39356, 0, null);
      var f = cljs.core.nth.call(null, vec__39356, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__26240__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__39352_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4655__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4655__auto__)) {
      var special_form = temp__4655__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4655__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var arg_num = temp__4655__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__26571__auto__ = 0;
    var y__26572__auto__ = width - cljs.core.count.call(null, s);
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var args39362 = [];
  var len__27315__auto___39386 = arguments.length;
  var i__27316__auto___39387 = 0;
  while (true) {
    if (i__27316__auto___39387 < len__27315__auto___39386) {
      args39362.push(arguments[i__27316__auto___39387]);
      var G__39388 = i__27316__auto___39387 + 1;
      i__27316__auto___39387 = G__39388;
      continue;
    } else {
    }
    break;
  }
  var G__39364 = args39362.length;
  switch(G__39364) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39362.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_39365 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_39365) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_39365) {
            return function(p1__39359_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__39359_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_39365), rows));
        };
      }(_STAR_print_newline_STAR_39365), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_39365) {
        return function(p1__39360_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__39360_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_39365), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_39365) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__27020__auto__ = function(widths, spacers, _STAR_print_newline_STAR_39365) {
              return function cljs$pprint$iter__39366(s__39367) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_39365) {
                  return function() {
                    var s__39367__$1 = s__39367;
                    while (true) {
                      var temp__4657__auto__ = cljs.core.seq.call(null, s__39367__$1);
                      if (temp__4657__auto__) {
                        var s__39367__$2 = temp__4657__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__39367__$2)) {
                          var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39367__$2);
                          var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
                          var b__39369 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
                          if (function() {
                            var i__39368 = 0;
                            while (true) {
                              if (i__39368 < size__27019__auto__) {
                                var vec__39376 = cljs.core._nth.call(null, c__27018__auto__, i__39368);
                                var col = cljs.core.nth.call(null, vec__39376, 0, null);
                                var width = cljs.core.nth.call(null, vec__39376, 1, null);
                                cljs.core.chunk_append.call(null, b__39369, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__39390 = i__39368 + 1;
                                i__39368 = G__39390;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39369), cljs$pprint$iter__39366.call(null, cljs.core.chunk_rest.call(null, s__39367__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39369), null);
                          }
                        } else {
                          var vec__39379 = cljs.core.first.call(null, s__39367__$2);
                          var col = cljs.core.nth.call(null, vec__39379, 0, null);
                          var width = cljs.core.nth.call(null, vec__39379, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__39366.call(null, cljs.core.rest.call(null, s__39367__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_39365), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_39365);
            return iter__27020__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__27020__auto__, widths, spacers, _STAR_print_newline_STAR_39365) {
              return function(p1__39361_SHARP_) {
                return cljs.core.get.call(null, row, p1__39361_SHARP_);
              };
            }(iter__27020__auto__, widths, spacers, _STAR_print_newline_STAR_39365), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_39365);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__39382 = cljs.core.seq.call(null, rows);
      var chunk__39383 = null;
      var count__39384 = 0;
      var i__39385 = 0;
      while (true) {
        if (i__39385 < count__39384) {
          var row = cljs.core._nth.call(null, chunk__39383, i__39385);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__39391 = seq__39382;
          var G__39392 = chunk__39383;
          var G__39393 = count__39384;
          var G__39394 = i__39385 + 1;
          seq__39382 = G__39391;
          chunk__39383 = G__39392;
          count__39384 = G__39393;
          i__39385 = G__39394;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__39382);
          if (temp__4657__auto__) {
            var seq__39382__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__39382__$1)) {
              var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__39382__$1);
              var G__39395 = cljs.core.chunk_rest.call(null, seq__39382__$1);
              var G__39396 = c__27051__auto__;
              var G__39397 = cljs.core.count.call(null, c__27051__auto__);
              var G__39398 = 0;
              seq__39382 = G__39395;
              chunk__39383 = G__39396;
              count__39384 = G__39397;
              i__39385 = G__39398;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__39382__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__39399 = cljs.core.next.call(null, seq__39382__$1);
              var G__39400 = null;
              var G__39401 = 0;
              var G__39402 = 0;
              seq__39382 = G__39399;
              chunk__39383 = G__39400;
              count__39384 = G__39401;
              i__39385 = G__39402;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_39365;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var args39405 = [];
  var len__27315__auto___39409 = arguments.length;
  var i__27316__auto___39410 = 0;
  while (true) {
    if (i__27316__auto___39410 < len__27315__auto___39409) {
      args39405.push(arguments[i__27316__auto___39410]);
      var G__39411 = i__27316__auto___39410 + 1;
      i__27316__auto___39410 = G__39411;
      continue;
    } else {
    }
    break;
  }
  var G__39407 = args39405.length;
  switch(G__39407) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39405.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__39408 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__39408, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__39408;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__26240__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___39416 = arguments.length;
  var i__27316__auto___39417 = 0;
  while (true) {
    if (i__27316__auto___39417 < len__27315__auto___39416) {
      args__27322__auto__.push(arguments[i__27316__auto___39417]);
      var G__39418 = i__27316__auto___39417 + 1;
      i__27316__auto___39417 = G__39418;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq39413) {
  var G__39414 = cljs.core.first.call(null, seq39413);
  var seq39413__$1 = cljs.core.next.call(null, seq39413);
  var G__39415 = cljs.core.first.call(null, seq39413__$1);
  var seq39413__$2 = cljs.core.next.call(null, seq39413__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__39414, G__39415, seq39413__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__39422 = m;
  var map__39422__$1 = (!(map__39422 == null) ? map__39422.cljs$lang$protocol_mask$partition0$ & 64 || map__39422.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39422) : map__39422;
  var file = cljs.core.get.call(null, map__39422__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__39422__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__39422__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__39422, map__39422__$1, file, line, column) {
    return function(p1__39419_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__39419_SHARP_));
    };
  }(map__39422, map__39422__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___39424 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___39424)) {
    var message_39425 = temp__4657__auto___39424;
    cljs.core.println.call(null, message_39425);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___39426 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___39426)) {
    var message_39427 = temp__4657__auto___39426;
    cljs.core.println.call(null, message_39427);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var source_map = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var columns = temp__4655__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4655__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4655__auto____$2)) {
          var mapping = temp__4655__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4655__auto__ = function() {
    var and__26228__auto__ = typeof exception.stack === "string";
    if (and__26228__auto__) {
      var G__39437 = exception.stack;
      var G__39437__$1 = G__39437 == null ? null : clojure.string.split_lines.call(null, G__39437);
      var G__39437__$2 = G__39437__$1 == null ? null : cljs.core.get.call(null, G__39437__$1, depth);
      if (G__39437__$2 == null) {
        return null;
      } else {
        return clojure.string.trim.call(null, G__39437__$2);
      }
    } else {
      return and__26228__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var stack_element = temp__4655__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__39438 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__39438, 0, null);
    var column = cljs.core.nth.call(null, vec__39438, 1, null);
    var vec__39441 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__39441, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__39441, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__39441, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__39445 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__39445) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4657__auto__) {
      var xs__5205__auto__ = temp__4657__auto__;
      var f = cljs.core.first.call(null, xs__5205__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__5205__auto__, temp__4657__auto__), null);
          return function(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__);
        }());
      } else {
        var G__39451 = function() {
          var G__39450 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__39450);
          } else {
            return G__39450;
          }
        }();
        fns = G__39451;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__39453 = fns;
  if (G__39453 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__39453, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e39456) {
      var e = e39456;
      var G__39457 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__39457) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var t = temp__4655__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__39462 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__39462, 0, null);
  var types = vec__39462;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str("(not-any? nil? types)")].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str("(\x3e 2 (count types))")].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__39474) {
    var vec__39475 = p__39474;
    var ns = cljs.core.nth.call(null, vec__39475, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__39475, 1, null);
    return function(vec__39475, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__39478 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__39478) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1) {
                    return function() {
                      var seq__39479 = cljs.core.seq.call(null, vars__$1);
                      var chunk__39480 = null;
                      var count__39481 = 0;
                      var i__39482 = 0;
                      while (true) {
                        if (i__39482 < count__39481) {
                          var v = cljs.core._nth.call(null, chunk__39480, i__39482);
                          var temp__4657__auto___39484 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4657__auto___39484)) {
                            var t_39485 = temp__4657__auto___39484;
                            each_fixture_fn.call(null, function(seq__39479, chunk__39480, count__39481, i__39482, t_39485, temp__4657__auto___39484, v, each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_39485)));
                              };
                            }(seq__39479, chunk__39480, count__39481, i__39482, t_39485, temp__4657__auto___39484, v, each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1));
                          } else {
                          }
                          var G__39486 = seq__39479;
                          var G__39487 = chunk__39480;
                          var G__39488 = count__39481;
                          var G__39489 = i__39482 + 1;
                          seq__39479 = G__39486;
                          chunk__39480 = G__39487;
                          count__39481 = G__39488;
                          i__39482 = G__39489;
                          continue;
                        } else {
                          var temp__4657__auto__ = cljs.core.seq.call(null, seq__39479);
                          if (temp__4657__auto__) {
                            var seq__39479__$1 = temp__4657__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__39479__$1)) {
                              var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__39479__$1);
                              var G__39490 = cljs.core.chunk_rest.call(null, seq__39479__$1);
                              var G__39491 = c__27051__auto__;
                              var G__39492 = cljs.core.count.call(null, c__27051__auto__);
                              var G__39493 = 0;
                              seq__39479 = G__39490;
                              chunk__39480 = G__39491;
                              count__39481 = G__39492;
                              i__39482 = G__39493;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__39479__$1);
                              var temp__4657__auto___39494__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4657__auto___39494__$1)) {
                                var t_39495 = temp__4657__auto___39494__$1;
                                each_fixture_fn.call(null, function(seq__39479, chunk__39480, count__39481, i__39482, t_39495, temp__4657__auto___39494__$1, v, seq__39479__$1, temp__4657__auto__, each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_39495)));
                                  };
                                }(seq__39479, chunk__39480, count__39481, i__39482, t_39495, temp__4657__auto___39494__$1, v, seq__39479__$1, temp__4657__auto__, each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1));
                              } else {
                              }
                              var G__39496 = cljs.core.next.call(null, seq__39479__$1);
                              var G__39497 = null;
                              var G__39498 = 0;
                              var G__39499 = 0;
                              seq__39479 = G__39496;
                              chunk__39480 = G__39497;
                              count__39481 = G__39498;
                              i__39482 = G__39499;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1));
                };
              }(each_fixture_fn, G__39478, env, once_fixtures, each_fixtures, vec__39475, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__39475, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "\x3d", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  if (typeof Symbol != "undefined") {
    types.ITERATOR = Symbol.iterator;
  } else {
    types.ITERATOR = "@@iterator";
  }
  types.TaggedValue = function Transit$TaggedValue(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740991");
  types.MIN_INT = Long.fromString("-9007199254740991");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function Transit$Keyword(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this._name;
  };
  types.Keyword.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Keyword.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this._name == other._name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function Transit$Symbol(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Symbol.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Symbol.prototype.toString = function() {
    return this._name;
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this._name == other._name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function Transit$UUID(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function() {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function() {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.TransitMapIterator = function Transit$MapIterator(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.TransitMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.mapEquals = function(me, you) {
    if (me instanceof types.TransitMap && types.isMap(you)) {
      if (me.size !== you.size) {
        return false;
      }
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (me instanceof types.TransitArrayMap && types.isMap(you)) {
        if (me.size !== you.size) {
          return false;
        }
        var entries = me._entries;
        for (var j = 0;j < entries.length;j += 2) {
          if (!eq.equals(entries[j + 1], you.get(entries[j]))) {
            return false;
          }
        }
        return true;
      } else {
        if (you != null && typeof you === "object") {
          var ks = util.objectKeys(you), kslen = ks.length;
          if (me.size === kslen) {
            for (var i = 0;i < kslen;i++) {
              var k = ks[i];
              if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
                return false;
              }
            }
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.print = function(x) {
    if (x == null) {
      return "null";
    }
    if (goog.isArray(x)) {
      return "[" + x.toString() + "]";
    } else {
      if (goog.isString(x)) {
        return '"' + x + '"';
      } else {
        return x.toString();
      }
    }
  };
  types.printMap = function(map) {
    var idx = 0, str = "TransitMap {";
    map.forEach(function(v, k) {
      str += types.print(k) + " \x3d\x3e " + types.print(v);
      if (idx < map.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.printSet = function(set) {
    var idx = 0, str = "TransitSet {";
    set.forEach(function(v) {
      str += types.print(v);
      if (idx < set.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.TransitArrayMap = function Transit$ArrayMap(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitArrayMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      var ret = this.backingMap["delete"](k);
      this.size = this.backingMap.size;
      return ret;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          var ret = this._entries[i + 1];
          this._entries.splice(i, 2);
          this.size--;
          return ret;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitArrayMap.prototype["clone"] = types.TransitArrayMap.prototype.clone;
  types.TransitArrayMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function Transit$Map(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        var ret = bucket[i + 1];
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        return ret;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitMap.prototype["clone"] = types.TransitMap.prototype.clone;
  types.TransitMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function Transit$Set(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return types.printSet(this);
  };
  types.TransitSet.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    var ret = this.map["delete"](value);
    this.size = this.map.size;
    return ret;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.clone = function() {
    var clone = types.set();
    this.forEach(function(k) {
      clone.add(k);
    });
    return clone;
  };
  types.TransitSet.prototype["clone"] = types.TransitSet.prototype.clone;
  types.TransitSet.prototype[types.ITERATOR] = function() {
    return this.values();
  };
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.TaggedValue && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function Transit$WriteCache() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function Transit$ReadCache() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function Transit$Tag(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function Transit$Decoder(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init(node);
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function Transit$JSONUnmarshaller(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function Transit$Reader(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function Transit$NilHandler() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function Transit$StringHandler() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function Transit$NumberHandler() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function Transit$IntegerHandler() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function Transit$BooleanHandler() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function Transit$ArrayHandler() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function Transit$MapHandler() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function Transit$VerboseDateHandler() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function Transit$DateHandler() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function Transit$UUIDHandler() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function Transit$KeywordHandler() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function Transit$SymbolHandler() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function Transit$TaggedHandler() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function Transit$TransitSetHandler() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function Transit$ArrayMapHandler() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function Transit$MapHandler() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function Transit$BufferHandler() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function Transit$Uint8ArrayHandler() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function Transit$Handlers() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function Transit$JSONMarshaller(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        if (k !== undefined) {
          self.handlers.set(k, v);
        } else {
          throw new Error("Cannot create handler for JavaScript undefined");
        }
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString();
    ret = ret.substr("function ".length);
    ret = ret.substr(0, ret.indexOf("("));
    isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    var arr = null, rep = null, tag = null, ks = null, i = 0;
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          ks = util.objectKeys(obj);
          ret = {};
          for (;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            arr = em.unpack(obj);
            ret = ["^ "];
            if (arr) {
              for (;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          ret = ["^ "];
          ks = util.objectKeys(obj);
          for (;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function Transit$Writer(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var util = com.cognitect.transit.util, reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.MapLike;
  transit.SetLike;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashArrayLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.objectToMap = function(obj) {
    var ret = transit.map();
    for (var p in obj) {
      if (obj.hasOwnProperty(p)) {
        ret.set(p, obj[p]);
      }
    }
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = util.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.objectToMap", transit.objectToMap);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", util.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, objectToMap:transit.objectToMap, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:util.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = true;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.hash.call(null, this$__$1.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__39506_39510 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__39507_39511 = null;
  var count__39508_39512 = 0;
  var i__39509_39513 = 0;
  while (true) {
    if (i__39509_39513 < count__39508_39512) {
      var k_39514 = cljs.core._nth.call(null, chunk__39507_39511, i__39509_39513);
      var v_39515 = b[k_39514];
      a[k_39514] = v_39515;
      var G__39516 = seq__39506_39510;
      var G__39517 = chunk__39507_39511;
      var G__39518 = count__39508_39512;
      var G__39519 = i__39509_39513 + 1;
      seq__39506_39510 = G__39516;
      chunk__39507_39511 = G__39517;
      count__39508_39512 = G__39518;
      i__39509_39513 = G__39519;
      continue;
    } else {
      var temp__4657__auto___39520 = cljs.core.seq.call(null, seq__39506_39510);
      if (temp__4657__auto___39520) {
        var seq__39506_39521__$1 = temp__4657__auto___39520;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39506_39521__$1)) {
          var c__27051__auto___39522 = cljs.core.chunk_first.call(null, seq__39506_39521__$1);
          var G__39523 = cljs.core.chunk_rest.call(null, seq__39506_39521__$1);
          var G__39524 = c__27051__auto___39522;
          var G__39525 = cljs.core.count.call(null, c__27051__auto___39522);
          var G__39526 = 0;
          seq__39506_39510 = G__39523;
          chunk__39507_39511 = G__39524;
          count__39508_39512 = G__39525;
          i__39509_39513 = G__39526;
          continue;
        } else {
          var k_39527 = cljs.core.first.call(null, seq__39506_39521__$1);
          var v_39528 = b[k_39527];
          a[k_39527] = v_39528;
          var G__39529 = cljs.core.next.call(null, seq__39506_39521__$1);
          var G__39530 = null;
          var G__39531 = 0;
          var G__39532 = 0;
          seq__39506_39510 = G__39529;
          chunk__39507_39511 = G__39530;
          count__39508_39512 = G__39531;
          i__39509_39513 = G__39532;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var args39533 = [];
  var len__27315__auto___39536 = arguments.length;
  var i__27316__auto___39537 = 0;
  while (true) {
    if (i__27316__auto___39537 < len__27315__auto___39536) {
      args39533.push(arguments[i__27316__auto___39537]);
      var G__39538 = i__27316__auto___39537 + 1;
      i__27316__auto___39537 = G__39538;
      continue;
    } else {
    }
    break;
  }
  var G__39535 = args39533.length;
  switch(G__39535) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39533.length)].join(""));;
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.call(null, type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
    return cljs.core.symbol.call(null, v);
  }, ":", function(v) {
    return cljs.core.keyword.call(null, v);
  }, "set", function(v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
  }, "list", function(v) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
  }, "cmap", function(v) {
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < v.length) {
        var G__39540 = i + 2;
        var G__39541 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
        i = G__39540;
        ret = G__39541;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, ret);
      }
      break;
    }
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__39542_39546 = cljs.core.seq.call(null, v);
  var chunk__39543_39547 = null;
  var count__39544_39548 = 0;
  var i__39545_39549 = 0;
  while (true) {
    if (i__39545_39549 < count__39544_39548) {
      var x_39550 = cljs.core._nth.call(null, chunk__39543_39547, i__39545_39549);
      ret.push(x_39550);
      var G__39551 = seq__39542_39546;
      var G__39552 = chunk__39543_39547;
      var G__39553 = count__39544_39548;
      var G__39554 = i__39545_39549 + 1;
      seq__39542_39546 = G__39551;
      chunk__39543_39547 = G__39552;
      count__39544_39548 = G__39553;
      i__39545_39549 = G__39554;
      continue;
    } else {
      var temp__4657__auto___39555 = cljs.core.seq.call(null, seq__39542_39546);
      if (temp__4657__auto___39555) {
        var seq__39542_39556__$1 = temp__4657__auto___39555;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39542_39556__$1)) {
          var c__27051__auto___39557 = cljs.core.chunk_first.call(null, seq__39542_39556__$1);
          var G__39558 = cljs.core.chunk_rest.call(null, seq__39542_39556__$1);
          var G__39559 = c__27051__auto___39557;
          var G__39560 = cljs.core.count.call(null, c__27051__auto___39557);
          var G__39561 = 0;
          seq__39542_39546 = G__39558;
          chunk__39543_39547 = G__39559;
          count__39544_39548 = G__39560;
          i__39545_39549 = G__39561;
          continue;
        } else {
          var x_39562 = cljs.core.first.call(null, seq__39542_39556__$1);
          ret.push(x_39562);
          var G__39563 = cljs.core.next.call(null, seq__39542_39556__$1);
          var G__39564 = null;
          var G__39565 = 0;
          var G__39566 = 0;
          seq__39542_39546 = G__39563;
          chunk__39543_39547 = G__39564;
          count__39544_39548 = G__39565;
          i__39545_39549 = G__39566;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__39567_39571 = cljs.core.seq.call(null, v);
  var chunk__39568_39572 = null;
  var count__39569_39573 = 0;
  var i__39570_39574 = 0;
  while (true) {
    if (i__39570_39574 < count__39569_39573) {
      var x_39575 = cljs.core._nth.call(null, chunk__39568_39572, i__39570_39574);
      ret.push(x_39575);
      var G__39576 = seq__39567_39571;
      var G__39577 = chunk__39568_39572;
      var G__39578 = count__39569_39573;
      var G__39579 = i__39570_39574 + 1;
      seq__39567_39571 = G__39576;
      chunk__39568_39572 = G__39577;
      count__39569_39573 = G__39578;
      i__39570_39574 = G__39579;
      continue;
    } else {
      var temp__4657__auto___39580 = cljs.core.seq.call(null, seq__39567_39571);
      if (temp__4657__auto___39580) {
        var seq__39567_39581__$1 = temp__4657__auto___39580;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39567_39581__$1)) {
          var c__27051__auto___39582 = cljs.core.chunk_first.call(null, seq__39567_39581__$1);
          var G__39583 = cljs.core.chunk_rest.call(null, seq__39567_39581__$1);
          var G__39584 = c__27051__auto___39582;
          var G__39585 = cljs.core.count.call(null, c__27051__auto___39582);
          var G__39586 = 0;
          seq__39567_39571 = G__39583;
          chunk__39568_39572 = G__39584;
          count__39569_39573 = G__39585;
          i__39570_39574 = G__39586;
          continue;
        } else {
          var x_39587 = cljs.core.first.call(null, seq__39567_39581__$1);
          ret.push(x_39587);
          var G__39588 = cljs.core.next.call(null, seq__39567_39581__$1);
          var G__39589 = null;
          var G__39590 = 0;
          var G__39591 = 0;
          seq__39567_39571 = G__39588;
          chunk__39568_39572 = G__39589;
          count__39569_39573 = G__39590;
          i__39570_39574 = G__39591;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__39592_39596 = cljs.core.seq.call(null, v);
  var chunk__39593_39597 = null;
  var count__39594_39598 = 0;
  var i__39595_39599 = 0;
  while (true) {
    if (i__39595_39599 < count__39594_39598) {
      var x_39600 = cljs.core._nth.call(null, chunk__39593_39597, i__39595_39599);
      ret.push(x_39600);
      var G__39601 = seq__39592_39596;
      var G__39602 = chunk__39593_39597;
      var G__39603 = count__39594_39598;
      var G__39604 = i__39595_39599 + 1;
      seq__39592_39596 = G__39601;
      chunk__39593_39597 = G__39602;
      count__39594_39598 = G__39603;
      i__39595_39599 = G__39604;
      continue;
    } else {
      var temp__4657__auto___39605 = cljs.core.seq.call(null, seq__39592_39596);
      if (temp__4657__auto___39605) {
        var seq__39592_39606__$1 = temp__4657__auto___39605;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39592_39606__$1)) {
          var c__27051__auto___39607 = cljs.core.chunk_first.call(null, seq__39592_39606__$1);
          var G__39608 = cljs.core.chunk_rest.call(null, seq__39592_39606__$1);
          var G__39609 = c__27051__auto___39607;
          var G__39610 = cljs.core.count.call(null, c__27051__auto___39607);
          var G__39611 = 0;
          seq__39592_39596 = G__39608;
          chunk__39593_39597 = G__39609;
          count__39594_39598 = G__39610;
          i__39595_39599 = G__39611;
          continue;
        } else {
          var x_39612 = cljs.core.first.call(null, seq__39592_39606__$1);
          ret.push(x_39612);
          var G__39613 = cljs.core.next.call(null, seq__39592_39606__$1);
          var G__39614 = null;
          var G__39615 = 0;
          var G__39616 = 0;
          seq__39592_39596 = G__39613;
          chunk__39593_39597 = G__39614;
          count__39594_39598 = G__39615;
          i__39595_39599 = G__39616;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var args39617 = [];
  var len__27315__auto___39632 = arguments.length;
  var i__27316__auto___39633 = 0;
  while (true) {
    if (i__27316__auto___39633 < len__27315__auto___39632) {
      args39617.push(arguments[i__27316__auto___39633]);
      var G__39634 = i__27316__auto___39633 + 1;
      i__27316__auto___39633 = G__39634;
      continue;
    } else {
    }
    break;
  }
  var G__39619 = args39617.length;
  switch(G__39619) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39617.length)].join(""));;
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.call(null, type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
  cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
  symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
  return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__39620 = obj;
          G__39620.push(kfn.call(null, k), vfn.call(null, v));
          return G__39620;
        };
      }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x39621 = cljs.core.clone.call(null, handlers);
    x39621.forEach = function(x39621, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__39622 = cljs.core.seq.call(null, coll);
        var chunk__39623 = null;
        var count__39624 = 0;
        var i__39625 = 0;
        while (true) {
          if (i__39625 < count__39624) {
            var vec__39626 = cljs.core._nth.call(null, chunk__39623, i__39625);
            var k = cljs.core.nth.call(null, vec__39626, 0, null);
            var v = cljs.core.nth.call(null, vec__39626, 1, null);
            f.call(null, v, k);
            var G__39636 = seq__39622;
            var G__39637 = chunk__39623;
            var G__39638 = count__39624;
            var G__39639 = i__39625 + 1;
            seq__39622 = G__39636;
            chunk__39623 = G__39637;
            count__39624 = G__39638;
            i__39625 = G__39639;
            continue;
          } else {
            var temp__4657__auto__ = cljs.core.seq.call(null, seq__39622);
            if (temp__4657__auto__) {
              var seq__39622__$1 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__39622__$1)) {
                var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__39622__$1);
                var G__39640 = cljs.core.chunk_rest.call(null, seq__39622__$1);
                var G__39641 = c__27051__auto__;
                var G__39642 = cljs.core.count.call(null, c__27051__auto__);
                var G__39643 = 0;
                seq__39622 = G__39640;
                chunk__39623 = G__39641;
                count__39624 = G__39642;
                i__39625 = G__39643;
                continue;
              } else {
                var vec__39629 = cljs.core.first.call(null, seq__39622__$1);
                var k = cljs.core.nth.call(null, vec__39629, 0, null);
                var v = cljs.core.nth.call(null, vec__39629, 1, null);
                f.call(null, v, k);
                var G__39644 = cljs.core.next.call(null, seq__39622__$1);
                var G__39645 = null;
                var G__39646 = 0;
                var G__39647 = 0;
                seq__39622 = G__39644;
                chunk__39623 = G__39645;
                count__39624 = G__39646;
                i__39625 = G__39647;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x39621, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x39621;
  }(), "unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var args39648 = [];
  var len__27315__auto___39654 = arguments.length;
  var i__27316__auto___39655 = 0;
  while (true) {
    if (i__27316__auto___39655 < len__27315__auto___39654) {
      args39648.push(arguments[i__27316__auto___39655]);
      var G__39656 = i__27316__auto___39655 + 1;
      i__27316__auto___39655 = G__39656;
      continue;
    } else {
    }
    break;
  }
  var G__39650 = args39648.length;
  switch(G__39650) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39648.length)].join(""));;
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t_cognitect$transit39651 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit39651 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta39652) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta39652 = meta39652;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit39651.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_39653, meta39652__$1) {
      var self__ = this;
      var _39653__$1 = this;
      return new cognitect.transit.t_cognitect$transit39651(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta39652__$1);
    };
    cognitect.transit.t_cognitect$transit39651.prototype.cljs$core$IMeta$_meta$arity$1 = function(_39653) {
      var self__ = this;
      var _39653__$1 = this;
      return self__.meta39652;
    };
    cognitect.transit.t_cognitect$transit39651.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit39651.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit39651.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.str_rep_fn)) {
        return self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit39651.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.verbose_handler_fn)) {
        return self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit39651.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta39652", "meta39652", -781326622, null)], null);
    };
    cognitect.transit.t_cognitect$transit39651.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit39651.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit39651";
    cognitect.transit.t_cognitect$transit39651.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/t_cognitect$transit39651");
    };
    cognitect.transit.__GT_t_cognitect$transit39651 = function cognitect$transit$__GT_t_cognitect$transit39651(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta39652) {
      return new cognitect.transit.t_cognitect$transit39651(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta39652);
    };
  }
  return new cognitect.transit.t_cognitect$transit39651(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  var or__26240__auto__ = com.cognitect.transit.types.isUUID.call(null, x);
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return x instanceof cljs.core.UUID;
  }
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("butler.core");
goog.require("cljs.core");
goog.require("cognitect.transit");
butler.core.webworker_QMARK_ = function butler$core$webworker_QMARK_() {
  return void 0 === self.document;
};
butler.core.not_webworker_QMARK_ = cljs.core.complement.call(null, butler.core.webworker_QMARK_);
butler.core.event_message = "message";
butler.core.deserialize = function butler$core$deserialize(data) {
  var r = cognitect.transit.reader.call(null, new cljs.core.Keyword(null, "json", "json", 1279968570));
  return cognitect.transit.read.call(null, r, data);
};
butler.core.serialize = function butler$core$serialize(data) {
  var w = cognitect.transit.writer.call(null, new cljs.core.Keyword(null, "json", "json", 1279968570));
  return cognitect.transit.write.call(null, w, data);
};
butler.core.map_key = function butler$core$map_key(f, m) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function butler$core$map_key_$_iter__39676(s__39677) {
      return new cljs.core.LazySeq(null, function() {
        var s__39677__$1 = s__39677;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__39677__$1);
          if (temp__4657__auto__) {
            var s__39677__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__39677__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39677__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__39679 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__39678 = 0;
                while (true) {
                  if (i__39678 < size__27019__auto__) {
                    var vec__39686 = cljs.core._nth.call(null, c__27018__auto__, i__39678);
                    var k = cljs.core.nth.call(null, vec__39686, 0, null);
                    var v = cljs.core.nth.call(null, vec__39686, 1, null);
                    cljs.core.chunk_append.call(null, b__39679, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, k), v], null));
                    var G__39692 = i__39678 + 1;
                    i__39678 = G__39692;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39679), butler$core$map_key_$_iter__39676.call(null, cljs.core.chunk_rest.call(null, s__39677__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39679), null);
              }
            } else {
              var vec__39689 = cljs.core.first.call(null, s__39677__$2);
              var k = cljs.core.nth.call(null, vec__39689, 0, null);
              var v = cljs.core.nth.call(null, vec__39689, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, k), v], null), butler$core$map_key_$_iter__39676.call(null, cljs.core.rest.call(null, s__39677__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }());
};
butler.core.message_handler = function butler$core$message_handler(handlers, e) {
  var deserialized = butler.core.deserialize.call(null, e.data["serialized"]);
  var name = cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(deserialized));
  var data = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(deserialized);
  var transferables = butler.core.map_key.call(null, butler.core.deserialize, cljs.core.js__GT_clj.call(null, e.data["transferables"]));
  var copied = cljs.core.reduce.call(null, function(deserialized, name, data, transferables) {
    return function(p1__39693_SHARP_, p2__39694_SHARP_) {
      return cljs.core.assoc_in.call(null, p1__39693_SHARP_, cljs.core.first.call(null, p2__39694_SHARP_), cljs.core.second.call(null, p2__39694_SHARP_));
    };
  }(deserialized, name, data, transferables), data, transferables);
  var temp__4657__auto__ = cljs.core.get.call(null, handlers, name);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var handler = temp__4657__auto__;
    return handler.call(null, copied);
  } else {
    return null;
  }
};
butler.core.post_message_BANG_ = function butler$core$post_message_BANG_(worker, name, copying_data, transferable_keys) {
  var without_transferables = cljs.core.reduce.call(null, function(p1__39695_SHARP_, p2__39696_SHARP_) {
    return cljs.core.assoc_in.call(null, p1__39695_SHARP_, p2__39696_SHARP_, null);
  }, copying_data, transferable_keys);
  var transferables = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(without_transferables) {
    return function(key) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [butler.core.serialize.call(null, key), cljs.core.get_in.call(null, copying_data, key)], null);
    };
  }(without_transferables), transferable_keys));
  var serialized = butler.core.serialize.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), name, new cljs.core.Keyword(null, "data", "data", -232669377), without_transferables], null));
  var copying = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["serialized", serialized, "transferables", transferables], null));
  return worker.postMessage(copying, cljs.core.clj__GT_js.call(null, function() {
    var or__26240__auto__ = cljs.core.vals.call(null, transferables);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }()));
};
butler.core.butler = function butler$core$butler(script, handlers) {
  var w = new Worker(script);
  w.addEventListener(butler.core.event_message, cljs.core.partial.call(null, butler.core.message_handler, handlers));
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "worker", "worker", 938239996), w], null);
};
butler.core.work_BANG_ = function butler$core$work_BANG_(var_args) {
  var args39697 = [];
  var len__27315__auto___39700 = arguments.length;
  var i__27316__auto___39701 = 0;
  while (true) {
    if (i__27316__auto___39701 < len__27315__auto___39700) {
      args39697.push(arguments[i__27316__auto___39701]);
      var G__39702 = i__27316__auto___39701 + 1;
      i__27316__auto___39701 = G__39702;
      continue;
    } else {
    }
    break;
  }
  var G__39699 = args39697.length;
  switch(G__39699) {
    case 4:
      return butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 3:
      return butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39697.length)].join(""));;
  }
};
butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$4 = function(b, name, copying_data, transferable_keys) {
  return butler.core.post_message_BANG_.call(null, (new cljs.core.Keyword(null, "worker", "worker", 938239996)).cljs$core$IFn$_invoke$arity$1(b), name, copying_data, transferable_keys);
};
butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$3 = function(b, name, copying_data) {
  return butler.core.work_BANG_.call(null, b, name, copying_data, cljs.core.PersistentVector.EMPTY);
};
butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, name) {
  return butler.core.work_BANG_.call(null, b, name, null);
};
butler.core.work_BANG_.cljs$lang$maxFixedArity = 4;
butler.core.serve_BANG_ = function butler$core$serve_BANG_(handlers) {
  return self.addEventListener(butler.core.event_message, cljs.core.partial.call(null, butler.core.message_handler, handlers));
};
butler.core.bring_BANG_ = function butler$core$bring_BANG_(var_args) {
  var args39704 = [];
  var len__27315__auto___39707 = arguments.length;
  var i__27316__auto___39708 = 0;
  while (true) {
    if (i__27316__auto___39708 < len__27315__auto___39707) {
      args39704.push(arguments[i__27316__auto___39708]);
      var G__39709 = i__27316__auto___39708 + 1;
      i__27316__auto___39708 = G__39709;
      continue;
    } else {
    }
    break;
  }
  var G__39706 = args39704.length;
  switch(G__39706) {
    case 3:
      return butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39704.length)].join(""));;
  }
};
butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$3 = function(name, copying_data, transferable_keys) {
  return butler.core.post_message_BANG_.call(null, self, name, copying_data, transferable_keys);
};
butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$2 = function(name, copying_data) {
  return butler.core.bring_BANG_.call(null, name, copying_data, cljs.core.PersistentVector.EMPTY);
};
butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$1 = function(name) {
  return butler.core.bring_BANG_.call(null, name, null);
};
butler.core.bring_BANG_.cljs$lang$maxFixedArity = 3;
goog.provide("tictactoe.workers.ai");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("butler.core");
cljs.core.enable_console_print_BANG_.call(null);
tictactoe.workers.ai.winning_k = 3;
tictactoe.workers.ai.X = "X";
tictactoe.workers.ai.O = "O";
tictactoe.workers.ai.B = "B";
tictactoe.workers.ai.board_size = 3;
tictactoe.workers.ai.opponent = new cljs.core.PersistentArrayMap(null, 2, ["X", "O", "O", "X"], null);
tictactoe.workers.ai.free_spots = function tictactoe$workers$ai$free_spots(var_args) {
  var args39714 = [];
  var len__27315__auto___39723 = arguments.length;
  var i__27316__auto___39724 = 0;
  while (true) {
    if (i__27316__auto___39724 < len__27315__auto___39723) {
      args39714.push(arguments[i__27316__auto___39724]);
      var G__39725 = i__27316__auto___39724 + 1;
      i__27316__auto___39724 = G__39725;
      continue;
    } else {
    }
    break;
  }
  var G__39716 = args39714.length;
  switch(G__39716) {
    case 1:
      return tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39714.length)].join(""));;
  }
};
tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$1 = function(board) {
  var iter__27020__auto__ = function tictactoe$workers$ai$iter__39717(s__39718) {
    return new cljs.core.LazySeq(null, function() {
      var s__39718__$1 = s__39718;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__39718__$1);
        if (temp__4657__auto__) {
          var xs__5205__auto__ = temp__4657__auto__;
          var i = cljs.core.first.call(null, xs__5205__auto__);
          var iterys__27016__auto__ = function(s__39718__$1, i, xs__5205__auto__, temp__4657__auto__) {
            return function tictactoe$workers$ai$iter__39717_$_iter__39719(s__39720) {
              return new cljs.core.LazySeq(null, function(s__39718__$1, i, xs__5205__auto__, temp__4657__auto__) {
                return function() {
                  var s__39720__$1 = s__39720;
                  while (true) {
                    var temp__4657__auto____$1 = cljs.core.seq.call(null, s__39720__$1);
                    if (temp__4657__auto____$1) {
                      var s__39720__$2 = temp__4657__auto____$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__39720__$2)) {
                        var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39720__$2);
                        var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
                        var b__39722 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
                        if (function() {
                          var i__39721 = 0;
                          while (true) {
                            if (i__39721 < size__27019__auto__) {
                              var j = cljs.core._nth.call(null, c__27018__auto__, i__39721);
                              if (cljs.core._EQ_.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null)), "B")) {
                                cljs.core.chunk_append.call(null, b__39722, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null));
                                var G__39727 = i__39721 + 1;
                                i__39721 = G__39727;
                                continue;
                              } else {
                                var G__39728 = i__39721 + 1;
                                i__39721 = G__39728;
                                continue;
                              }
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39722), tictactoe$workers$ai$iter__39717_$_iter__39719.call(null, cljs.core.chunk_rest.call(null, s__39720__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39722), null);
                        }
                      } else {
                        var j = cljs.core.first.call(null, s__39720__$2);
                        if (cljs.core._EQ_.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null)), "B")) {
                          return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null), tictactoe$workers$ai$iter__39717_$_iter__39719.call(null, cljs.core.rest.call(null, s__39720__$2)));
                        } else {
                          var G__39729 = cljs.core.rest.call(null, s__39720__$2);
                          s__39720__$1 = G__39729;
                          continue;
                        }
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(s__39718__$1, i, xs__5205__auto__, temp__4657__auto__), null, null);
            };
          }(s__39718__$1, i, xs__5205__auto__, temp__4657__auto__);
          var fs__27017__auto__ = cljs.core.seq.call(null, iterys__27016__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size)));
          if (fs__27017__auto__) {
            return cljs.core.concat.call(null, fs__27017__auto__, tictactoe$workers$ai$iter__39717.call(null, cljs.core.rest.call(null, s__39718__$1)));
          } else {
            var G__39730 = cljs.core.rest.call(null, s__39718__$1);
            s__39718__$1 = G__39730;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$2 = function(board, line_coords) {
  return cljs.core.filter.call(null, function(p1__39713_SHARP_) {
    return cljs.core._EQ_.call(null, "B", cljs.core.get_in.call(null, board, p1__39713_SHARP_));
  }, line_coords);
};
tictactoe.workers.ai.free_spots.cljs$lang$maxFixedArity = 2;
tictactoe.workers.ai.draw_QMARK_ = function tictactoe$workers$ai$draw_QMARK_(board) {
  return cljs.core.empty_QMARK_.call(null, tictactoe.workers.ai.free_spots.call(null, board));
};
tictactoe.workers.ai.vertical_coords = function tictactoe$workers$ai$vertical_coords(y) {
  return cljs.core.map.call(null, function(p1__39731_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__39731_SHARP_, y], null);
  }, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.horizontal_coords = function tictactoe$workers$ai$horizontal_coords(x) {
  return cljs.core.map.call(null, function(p1__39732_SHARP_) {
    return cljs.core.vec.call(null, cljs.core.rseq.call(null, p1__39732_SHARP_));
  }, tictactoe.workers.ai.vertical_coords.call(null, x));
};
tictactoe.workers.ai.diagonal_down_coords = function tictactoe$workers$ai$diagonal_down_coords() {
  var iter__27020__auto__ = function tictactoe$workers$ai$diagonal_down_coords_$_iter__39737(s__39738) {
    return new cljs.core.LazySeq(null, function() {
      var s__39738__$1 = s__39738;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__39738__$1);
        if (temp__4657__auto__) {
          var s__39738__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__39738__$2)) {
            var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39738__$2);
            var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
            var b__39740 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
            if (function() {
              var i__39739 = 0;
              while (true) {
                if (i__39739 < size__27019__auto__) {
                  var i = cljs.core._nth.call(null, c__27018__auto__, i__39739);
                  cljs.core.chunk_append.call(null, b__39740, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, i], null));
                  var G__39741 = i__39739 + 1;
                  i__39739 = G__39741;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39740), tictactoe$workers$ai$diagonal_down_coords_$_iter__39737.call(null, cljs.core.chunk_rest.call(null, s__39738__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39740), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__39738__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, i], null), tictactoe$workers$ai$diagonal_down_coords_$_iter__39737.call(null, cljs.core.rest.call(null, s__39738__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.diagonal_up_coords = function tictactoe$workers$ai$diagonal_up_coords() {
  var iter__27020__auto__ = function tictactoe$workers$ai$diagonal_up_coords_$_iter__39746(s__39747) {
    return new cljs.core.LazySeq(null, function() {
      var s__39747__$1 = s__39747;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__39747__$1);
        if (temp__4657__auto__) {
          var s__39747__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__39747__$2)) {
            var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39747__$2);
            var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
            var b__39749 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
            if (function() {
              var i__39748 = 0;
              while (true) {
                if (i__39748 < size__27019__auto__) {
                  var i = cljs.core._nth.call(null, c__27018__auto__, i__39748);
                  cljs.core.chunk_append.call(null, b__39749, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, tictactoe.workers.ai.board_size - 1 - i], null));
                  var G__39750 = i__39748 + 1;
                  i__39748 = G__39750;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39749), tictactoe$workers$ai$diagonal_up_coords_$_iter__39746.call(null, cljs.core.chunk_rest.call(null, s__39747__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39749), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__39747__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, tictactoe.workers.ai.board_size - 1 - i], null), tictactoe$workers$ai$diagonal_up_coords_$_iter__39746.call(null, cljs.core.rest.call(null, s__39747__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.get_coords = function tictactoe$workers$ai$get_coords(board, coords) {
  return cljs.core.map.call(null, function(p1__39751_SHARP_) {
    return cljs.core.get_in.call(null, board, p1__39751_SHARP_);
  }, coords);
};
tictactoe.workers.ai.all_lines_coords = function tictactoe$workers$ai$all_lines_coords() {
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tictactoe.workers.ai.diagonal_down_coords.call(null), tictactoe.workers.ai.diagonal_up_coords.call(null)], null), function() {
    var iter__27020__auto__ = function tictactoe$workers$ai$all_lines_coords_$_iter__39760(s__39761) {
      return new cljs.core.LazySeq(null, function() {
        var s__39761__$1 = s__39761;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__39761__$1);
          if (temp__4657__auto__) {
            var s__39761__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__39761__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39761__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__39763 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__39762 = 0;
                while (true) {
                  if (i__39762 < size__27019__auto__) {
                    var i = cljs.core._nth.call(null, c__27018__auto__, i__39762);
                    cljs.core.chunk_append.call(null, b__39763, tictactoe.workers.ai.horizontal_coords.call(null, i));
                    var G__39768 = i__39762 + 1;
                    i__39762 = G__39768;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39763), tictactoe$workers$ai$all_lines_coords_$_iter__39760.call(null, cljs.core.chunk_rest.call(null, s__39761__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39763), null);
              }
            } else {
              var i = cljs.core.first.call(null, s__39761__$2);
              return cljs.core.cons.call(null, tictactoe.workers.ai.horizontal_coords.call(null, i), tictactoe$workers$ai$all_lines_coords_$_iter__39760.call(null, cljs.core.rest.call(null, s__39761__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
  }(), function() {
    var iter__27020__auto__ = function tictactoe$workers$ai$all_lines_coords_$_iter__39764(s__39765) {
      return new cljs.core.LazySeq(null, function() {
        var s__39765__$1 = s__39765;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__39765__$1);
          if (temp__4657__auto__) {
            var s__39765__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__39765__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__39765__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__39767 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__39766 = 0;
                while (true) {
                  if (i__39766 < size__27019__auto__) {
                    var i = cljs.core._nth.call(null, c__27018__auto__, i__39766);
                    cljs.core.chunk_append.call(null, b__39767, tictactoe.workers.ai.vertical_coords.call(null, i));
                    var G__39769 = i__39766 + 1;
                    i__39766 = G__39769;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39767), tictactoe$workers$ai$all_lines_coords_$_iter__39764.call(null, cljs.core.chunk_rest.call(null, s__39765__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__39767), null);
              }
            } else {
              var i = cljs.core.first.call(null, s__39765__$2);
              return cljs.core.cons.call(null, tictactoe.workers.ai.vertical_coords.call(null, i), tictactoe$workers$ai$all_lines_coords_$_iter__39764.call(null, cljs.core.rest.call(null, s__39765__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
  }());
};
tictactoe.workers.ai.all_lines = function tictactoe$workers$ai$all_lines(board) {
  return cljs.core.map.call(null, function(p1__39770_SHARP_) {
    return tictactoe.workers.ai.get_coords.call(null, board, p1__39770_SHARP_);
  }, tictactoe.workers.ai.all_lines_coords.call(null));
};
tictactoe.workers.ai.winning_by_QMARK_ = function tictactoe$workers$ai$winning_by_QMARK_(player, line) {
  return cljs.core.every_QMARK_.call(null, function(p1__39771_SHARP_) {
    return cljs.core._EQ_.call(null, p1__39771_SHARP_, player);
  }, cljs.core.take.call(null, tictactoe.workers.ai.winning_k, line));
};
tictactoe.workers.ai.winning_QMARK_ = function tictactoe$workers$ai$winning_QMARK_(board, player) {
  return cljs.core.some.call(null, cljs.core.partial.call(null, tictactoe.workers.ai.winning_by_QMARK_, player), tictactoe.workers.ai.all_lines.call(null, board));
};
tictactoe.workers.ai.evaluate_board = function tictactoe$workers$ai$evaluate_board(board, player) {
  if (cljs.core.truth_(tictactoe.workers.ai.winning_QMARK_.call(null, board, player))) {
    return 1;
  } else {
    if (cljs.core.truth_(tictactoe.workers.ai.winning_QMARK_.call(null, board, tictactoe.workers.ai.opponent.call(null, player)))) {
      return -1;
    } else {
      if (cljs.core.truth_(tictactoe.workers.ai.draw_QMARK_.call(null, board))) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
tictactoe.workers.ai.evaluate_moves_deep = function tictactoe$workers$ai$evaluate_moves_deep(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___39779 = arguments.length;
  var i__27316__auto___39780 = 0;
  while (true) {
    if (i__27316__auto___39780 < len__27315__auto___39779) {
      args__27322__auto__.push(arguments[i__27316__auto___39780]);
      var G__39781 = i__27316__auto___39780 + 1;
      i__27316__auto___39780 = G__39781;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 4 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(4), 0, null) : null;
  return tictactoe.workers.ai.evaluate_moves_deep.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27323__auto__);
};
tictactoe.workers.ai.evaluate_moves_deep.cljs$core$IFn$_invoke$arity$variadic = function(board, player, max_depth, computer, last_move) {
  var score = tictactoe.workers.ai.evaluate_board.call(null, board, computer);
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = score;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return max_depth < 0;
    }
  }())) {
    return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "score", "score", -1963588780), new cljs.core.Keyword(null, "move", "move", -2110884309)], [score, last_move]);
  } else {
    var legal_moves = cljs.core.map.call(null, function(score) {
      return function(p1__39772_SHARP_) {
        return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "move", "move", -2110884309)], [cljs.core.assoc_in.call(null, board, p1__39772_SHARP_, player), p1__39772_SHARP_]);
      };
    }(score), tictactoe.workers.ai.free_spots.call(null, board));
    var evaluated_moves = cljs.core.map.call(null, function(legal_moves, score) {
      return function(p1__39773_SHARP_) {
        return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "score", "score", -1963588780), new cljs.core.Keyword(null, "move", "move", -2110884309)], [cljs.core.trampoline.call(null, tictactoe.workers.ai.evaluate_moves_deep, p1__39773_SHARP_.call(null, new cljs.core.Keyword(null, "board", "board", -1907017633)), tictactoe.workers.ai.opponent.call(null, player), max_depth - 1, computer, p1__39773_SHARP_.call(null, new cljs.core.Keyword(null, "move", "move", -2110884309))).call(null, 
        new cljs.core.Keyword(null, "score", "score", -1963588780)), p1__39773_SHARP_.call(null, new cljs.core.Keyword(null, "move", "move", -2110884309))]);
      };
    }(legal_moves, score), legal_moves);
    return cljs.core.first.call(null, cljs.core._EQ_.call(null, player, computer) ? cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "score", "score", -1963588780), cljs.core._GT_, evaluated_moves) : cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "score", "score", -1963588780), cljs.core._LT_, evaluated_moves));
  }
};
tictactoe.workers.ai.evaluate_moves_deep.cljs$lang$maxFixedArity = 4;
tictactoe.workers.ai.evaluate_moves_deep.cljs$lang$applyTo = function(seq39774) {
  var G__39775 = cljs.core.first.call(null, seq39774);
  var seq39774__$1 = cljs.core.next.call(null, seq39774);
  var G__39776 = cljs.core.first.call(null, seq39774__$1);
  var seq39774__$2 = cljs.core.next.call(null, seq39774__$1);
  var G__39777 = cljs.core.first.call(null, seq39774__$2);
  var seq39774__$3 = cljs.core.next.call(null, seq39774__$2);
  var G__39778 = cljs.core.first.call(null, seq39774__$3);
  var seq39774__$4 = cljs.core.next.call(null, seq39774__$3);
  return tictactoe.workers.ai.evaluate_moves_deep.cljs$core$IFn$_invoke$arity$variadic(G__39775, G__39776, G__39777, G__39778, seq39774__$4);
};
tictactoe.workers.ai.find_best_move = function tictactoe$workers$ai$find_best_move(board) {
  return tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 5, "O").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
};
tictactoe.workers.ai.analyze_handler = function tictactoe$workers$ai$analyze_handler(board) {
  return butler.core.bring_BANG_.call(null, new cljs.core.Keyword(null, "analyze-result", "analyze-result", 1074901422), tictactoe.workers.ai.find_best_move.call(null, board));
};
butler.core.serve_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "request-analyze", "request-analyze", -185801518), tictactoe.workers.ai.analyze_handler], null));
tictactoe.workers.ai.eval_lost_pos = function tictactoe$workers$ai$eval_lost_pos() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$eval_lost_pos.cljs$lang$var);
};
tictactoe.workers.ai.eval_lost_pos.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "O"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "X"], null)], null);
  var score = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 1, "O").call(null, new cljs.core.Keyword(null, "score", "score", -1963588780));
  try {
    var values__29861__auto__ = function() {
      var x__27074__auto__ = score;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, -1), x__27074__auto__);
    }();
    var result__29862__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__29861__auto__);
    if (cljs.core.truth_(result__29862__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), -1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, 
      values__29861__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), -1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__29861__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__29862__auto__;
  } catch (e39782) {
    var t__29899__auto__ = e39782;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), -1), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__29899__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.eval_lost_pos.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.eval_lost_pos;
}, new cljs.core.Symbol("tictactoe.workers.ai", "eval-lost-pos", "tictactoe.workers.ai/eval-lost-pos", 1157531051, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "eval-lost-pos", "eval-lost-pos", 882566934, null), "src/tictactoe/workers/ai.cljs", 23, 1, 84, 84, cljs.core.List.EMPTY, null, 
cljs.core.truth_(tictactoe.workers.ai.eval_lost_pos) ? tictactoe.workers.ai.eval_lost_pos.cljs$lang$test : null]));
tictactoe.workers.ai.eval_won_pos = function tictactoe$workers$ai$eval_won_pos() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$eval_won_pos.cljs$lang$var);
};
tictactoe.workers.ai.eval_won_pos.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "O"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "X"], null)], null);
  var score = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "X", 1, "X").call(null, new cljs.core.Keyword(null, "score", "score", -1963588780));
  try {
    var values__29861__auto__ = function() {
      var x__27074__auto__ = score;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 1), x__27074__auto__);
    }();
    var result__29862__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__29861__auto__);
    if (cljs.core.truth_(result__29862__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), 1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, 
      values__29861__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), 1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__29861__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__29862__auto__;
  } catch (e39783) {
    var t__29899__auto__ = e39783;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), 1), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__29899__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.eval_won_pos.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.eval_won_pos;
}, new cljs.core.Symbol("tictactoe.workers.ai", "eval-won-pos", "tictactoe.workers.ai/eval-won-pos", 787533079, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "eval-won-pos", "eval-won-pos", -1634260860, null), "src/tictactoe/workers/ai.cljs", 22, 1, 91, 91, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.eval_won_pos) ? 
tictactoe.workers.ai.eval_won_pos.cljs$lang$test : null]));
tictactoe.workers.ai.one_move_win = function tictactoe$workers$ai$one_move_win() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$one_move_win.cljs$lang$var);
};
tictactoe.workers.ai.one_move_win.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "O"], null)], null);
  var result = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 1, "O");
  var move = result.call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__29861__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__29862__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__29861__auto__);
    if (cljs.core.truth_(result__29862__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__29861__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__29861__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__29862__auto__;
  } catch (e39784) {
    var t__29899__auto__ = e39784;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__29899__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.one_move_win.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.one_move_win;
}, new cljs.core.Symbol("tictactoe.workers.ai", "one-move-win", "tictactoe.workers.ai/one-move-win", -72104046, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "one-move-win", "one-move-win", 186100031, null), "src/tictactoe/workers/ai.cljs", 22, 1, 98, 98, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.one_move_win) ? 
tictactoe.workers.ai.one_move_win.cljs$lang$test : null]));
tictactoe.workers.ai.block_one_move_win = function tictactoe$workers$ai$block_one_move_win() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$block_one_move_win.cljs$lang$var);
};
tictactoe.workers.ai.block_one_move_win.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "O"], null)], null);
  var move = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "X", 1, "X").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__29861__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__29862__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__29861__auto__);
    if (cljs.core.truth_(result__29862__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__29861__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__29861__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__29862__auto__;
  } catch (e39785) {
    var t__29899__auto__ = e39785;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__29899__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.block_one_move_win.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.block_one_move_win;
}, new cljs.core.Symbol("tictactoe.workers.ai", "block-one-move-win", "tictactoe.workers.ai/block-one-move-win", -856680658, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "block-one-move-win", "block-one-move-win", -1131122085, null), "src/tictactoe/workers/ai.cljs", 28, 1, 106, 106, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tictactoe.workers.ai.block_one_move_win) ? tictactoe.workers.ai.block_one_move_win.cljs$lang$test : null]));
tictactoe.workers.ai.fork = function tictactoe$workers$ai$fork() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$fork.cljs$lang$var);
};
tictactoe.workers.ai.fork.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "X", "X"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "B"], null)], null);
  var move = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 5, "O").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__29861__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__29862__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__29861__auto__);
    if (cljs.core.truth_(result__29862__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__29861__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__29861__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__29862__auto__;
  } catch (e39786) {
    var t__29899__auto__ = e39786;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__29899__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.fork.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.fork;
}, new cljs.core.Symbol("tictactoe.workers.ai", "fork", "tictactoe.workers.ai/fork", -795304713, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
"end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "fork", "fork", -1591461534, null), "src/tictactoe/workers/ai.cljs", 14, 1, 113, 113, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.fork) ? tictactoe.workers.ai.fork.cljs$lang$test : 
null]));
tictactoe.workers.ai.block_fork = function tictactoe$workers$ai$block_fork() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$block_fork.cljs$lang$var);
};
tictactoe.workers.ai.block_fork.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "X", "X"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "B"], null)], null);
  var move = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "X", 5, "X").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__29861__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__29862__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__29861__auto__);
    if (cljs.core.truth_(result__29862__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__29861__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__29861__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__29862__auto__;
  } catch (e39787) {
    var t__29899__auto__ = e39787;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__29899__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.block_fork.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.block_fork;
}, new cljs.core.Symbol("tictactoe.workers.ai", "block-fork", "tictactoe.workers.ai/block-fork", 128787680, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "block-fork", "block-fork", -163477635, null), "src/tictactoe/workers/ai.cljs", 20, 1, 120, 120, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.block_fork) ? 
tictactoe.workers.ai.block_fork.cljs$lang$test : null]));
