if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(loadFlags["lang"]))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.transpiledLanguages_) {
          goog.transpiledLanguages_ = {"es5":true, "es6":true, "es6-impl":true};
          try {
            goog.transpiledLanguages_["es5"] = eval("[1,].length!\x3d1");
            var es6implTest = "let a\x3d{};const X\x3dclass{constructor(){}x(z){return new Map([" + "...arguments]).get(z[0])\x3d\x3d3}};return new X().x([a,3])";
            var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
            if (eval('(()\x3d\x3e{"use strict";' + es6implTest + "})()")) {
              goog.transpiledLanguages_["es6-impl"] = false;
            }
            if (eval('(()\x3d\x3e{"use strict";' + es6fullTest + "})()")) {
              goog.transpiledLanguages_["es6"] = false;
            }
          } catch (err) {
          }
        }
      }
    }
    return !!goog.transpiledLanguages_[lang];
  };
  goog.transpiledLanguages_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var needsTranspile = goog.needsTranspile_(loadFlags["lang"]);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0;i < separators.length;i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / (v2);
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call((opt_obj), obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call((opt_obj), obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call((opt_obj), obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call((opt_this), obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1;i >= 0;i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0;value >= pow;i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0;i < this.bits_.length;i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0;i < len;i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0;i < arr_index;i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0;i <= len;i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0;i < 2 * len;i++) {
    arr[i] = 0;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    for (var j = 0;j < other.bits_.length;j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0;i < len;i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len;i < 2 * len;i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call((opt_obj), val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call((opt_obj), arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call((opt_obj), arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call((opt_obj), element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call((opt_obj), val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = (compareFn)(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0;i < arr.length;i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call((opt_obj), value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call((opt_obj), element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
      return new goog.math.Long(val | 0, val < 0 ? -1 : 0);
    });
  } else {
    return new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ZERO, function() {
    return goog.math.Long.fromInt(0);
  });
};
goog.math.Long.getOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ONE, function() {
    return goog.math.Long.fromInt(1);
  });
};
goog.math.Long.getNegOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.NEG_ONE, function() {
    return goog.math.Long.fromInt(-1);
  });
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, ZERO:3, ONE:4, NEG_ONE:5, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.9.229";
cljs.core._STAR_unchecked_if_STAR_ = false;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__37849__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__37849 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__37850__i = 0, G__37850__a = new Array(arguments.length - 0);
        while (G__37850__i < G__37850__a.length) {
          G__37850__a[G__37850__i] = arguments[G__37850__i + 0];
          ++G__37850__i;
        }
        args = new cljs.core.IndexedSeq(G__37850__a, 0);
      }
      return G__37849__delegate.call(this, args);
    };
    G__37849.cljs$lang$maxFixedArity = 0;
    G__37849.cljs$lang$applyTo = function(arglist__37851) {
      var args = cljs.core.seq(arglist__37851);
      return G__37849__delegate(args);
    };
    G__37849.cljs$core$IFn$_invoke$arity$variadic = G__37849__delegate;
    return G__37849;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__37852__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__37852 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__37853__i = 0, G__37853__a = new Array(arguments.length - 0);
        while (G__37853__i < G__37853__a.length) {
          G__37853__a[G__37853__i] = arguments[G__37853__i + 0];
          ++G__37853__i;
        }
        args = new cljs.core.IndexedSeq(G__37853__a, 0);
      }
      return G__37852__delegate.call(this, args);
    };
    G__37852.cljs$lang$maxFixedArity = 0;
    G__37852.cljs$lang$applyTo = function(arglist__37854) {
      var args = cljs.core.seq(arglist__37854);
      return G__37852__delegate(args);
    };
    G__37852.cljs$core$IFn$_invoke$arity$variadic = G__37852__delegate;
    return G__37852;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__26228__auto__ = ty;
    if (cljs.core.truth_(and__26228__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__26228__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args37855 = [];
  var len__27315__auto___37861 = arguments.length;
  var i__27316__auto___37862 = 0;
  while (true) {
    if (i__27316__auto___37862 < len__27315__auto___37861) {
      args37855.push(arguments[i__27316__auto___37862]);
      var G__37863 = i__27316__auto___37862 + 1;
      i__27316__auto___37862 = G__37863;
      continue;
    } else {
    }
    break;
  }
  var G__37860 = args37855.length;
  switch(G__37860) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37855.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__27155__auto___37865 = dimarray.length;
  var i_37866 = 0;
  while (true) {
    if (i_37866 < n__27155__auto___37865) {
      dimarray[i_37866] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__37867 = i_37866 + 1;
      i_37866 = G__37867;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq37856) {
  var G__37857 = cljs.core.first(seq37856);
  var seq37856__$1 = cljs.core.next(seq37856);
  var G__37858 = cljs.core.first(seq37856__$1);
  var seq37856__$2 = cljs.core.next(seq37856__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__37857, G__37858, seq37856__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__27155__auto___37868 = len;
  var i_37869 = 0;
  while (true) {
    if (i_37869 < n__27155__auto___37868) {
      new_arr[i_37869] = arr[i_37869];
      var G__37870 = i_37869 + 1;
      i_37869 = G__37870;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__37871 = i + 1;
      i = G__37871;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args37872 = [];
  var len__27315__auto___37881 = arguments.length;
  var i__27316__auto___37882 = 0;
  while (true) {
    if (i__27316__auto___37882 < len__27315__auto___37881) {
      args37872.push(arguments[i__27316__auto___37882]);
      var G__37883 = i__27316__auto___37882 + 1;
      i__27316__auto___37882 = G__37883;
      continue;
    } else {
    }
    break;
  }
  var G__37877 = args37872.length;
  switch(G__37877) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37872.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__37878 = cljs.core.aget;
  var G__37879 = array[i];
  var G__37880 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__37878, G__37879, G__37880) : cljs.core.apply.call(null, G__37878, G__37879, G__37880);
};
cljs.core.aget.cljs$lang$applyTo = function(seq37873) {
  var G__37874 = cljs.core.first(seq37873);
  var seq37873__$1 = cljs.core.next(seq37873);
  var G__37875 = cljs.core.first(seq37873__$1);
  var seq37873__$2 = cljs.core.next(seq37873__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__37874, G__37875, seq37873__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args37885 = [];
  var len__27315__auto___37896 = arguments.length;
  var i__27316__auto___37897 = 0;
  while (true) {
    if (i__27316__auto___37897 < len__27315__auto___37896) {
      args37885.push(arguments[i__27316__auto___37897]);
      var G__37898 = i__27316__auto___37897 + 1;
      i__27316__auto___37897 = G__37898;
      continue;
    } else {
    }
    break;
  }
  var G__37891 = args37885.length;
  switch(G__37891) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args37885.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__37892 = cljs.core.aset;
  var G__37893 = array[idx];
  var G__37894 = idx2;
  var G__37895 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__37892, G__37893, G__37894, G__37895) : cljs.core.apply.call(null, G__37892, G__37893, G__37894, G__37895);
};
cljs.core.aset.cljs$lang$applyTo = function(seq37886) {
  var G__37887 = cljs.core.first(seq37886);
  var seq37886__$1 = cljs.core.next(seq37886);
  var G__37888 = cljs.core.first(seq37886__$1);
  var seq37886__$2 = cljs.core.next(seq37886__$1);
  var G__37889 = cljs.core.first(seq37886__$2);
  var seq37886__$3 = cljs.core.next(seq37886__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__37887, G__37888, G__37889, seq37886__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args37900 = [];
  var len__27315__auto___37906 = arguments.length;
  var i__27316__auto___37907 = 0;
  while (true) {
    if (i__27316__auto___37907 < len__27315__auto___37906) {
      args37900.push(arguments[i__27316__auto___37907]);
      var G__37908 = i__27316__auto___37907 + 1;
      i__27316__auto___37907 = G__37908;
      continue;
    } else {
    }
    break;
  }
  var G__37902 = args37900.length;
  switch(G__37902) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37900.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__37903 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__37904 = [];
  var G__37905 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__37903, G__37904, G__37905) : cljs.core.reduce.call(null, G__37903, G__37904, G__37905);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___37913 = arguments.length;
  var i__27316__auto___37914 = 0;
  while (true) {
    if (i__27316__auto___37914 < len__27315__auto___37913) {
      args__27322__auto__.push(arguments[i__27316__auto___37914]);
      var G__37915 = i__27316__auto___37914 + 1;
      i__27316__auto___37914 = G__37915;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq37910) {
  var G__37911 = cljs.core.first(seq37910);
  var seq37910__$1 = cljs.core.next(seq37910);
  var G__37912 = cljs.core.first(seq37910__$1);
  var seq37910__$2 = cljs.core.next(seq37910__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__37911, G__37912, seq37910__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args37916 = [];
  var len__27315__auto___37919 = arguments.length;
  var i__27316__auto___37920 = 0;
  while (true) {
    if (i__27316__auto___37920 < len__27315__auto___37919) {
      args37916.push(arguments[i__27316__auto___37920]);
      var G__37921 = i__27316__auto___37920 + 1;
      i__27316__auto___37920 = G__37921;
      continue;
    } else {
    }
    break;
  }
  var G__37918 = args37916.length;
  switch(G__37918) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37916.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__26904__auto__.call(null, this$);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__26904__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__26904__auto__.call(null, this$, a);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__26904__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__26904__auto__.call(null, this$, a, b);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__26904__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__26904__auto__.call(null, this$, a, b, c);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__26904__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__26904__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__26904__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$6 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__26904__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__26904__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$7 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__26904__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$8 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$9 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$10 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$11 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$12 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$13 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$14 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$15 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$16 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$17 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$18 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$19 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$20 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$21 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._invoke[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$22 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__26904__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__26904__auto____$1 = cljs.core._invoke["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__26904__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__26903__auto__ = value == null ? null : value;
    var m__26904__auto__ = cljs.core._clone[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__26904__auto__.call(null, value);
    } else {
      var m__26904__auto____$1 = cljs.core._clone["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__26904__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._count[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._count["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._empty[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._empty["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._conj[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__26904__auto__.call(null, coll, o);
    } else {
      var m__26904__auto____$1 = cljs.core._conj["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__26904__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args37923 = [];
  var len__27315__auto___37926 = arguments.length;
  var i__27316__auto___37927 = 0;
  while (true) {
    if (i__27316__auto___37927 < len__27315__auto___37926) {
      args37923.push(arguments[i__27316__auto___37927]);
      var G__37928 = i__27316__auto___37927 + 1;
      i__27316__auto___37927 = G__37928;
      continue;
    } else {
    }
    break;
  }
  var G__37925 = args37923.length;
  switch(G__37925) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37923.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._nth[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__26904__auto__.call(null, coll, n);
    } else {
      var m__26904__auto____$1 = cljs.core._nth["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__26904__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._nth[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__26904__auto__.call(null, coll, n, not_found);
    } else {
      var m__26904__auto____$1 = cljs.core._nth["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__26904__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._first[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._first["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._rest[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._rest["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._next[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._next["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args37930 = [];
  var len__27315__auto___37933 = arguments.length;
  var i__27316__auto___37934 = 0;
  while (true) {
    if (i__27316__auto___37934 < len__27315__auto___37933) {
      args37930.push(arguments[i__27316__auto___37934]);
      var G__37935 = i__27316__auto___37934 + 1;
      i__27316__auto___37934 = G__37935;
      continue;
    } else {
    }
    break;
  }
  var G__37932 = args37930.length;
  switch(G__37932) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37930.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._lookup[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__26904__auto__.call(null, o, k);
    } else {
      var m__26904__auto____$1 = cljs.core._lookup["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__26904__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._lookup[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__26904__auto__.call(null, o, k, not_found);
    } else {
      var m__26904__auto____$1 = cljs.core._lookup["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__26904__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto__.call(null, coll, k);
    } else {
      var m__26904__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._assoc[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__26904__auto__.call(null, coll, k, v);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__26904__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._dissoc[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto__.call(null, coll, k);
    } else {
      var m__26904__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__26904__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._key[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._key["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._val[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._val["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._disjoin[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__26904__auto__.call(null, coll, v);
    } else {
      var m__26904__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__26904__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._peek[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._peek["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._pop[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._pop["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._assoc_n[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__26904__auto__.call(null, coll, n, val);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__26904__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._deref[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._deref["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__26904__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__26904__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__26904__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._meta[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._meta["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._with_meta[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__26904__auto__.call(null, o, meta);
    } else {
      var m__26904__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__26904__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args37937 = [];
  var len__27315__auto___37940 = arguments.length;
  var i__27316__auto___37941 = 0;
  while (true) {
    if (i__27316__auto___37941 < len__27315__auto___37940) {
      args37937.push(arguments[i__27316__auto___37941]);
      var G__37942 = i__27316__auto___37941 + 1;
      i__27316__auto___37941 = G__37942;
      continue;
    } else {
    }
    break;
  }
  var G__37939 = args37937.length;
  switch(G__37939) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37937.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._reduce[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__26904__auto__.call(null, coll, f);
    } else {
      var m__26904__auto____$1 = cljs.core._reduce["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__26904__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._reduce[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__26904__auto__.call(null, coll, f, start);
    } else {
      var m__26904__auto____$1 = cljs.core._reduce["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__26904__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._kv_reduce[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__26904__auto__.call(null, coll, f, init);
    } else {
      var m__26904__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__26904__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._equiv[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__26904__auto__.call(null, o, other);
    } else {
      var m__26904__auto____$1 = cljs.core._equiv["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__26904__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._hash[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._hash["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._seq[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto__.call(null, o);
    } else {
      var m__26904__auto____$1 = cljs.core._seq["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__26904__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._rseq[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._rseq["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._sorted_seq[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__26904__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__26904__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__26904__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__26904__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__26904__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__26904__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._entry_key[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__26904__auto__.call(null, coll, entry);
    } else {
      var m__26904__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__26904__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._comparator[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._comparator["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__26903__auto__ = writer == null ? null : writer;
    var m__26904__auto__ = cljs.core._write[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__26904__auto__.call(null, writer, s);
    } else {
      var m__26904__auto____$1 = cljs.core._write["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__26904__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__26903__auto__ = writer == null ? null : writer;
    var m__26904__auto__ = cljs.core._flush[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__26904__auto__.call(null, writer);
    } else {
      var m__26904__auto____$1 = cljs.core._flush["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__26904__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._pr_writer[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__26904__auto__.call(null, o, writer, opts);
    } else {
      var m__26904__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__26904__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._notify_watches[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__26904__auto__.call(null, this$, oldval, newval);
    } else {
      var m__26904__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__26904__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._add_watch[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__26904__auto__.call(null, this$, key, f);
    } else {
      var m__26904__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__26904__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__26903__auto__ = this$ == null ? null : this$;
    var m__26904__auto__ = cljs.core._remove_watch[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__26904__auto__.call(null, this$, key);
    } else {
      var m__26904__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__26904__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._as_transient[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__26904__auto__.call(null, tcoll, val);
    } else {
      var m__26904__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__26904__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto__.call(null, tcoll);
    } else {
      var m__26904__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__26904__auto__.call(null, tcoll, key, val);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__26904__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__26904__auto__.call(null, tcoll, key);
    } else {
      var m__26904__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__26904__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__26904__auto__.call(null, tcoll, n, val);
    } else {
      var m__26904__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__26904__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto__.call(null, tcoll);
    } else {
      var m__26904__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__26904__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__26903__auto__ = tcoll == null ? null : tcoll;
    var m__26904__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__26904__auto__.call(null, tcoll, v);
    } else {
      var m__26904__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__26904__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._compare[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__26904__auto__.call(null, x, y);
    } else {
      var m__26904__auto____$1 = cljs.core._compare["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__26904__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._drop_first[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._chunked_first[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._chunked_rest[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._chunked_next[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._name[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._name["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._namespace[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._namespace["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto__.call(null, o, new_value);
    } else {
      var m__26904__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args37944 = [];
  var len__27315__auto___37947 = arguments.length;
  var i__27316__auto___37948 = 0;
  while (true) {
    if (i__27316__auto___37948 < len__27315__auto___37947) {
      args37944.push(arguments[i__27316__auto___37948]);
      var G__37949 = i__27316__auto___37948 + 1;
      i__27316__auto___37948 = G__37949;
      continue;
    } else {
    }
    break;
  }
  var G__37946 = args37944.length;
  switch(G__37946) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37944.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__26904__auto__.call(null, o, f);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__26904__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__26904__auto__.call(null, o, f, a);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__26904__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__26904__auto__.call(null, o, f, a, b);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__26904__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__26904__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__26904__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__26904__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__26903__auto__ = o == null ? null : o;
    var m__26904__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto__.call(null, o, new_value);
    } else {
      var m__26904__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__26904__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__26903__auto__ = coll == null ? null : coll;
    var m__26904__auto__ = cljs.core._iterator[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto__.call(null, coll);
    } else {
      var m__26904__auto____$1 = cljs.core._iterator["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__26904__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__37951 = i + 2;
        var G__37952 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__37951;
        h1 = G__37952;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__37955 = i + 1;
          var G__37956 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__37955;
          hash = G__37956;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__37964 = o;
        switch(G__37964) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = cljs.core.not(a.ns);
      if (and__26228__auto__) {
        return b.ns;
      } else {
        return and__26228__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__37972 = a.ns;
            var G__37973 = b.ns;
            return goog.array.defaultCompare(G__37972, G__37973);
          }();
          if (0 === nsc) {
            var G__37974 = a.name;
            var G__37975 = b.name;
            return goog.array.defaultCompare(G__37974, G__37975);
          } else {
            return nsc;
          }
        }
      } else {
        var G__37976 = a.name;
        var G__37977 = b.name;
        return goog.array.defaultCompare(G__37976, G__37977);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__37979 = null;
  var G__37979__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__37979__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__37979 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__37979__2.call(this, self__, coll);
      case 3:
        return G__37979__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__37979.cljs$core$IFn$_invoke$arity$2 = G__37979__2;
  G__37979.cljs$core$IFn$_invoke$arity$3 = G__37979__3;
  return G__37979;
}();
cljs.core.Symbol.prototype.apply = function(self__, args37978) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args37978)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__26675__auto__ = self__._hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args37980 = [];
  var len__27315__auto___37983 = arguments.length;
  var i__27316__auto___37984 = 0;
  while (true) {
    if (i__27316__auto___37984 < len__27315__auto___37983) {
      args37980.push(arguments[i__27316__auto___37984]);
      var G__37985 = i__27316__auto___37984 + 1;
      i__27316__auto___37984 = G__37985;
      continue;
    } else {
    }
    break;
  }
  var G__37982 = args37980.length;
  switch(G__37982) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37980.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str("#'"), cljs.core.str(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__37988 = this$__$1.sym;
    var G__37989 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__37988, G__37989) : cljs.core._EQ_.call(null, G__37988, G__37989);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__38034 = null;
  var G__38034__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__38034__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__38034__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__38034__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__38034__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__38034__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__38034__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__38034__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__38034__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__38034__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__38034__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__38034__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__38034__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__38034__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__38034__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__38034__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__38034__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__38034__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__38034__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__38034__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__38034__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__38034__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__37990 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__37991 = a;
    var G__37992 = b;
    var G__37993 = c;
    var G__37994 = d;
    var G__37995 = e;
    var G__37996 = f;
    var G__37997 = g;
    var G__37998 = h;
    var G__37999 = i;
    var G__38000 = j;
    var G__38001 = k;
    var G__38002 = l;
    var G__38003 = m;
    var G__38004 = n;
    var G__38005 = o;
    var G__38006 = p;
    var G__38007 = q;
    var G__38008 = r;
    var G__38009 = s;
    var G__38010 = t;
    var G__38011 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__37990, G__37991, G__37992, G__37993, G__37994, G__37995, G__37996, G__37997, G__37998, G__37999, G__38000, G__38001, G__38002, G__38003, G__38004, G__38005, G__38006, G__38007, G__38008, G__38009, G__38010, G__38011) : cljs.core.apply.call(null, G__37990, G__37991, G__37992, G__37993, G__37994, G__37995, G__37996, G__37997, G__37998, G__37999, G__38000, G__38001, G__38002, G__38003, G__38004, 
    G__38005, G__38006, G__38007, G__38008, G__38009, G__38010, G__38011);
  };
  G__38034 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__38034__1.call(this, self__);
      case 2:
        return G__38034__2.call(this, self__, a);
      case 3:
        return G__38034__3.call(this, self__, a, b);
      case 4:
        return G__38034__4.call(this, self__, a, b, c);
      case 5:
        return G__38034__5.call(this, self__, a, b, c, d);
      case 6:
        return G__38034__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__38034__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__38034__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__38034__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__38034__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__38034__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__38034__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__38034__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__38034__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__38034__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__38034__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__38034__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__38034__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__38034__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__38034__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__38034__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__38034__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38034.cljs$core$IFn$_invoke$arity$1 = G__38034__1;
  G__38034.cljs$core$IFn$_invoke$arity$2 = G__38034__2;
  G__38034.cljs$core$IFn$_invoke$arity$3 = G__38034__3;
  G__38034.cljs$core$IFn$_invoke$arity$4 = G__38034__4;
  G__38034.cljs$core$IFn$_invoke$arity$5 = G__38034__5;
  G__38034.cljs$core$IFn$_invoke$arity$6 = G__38034__6;
  G__38034.cljs$core$IFn$_invoke$arity$7 = G__38034__7;
  G__38034.cljs$core$IFn$_invoke$arity$8 = G__38034__8;
  G__38034.cljs$core$IFn$_invoke$arity$9 = G__38034__9;
  G__38034.cljs$core$IFn$_invoke$arity$10 = G__38034__10;
  G__38034.cljs$core$IFn$_invoke$arity$11 = G__38034__11;
  G__38034.cljs$core$IFn$_invoke$arity$12 = G__38034__12;
  G__38034.cljs$core$IFn$_invoke$arity$13 = G__38034__13;
  G__38034.cljs$core$IFn$_invoke$arity$14 = G__38034__14;
  G__38034.cljs$core$IFn$_invoke$arity$15 = G__38034__15;
  G__38034.cljs$core$IFn$_invoke$arity$16 = G__38034__16;
  G__38034.cljs$core$IFn$_invoke$arity$17 = G__38034__17;
  G__38034.cljs$core$IFn$_invoke$arity$18 = G__38034__18;
  G__38034.cljs$core$IFn$_invoke$arity$19 = G__38034__19;
  G__38034.cljs$core$IFn$_invoke$arity$20 = G__38034__20;
  G__38034.cljs$core$IFn$_invoke$arity$21 = G__38034__21;
  G__38034.cljs$core$IFn$_invoke$arity$22 = G__38034__22;
  return G__38034;
}();
cljs.core.Var.prototype.apply = function(self__, args37987) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args37987)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__38012 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__38013 = a;
  var G__38014 = b;
  var G__38015 = c;
  var G__38016 = d;
  var G__38017 = e;
  var G__38018 = f;
  var G__38019 = g;
  var G__38020 = h;
  var G__38021 = i;
  var G__38022 = j;
  var G__38023 = k;
  var G__38024 = l;
  var G__38025 = m;
  var G__38026 = n;
  var G__38027 = o;
  var G__38028 = p;
  var G__38029 = q;
  var G__38030 = r;
  var G__38031 = s;
  var G__38032 = t;
  var G__38033 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__38012, G__38013, G__38014, G__38015, G__38016, G__38017, G__38018, G__38019, G__38020, G__38021, G__38022, G__38023, G__38024, G__38025, G__38026, G__38027, G__38028, G__38029, G__38030, G__38031, G__38032, G__38033) : cljs.core.apply.call(null, G__38012, G__38013, G__38014, G__38015, G__38016, G__38017, G__38018, G__38019, G__38020, G__38021, G__38022, G__38023, G__38024, G__38025, G__38026, 
  G__38027, G__38028, G__38029, G__38030, G__38031, G__38032, G__38033);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args38047 = [];
  var len__27315__auto___38053 = arguments.length;
  var i__27316__auto___38054 = 0;
  while (true) {
    if (i__27316__auto___38054 < len__27315__auto___38053) {
      args38047.push(arguments[i__27316__auto___38054]);
      var G__38055 = i__27316__auto___38054 + 1;
      i__27316__auto___38054 = G__38055;
      continue;
    } else {
    }
    break;
  }
  var G__38052 = args38047.length;
  switch(G__38052) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38047.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__38057 = y;
        var G__38058 = cljs.core.first(more);
        var G__38059 = cljs.core.next(more);
        x = G__38057;
        y = G__38058;
        more = G__38059;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq38048) {
  var G__38049 = cljs.core.first(seq38048);
  var seq38048__$1 = cljs.core.next(seq38048);
  var G__38050 = cljs.core.first(seq38048__$1);
  var seq38048__$2 = cljs.core.next(seq38048__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__38049, G__38050, seq38048__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__38060 = n + 1;
      var G__38061 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__38062 = cljs.core.next(coll__$1);
      n = G__38060;
      hash_code = G__38061;
      coll__$1 = G__38062;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__38063 = n + 1;
      var G__38064 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__38065 = cljs.core.next(coll__$1);
      n = G__38063;
      hash_code = G__38064;
      coll__$1 = G__38065;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__38066 = this$__$1.valueOf();
    var G__38067 = other.valueOf();
    return goog.array.defaultCompare(G__38066, G__38067);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__26903__auto__ = inst == null ? null : inst;
    var m__26904__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__26904__auto__.call(null, inst);
    } else {
      var m__26904__auto____$1 = cljs.core.inst_ms_STAR_["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(inst) : m__26904__auto____$1.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = true;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args38070 = [];
  var len__27315__auto___38079 = arguments.length;
  var i__27316__auto___38080 = 0;
  while (true) {
    if (i__27316__auto___38080 < len__27315__auto___38079) {
      args38070.push(arguments[i__27316__auto___38080]);
      var G__38081 = i__27316__auto___38080 + 1;
      i__27316__auto___38080 = G__38081;
      continue;
    } else {
    }
    break;
  }
  var G__38072 = args38070.length;
  switch(G__38072) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38070.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__38073 = val;
          var G__38074 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38073, G__38074) : f.call(null, G__38073, G__38074);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__38083 = nval;
          var G__38084 = n + 1;
          val = G__38083;
          n = G__38084;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__38075 = val__$1;
        var G__38076 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38075, G__38076) : f.call(null, G__38075, G__38076);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__38085 = nval;
        var G__38086 = n + 1;
        val__$1 = G__38085;
        n = G__38086;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__38077 = val__$1;
        var G__38078 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38077, G__38078) : f.call(null, G__38077, G__38078);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__38087 = nval;
        var G__38088 = n + 1;
        val__$1 = G__38087;
        n = G__38088;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args38089 = [];
  var len__27315__auto___38098 = arguments.length;
  var i__27316__auto___38099 = 0;
  while (true) {
    if (i__27316__auto___38099 < len__27315__auto___38098) {
      args38089.push(arguments[i__27316__auto___38099]);
      var G__38100 = i__27316__auto___38099 + 1;
      i__27316__auto___38099 = G__38100;
      continue;
    } else {
    }
    break;
  }
  var G__38091 = args38089.length;
  switch(G__38091) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38089.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__38092 = val;
          var G__38093 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38092, G__38093) : f.call(null, G__38092, G__38093);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__38102 = nval;
          var G__38103 = n + 1;
          val = G__38102;
          n = G__38103;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__38094 = val__$1;
        var G__38095 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38094, G__38095) : f.call(null, G__38094, G__38095);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__38104 = nval;
        var G__38105 = n + 1;
        val__$1 = G__38104;
        n = G__38105;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__38096 = val__$1;
        var G__38097 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38096, G__38097) : f.call(null, G__38096, G__38097);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__38106 = nval;
        var G__38107 = n + 1;
        val__$1 = G__38106;
        n = G__38107;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args38112 = [];
  var len__27315__auto___38115 = arguments.length;
  var i__27316__auto___38116 = 0;
  while (true) {
    if (i__27316__auto___38116 < len__27315__auto___38115) {
      args38112.push(arguments[i__27316__auto___38116]);
      var G__38117 = i__27316__auto___38116 + 1;
      i__27316__auto___38116 = G__38117;
      continue;
    } else {
    }
    break;
  }
  var G__38114 = args38112.length;
  switch(G__38114) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38112.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__26571__auto__ = 0;
      var y__26572__auto__ = start + len;
      return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__38119 = idx + 1;
          idx = G__38119;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args38120 = [];
  var len__27315__auto___38123 = arguments.length;
  var i__27316__auto___38124 = 0;
  while (true) {
    if (i__27316__auto___38124 < len__27315__auto___38123) {
      args38120.push(arguments[i__27316__auto___38124]);
      var G__38125 = i__27316__auto___38124 + 1;
      i__27316__auto___38124 = G__38125;
      continue;
    } else {
    }
    break;
  }
  var G__38122 = args38120.length;
  switch(G__38122) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38120.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__26578__auto__ = len - 1;
      var y__26579__auto__ = start;
      return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__38127 = idx - 1;
          idx = G__38127;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__38128 = null;
  var G__38128__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38128__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38128 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38128__1.call(this, x);
      case 2:
        return G__38128__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38128.cljs$core$IFn$_invoke$arity$1 = G__38128__1;
  G__38128.cljs$core$IFn$_invoke$arity$2 = G__38128__2;
  return G__38128;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__38129 = null;
  var G__38129__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__38129__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38129 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38129__1.call(this, x);
      case 2:
        return G__38129__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38129.cljs$core$IFn$_invoke$arity$1 = G__38129__1;
  G__38129.cljs$core$IFn$_invoke$arity$2 = G__38129__2;
  return G__38129;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__26571__auto__ = 0;
  var y__26572__auto__ = self__.arr.length - self__.i;
  return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args38130 = [];
  var len__27315__auto___38133 = arguments.length;
  var i__27316__auto___38134 = 0;
  while (true) {
    if (i__27316__auto___38134 < len__27315__auto___38133) {
      args38130.push(arguments[i__27316__auto___38134]);
      var G__38135 = i__27316__auto___38134 + 1;
      i__27316__auto___38134 = G__38135;
      continue;
    } else {
    }
    break;
  }
  var G__38132 = args38130.length;
  switch(G__38132) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38130.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args38137 = [];
  var len__27315__auto___38140 = arguments.length;
  var i__27316__auto___38141 = 0;
  while (true) {
    if (i__27316__auto___38141 < len__27315__auto___38140) {
      args38137.push(arguments[i__27316__auto___38141]);
      var G__38142 = i__27316__auto___38141 + 1;
      i__27316__auto___38141 = G__38142;
      continue;
    } else {
    }
    break;
  }
  var G__38139 = args38137.length;
  switch(G__38139) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38137.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__38146 = null;
  var G__38146__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38146__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38146 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38146__1.call(this, x);
      case 2:
        return G__38146__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38146.cljs$core$IFn$_invoke$arity$1 = G__38146__1;
  G__38146.cljs$core$IFn$_invoke$arity$2 = G__38146__2;
  return G__38146;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__38147 = null;
  var G__38147__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__38147__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38147 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38147__1.call(this, x);
      case 2:
        return G__38147__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38147.cljs$core$IFn$_invoke$arity$1 = G__38147__1;
  G__38147.cljs$core$IFn$_invoke$arity$2 = G__38147__2;
  return G__38147;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__38144 = cljs.core.List.EMPTY;
  var G__38145 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__38144, G__38145) : cljs.core.with_meta.call(null, G__38144, G__38145);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__38148 = sn;
      s = G__38148;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args38149 = [];
  var len__27315__auto___38155 = arguments.length;
  var i__27316__auto___38156 = 0;
  while (true) {
    if (i__27316__auto___38156 < len__27315__auto___38155) {
      args38149.push(arguments[i__27316__auto___38156]);
      var G__38157 = i__27316__auto___38156 + 1;
      i__27316__auto___38156 = G__38157;
      continue;
    } else {
    }
    break;
  }
  var G__38154 = args38149.length;
  switch(G__38154) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38149.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    var x__27074__auto__ = x;
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__38159 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__38160 = cljs.core.first(xs);
      var G__38161 = cljs.core.next(xs);
      coll = G__38159;
      x = G__38160;
      xs = G__38161;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq38150) {
  var G__38151 = cljs.core.first(seq38150);
  var seq38150__$1 = cljs.core.next(seq38150);
  var G__38152 = cljs.core.first(seq38150__$1);
  var seq38150__$2 = cljs.core.next(seq38150__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__38151, G__38152, seq38150__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__38162 = cljs.core.next(s);
      var G__38163 = acc + 1;
      s = G__38162;
      acc = G__38163;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args38168 = [];
  var len__27315__auto___38171 = arguments.length;
  var i__27316__auto___38172 = 0;
  while (true) {
    if (i__27316__auto___38172 < len__27315__auto___38171) {
      args38168.push(arguments[i__27316__auto___38172]);
      var G__38173 = i__27316__auto___38172 + 1;
      i__27316__auto___38172 = G__38173;
      continue;
    } else {
    }
    break;
  }
  var G__38170 = args38168.length;
  switch(G__38170) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38168.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__38175 = cljs.core.next(coll);
            var G__38176 = n - 1;
            coll = G__38175;
            n = G__38176;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__38177 = cljs.core.next(coll);
            var G__38178 = n - 1;
            var G__38179 = not_found;
            coll = G__38177;
            n = G__38178;
            not_found = G__38179;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args38180 = [];
  var len__27315__auto___38187 = arguments.length;
  var i__27316__auto___38188 = 0;
  while (true) {
    if (i__27316__auto___38188 < len__27315__auto___38187) {
      args38180.push(arguments[i__27316__auto___38188]);
      var G__38189 = i__27316__auto___38188 + 1;
      i__27316__auto___38188 = G__38189;
      continue;
    } else {
    }
    break;
  }
  var G__38182 = args38180.length;
  switch(G__38182) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38180.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__38191 = n__$1 - 1;
      var G__38192 = cljs.core.rest(xs);
      n__$1 = G__38191;
      xs = G__38192;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args38193 = [];
  var len__27315__auto___38198 = arguments.length;
  var i__27316__auto___38199 = 0;
  while (true) {
    if (i__27316__auto___38199 < len__27315__auto___38198) {
      args38193.push(arguments[i__27316__auto___38199]);
      var G__38200 = i__27316__auto___38199 + 1;
      i__27316__auto___38199 = G__38200;
      continue;
    } else {
    }
    break;
  }
  var G__38195 = args38193.length;
  switch(G__38195) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38193.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args38202 = [];
  var len__27315__auto___38209 = arguments.length;
  var i__27316__auto___38210 = 0;
  while (true) {
    if (i__27316__auto___38210 < len__27315__auto___38209) {
      args38202.push(arguments[i__27316__auto___38210]);
      var G__38211 = i__27316__auto___38210 + 1;
      i__27316__auto___38210 = G__38211;
      continue;
    } else {
    }
    break;
  }
  var G__38208 = args38202.length;
  switch(G__38208) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38202.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__38213 = ret;
      var G__38214 = cljs.core.first(kvs);
      var G__38215 = cljs.core.second(kvs);
      var G__38216 = cljs.core.nnext(kvs);
      coll = G__38213;
      k = G__38214;
      v = G__38215;
      kvs = G__38216;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq38203) {
  var G__38204 = cljs.core.first(seq38203);
  var seq38203__$1 = cljs.core.next(seq38203);
  var G__38205 = cljs.core.first(seq38203__$1);
  var seq38203__$2 = cljs.core.next(seq38203__$1);
  var G__38206 = cljs.core.first(seq38203__$2);
  var seq38203__$3 = cljs.core.next(seq38203__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__38204, G__38205, G__38206, seq38203__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args38217 = [];
  var len__27315__auto___38223 = arguments.length;
  var i__27316__auto___38224 = 0;
  while (true) {
    if (i__27316__auto___38224 < len__27315__auto___38223) {
      args38217.push(arguments[i__27316__auto___38224]);
      var G__38225 = i__27316__auto___38224 + 1;
      i__27316__auto___38224 = G__38225;
      continue;
    } else {
    }
    break;
  }
  var G__38222 = args38217.length;
  switch(G__38222) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38217.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__38227 = ret;
        var G__38228 = cljs.core.first(ks);
        var G__38229 = cljs.core.next(ks);
        coll = G__38227;
        k = G__38228;
        ks = G__38229;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq38218) {
  var G__38219 = cljs.core.first(seq38218);
  var seq38218__$1 = cljs.core.next(seq38218);
  var G__38220 = cljs.core.first(seq38218__$1);
  var seq38218__$2 = cljs.core.next(seq38218__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__38219, G__38220, seq38218__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__26240__auto__ = goog.isFunction(f);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__38235 = null;
  var G__38235__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__38235__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__38235__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__38235__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__38235__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__38235__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__38235__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__38235__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__38235__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__38235__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__38235__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__38235__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__38235__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__38235__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__38235__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__38235__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__38235__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__38235__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__38235__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__38235__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__38235__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__38235__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__38235 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__38235__1.call(this, self__);
      case 2:
        return G__38235__2.call(this, self__, a);
      case 3:
        return G__38235__3.call(this, self__, a, b);
      case 4:
        return G__38235__4.call(this, self__, a, b, c);
      case 5:
        return G__38235__5.call(this, self__, a, b, c, d);
      case 6:
        return G__38235__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__38235__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__38235__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__38235__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__38235__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__38235__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__38235__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__38235__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__38235__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__38235__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__38235__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__38235__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__38235__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__38235__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__38235__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__38235__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__38235__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38235.cljs$core$IFn$_invoke$arity$1 = G__38235__1;
  G__38235.cljs$core$IFn$_invoke$arity$2 = G__38235__2;
  G__38235.cljs$core$IFn$_invoke$arity$3 = G__38235__3;
  G__38235.cljs$core$IFn$_invoke$arity$4 = G__38235__4;
  G__38235.cljs$core$IFn$_invoke$arity$5 = G__38235__5;
  G__38235.cljs$core$IFn$_invoke$arity$6 = G__38235__6;
  G__38235.cljs$core$IFn$_invoke$arity$7 = G__38235__7;
  G__38235.cljs$core$IFn$_invoke$arity$8 = G__38235__8;
  G__38235.cljs$core$IFn$_invoke$arity$9 = G__38235__9;
  G__38235.cljs$core$IFn$_invoke$arity$10 = G__38235__10;
  G__38235.cljs$core$IFn$_invoke$arity$11 = G__38235__11;
  G__38235.cljs$core$IFn$_invoke$arity$12 = G__38235__12;
  G__38235.cljs$core$IFn$_invoke$arity$13 = G__38235__13;
  G__38235.cljs$core$IFn$_invoke$arity$14 = G__38235__14;
  G__38235.cljs$core$IFn$_invoke$arity$15 = G__38235__15;
  G__38235.cljs$core$IFn$_invoke$arity$16 = G__38235__16;
  G__38235.cljs$core$IFn$_invoke$arity$17 = G__38235__17;
  G__38235.cljs$core$IFn$_invoke$arity$18 = G__38235__18;
  G__38235.cljs$core$IFn$_invoke$arity$19 = G__38235__19;
  G__38235.cljs$core$IFn$_invoke$arity$20 = G__38235__20;
  G__38235.cljs$core$IFn$_invoke$arity$21 = G__38235__21;
  G__38235.cljs$core$IFn$_invoke$arity$22 = G__38235__22;
  return G__38235;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args38234) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args38234)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__26228__auto__ = !(o == null);
    if (and__26228__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__26228__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args38240 = [];
  var len__27315__auto___38246 = arguments.length;
  var i__27316__auto___38247 = 0;
  while (true) {
    if (i__27316__auto___38247 < len__27315__auto___38246) {
      args38240.push(arguments[i__27316__auto___38247]);
      var G__38248 = i__27316__auto___38247 + 1;
      i__27316__auto___38247 = G__38248;
      continue;
    } else {
    }
    break;
  }
  var G__38245 = args38240.length;
  switch(G__38245) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38240.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__38250 = ret;
        var G__38251 = cljs.core.first(ks);
        var G__38252 = cljs.core.next(ks);
        coll = G__38250;
        k = G__38251;
        ks = G__38252;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq38241) {
  var G__38242 = cljs.core.first(seq38241);
  var seq38241__$1 = cljs.core.next(seq38241);
  var G__38243 = cljs.core.first(seq38241__$1);
  var seq38241__$2 = cljs.core.next(seq38241__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__38242, G__38243, seq38241__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args38273 = [];
  var len__27315__auto___38279 = arguments.length;
  var i__27316__auto___38280 = 0;
  while (true) {
    if (i__27316__auto___38280 < len__27315__auto___38279) {
      args38273.push(arguments[i__27316__auto___38280]);
      var G__38281 = i__27316__auto___38280 + 1;
      i__27316__auto___38280 = G__38281;
      continue;
    } else {
    }
    break;
  }
  var G__38276 = args38273.length;
  switch(G__38276) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38273.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__27334__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq38274) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq38274));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__38285_38287 = obj;
  var G__38286_38288 = function(G__38285_38287, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__38285_38287, keys);
  goog.object.forEach(G__38285_38287, G__38286_38288);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__38289 = i__$1 + 1;
      var G__38290 = j__$1 + 1;
      var G__38291 = len__$1 - 1;
      i__$1 = G__38289;
      j__$1 = G__38290;
      len__$1 = G__38291;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__38292 = i__$1 - 1;
      var G__38293 = j__$1 - 1;
      var G__38294 = len__$1 - 1;
      i__$1 = G__38292;
      j__$1 = G__38293;
      len__$1 = G__38294;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__26240__auto__ = cljs.core.fn_QMARK_(f);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0) || x === 0;
  } else {
    if (x instanceof goog.math.Integer) {
      var or__26240__auto__ = cljs.core.not(x.isNegative());
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        return x.isZero();
      }
    } else {
      if (x instanceof goog.math.Long) {
        var or__26240__auto__ = cljs.core.not(x.isNegative());
        if (or__26240__auto__) {
          return or__26240__auto__;
        } else {
          return x.isZero();
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args38305 = [];
  var len__27315__auto___38311 = arguments.length;
  var i__27316__auto___38312 = 0;
  while (true) {
    if (i__27316__auto___38312 < len__27315__auto___38311) {
      args38305.push(arguments[i__27316__auto___38312]);
      var G__38313 = i__27316__auto___38312 + 1;
      i__27316__auto___38312 = G__38313;
      continue;
    } else {
    }
    break;
  }
  var G__38310 = args38305.length;
  switch(G__38310) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38305.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__38315 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__38316 = etc;
          s = G__38315;
          xs = G__38316;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq38306) {
  var G__38307 = cljs.core.first(seq38306);
  var seq38306__$1 = cljs.core.next(seq38306);
  var G__38308 = cljs.core.first(seq38306__$1);
  var seq38306__$2 = cljs.core.next(seq38306__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__38307, G__38308, seq38306__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args38319 = [];
  var len__27315__auto___38322 = arguments.length;
  var i__27316__auto___38323 = 0;
  while (true) {
    if (i__27316__auto___38323 < len__27315__auto___38322) {
      args38319.push(arguments[i__27316__auto___38323]);
      var G__38324 = i__27316__auto___38323 + 1;
      i__27316__auto___38323 = G__38324;
      continue;
    } else {
    }
    break;
  }
  var G__38321 = args38319.length;
  switch(G__38321) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38319.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__38326 = xs;
      var G__38327 = ys;
      var G__38328 = len;
      var G__38329 = n + 1;
      xs = G__38326;
      ys = G__38327;
      len = G__38328;
      n = G__38329;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args38330 = [];
  var len__27315__auto___38335 = arguments.length;
  var i__27316__auto___38336 = 0;
  while (true) {
    if (i__27316__auto___38336 < len__27315__auto___38335) {
      args38330.push(arguments[i__27316__auto___38336]);
      var G__38337 = i__27316__auto___38336 + 1;
      i__27316__auto___38336 = G__38337;
      continue;
    } else {
    }
    break;
  }
  var G__38332 = args38330.length;
  switch(G__38332) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38330.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__38333_38339 = a;
    var G__38334_38340 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__38333_38339, G__38334_38340);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args38341 = [];
  var len__27315__auto___38344 = arguments.length;
  var i__27316__auto___38345 = 0;
  while (true) {
    if (i__27316__auto___38345 < len__27315__auto___38344) {
      args38341.push(arguments[i__27316__auto___38345]);
      var G__38346 = i__27316__auto___38345 + 1;
      i__27316__auto___38345 = G__38346;
      continue;
    } else {
    }
    break;
  }
  var G__38343 = args38341.length;
  switch(G__38343) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38341.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args38348 = [];
  var len__27315__auto___38356 = arguments.length;
  var i__27316__auto___38357 = 0;
  while (true) {
    if (i__27316__auto___38357 < len__27315__auto___38356) {
      args38348.push(arguments[i__27316__auto___38357]);
      var G__38358 = i__27316__auto___38357 + 1;
      i__27316__auto___38357 = G__38358;
      continue;
    } else {
    }
    break;
  }
  var G__38350 = args38348.length;
  switch(G__38350) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38348.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__38351 = f;
    var G__38352 = cljs.core.first(s);
    var G__38353 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__38351, G__38352, G__38353) : cljs.core.reduce.call(null, G__38351, G__38352, G__38353);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__38354 = val__$1;
        var G__38355 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38354, G__38355) : f.call(null, G__38354, G__38355);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__38360 = nval;
        var G__38361 = cljs.core.next(coll__$1);
        val__$1 = G__38360;
        coll__$1 = G__38361;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args38362 = [];
  var len__27315__auto___38367 = arguments.length;
  var i__27316__auto___38368 = 0;
  while (true) {
    if (i__27316__auto___38368 < len__27315__auto___38367) {
      args38362.push(arguments[i__27316__auto___38368]);
      var G__38369 = i__27316__auto___38368 + 1;
      i__27316__auto___38368 = G__38369;
      continue;
    } else {
    }
    break;
  }
  var G__38364 = args38362.length;
  switch(G__38364) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38362.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args38371 = [];
  var len__27315__auto___38374 = arguments.length;
  var i__27316__auto___38375 = 0;
  while (true) {
    if (i__27316__auto___38375 < len__27315__auto___38374) {
      args38371.push(arguments[i__27316__auto___38375]);
      var G__38376 = i__27316__auto___38375 + 1;
      i__27316__auto___38375 = G__38376;
      continue;
    } else {
    }
    break;
  }
  var G__38373 = args38371.length;
  switch(G__38373) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38371.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__38378 = null;
    var G__38378__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__38378__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__38378__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__38378 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__38378__0.call(this);
        case 1:
          return G__38378__1.call(this, x);
        case 2:
          return G__38378__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__38378.cljs$core$IFn$_invoke$arity$0 = G__38378__0;
    G__38378.cljs$core$IFn$_invoke$arity$1 = G__38378__1;
    G__38378.cljs$core$IFn$_invoke$arity$2 = G__38378__2;
    return G__38378;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args38379 = [];
  var len__27315__auto___38382 = arguments.length;
  var i__27316__auto___38383 = 0;
  while (true) {
    if (i__27316__auto___38383 < len__27315__auto___38382) {
      args38379.push(arguments[i__27316__auto___38383]);
      var G__38384 = i__27316__auto___38383 + 1;
      i__27316__auto___38383 = G__38384;
      continue;
    } else {
    }
    break;
  }
  var G__38381 = args38379.length;
  switch(G__38381) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38379.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args38386 = [];
  var len__27315__auto___38392 = arguments.length;
  var i__27316__auto___38393 = 0;
  while (true) {
    if (i__27316__auto___38393 < len__27315__auto___38392) {
      args38386.push(arguments[i__27316__auto___38393]);
      var G__38394 = i__27316__auto___38393 + 1;
      i__27316__auto___38393 = G__38394;
      continue;
    } else {
    }
    break;
  }
  var G__38391 = args38386.length;
  switch(G__38391) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38386.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq38387) {
  var G__38388 = cljs.core.first(seq38387);
  var seq38387__$1 = cljs.core.next(seq38387);
  var G__38389 = cljs.core.first(seq38387__$1);
  var seq38387__$2 = cljs.core.next(seq38387__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__38388, G__38389, seq38387__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args38396 = [];
  var len__27315__auto___38402 = arguments.length;
  var i__27316__auto___38403 = 0;
  while (true) {
    if (i__27316__auto___38403 < len__27315__auto___38402) {
      args38396.push(arguments[i__27316__auto___38403]);
      var G__38404 = i__27316__auto___38403 + 1;
      i__27316__auto___38403 = G__38404;
      continue;
    } else {
    }
    break;
  }
  var G__38401 = args38396.length;
  switch(G__38401) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38396.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq38397) {
  var G__38398 = cljs.core.first(seq38397);
  var seq38397__$1 = cljs.core.next(seq38397);
  var G__38399 = cljs.core.first(seq38397__$1);
  var seq38397__$2 = cljs.core.next(seq38397__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__38398, G__38399, seq38397__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args38406 = [];
  var len__27315__auto___38412 = arguments.length;
  var i__27316__auto___38413 = 0;
  while (true) {
    if (i__27316__auto___38413 < len__27315__auto___38412) {
      args38406.push(arguments[i__27316__auto___38413]);
      var G__38414 = i__27316__auto___38413 + 1;
      i__27316__auto___38413 = G__38414;
      continue;
    } else {
    }
    break;
  }
  var G__38411 = args38406.length;
  switch(G__38411) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38406.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq38407) {
  var G__38408 = cljs.core.first(seq38407);
  var seq38407__$1 = cljs.core.next(seq38407);
  var G__38409 = cljs.core.first(seq38407__$1);
  var seq38407__$2 = cljs.core.next(seq38407__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__38408, G__38409, seq38407__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args38416 = [];
  var len__27315__auto___38422 = arguments.length;
  var i__27316__auto___38423 = 0;
  while (true) {
    if (i__27316__auto___38423 < len__27315__auto___38422) {
      args38416.push(arguments[i__27316__auto___38423]);
      var G__38424 = i__27316__auto___38423 + 1;
      i__27316__auto___38423 = G__38424;
      continue;
    } else {
    }
    break;
  }
  var G__38421 = args38416.length;
  switch(G__38421) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38416.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq38417) {
  var G__38418 = cljs.core.first(seq38417);
  var seq38417__$1 = cljs.core.next(seq38417);
  var G__38419 = cljs.core.first(seq38417__$1);
  var seq38417__$2 = cljs.core.next(seq38417__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__38418, G__38419, seq38417__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args38426 = [];
  var len__27315__auto___38432 = arguments.length;
  var i__27316__auto___38433 = 0;
  while (true) {
    if (i__27316__auto___38433 < len__27315__auto___38432) {
      args38426.push(arguments[i__27316__auto___38433]);
      var G__38434 = i__27316__auto___38433 + 1;
      i__27316__auto___38433 = G__38434;
      continue;
    } else {
    }
    break;
  }
  var G__38431 = args38426.length;
  switch(G__38431) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38426.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__38436 = y;
        var G__38437 = cljs.core.first(more);
        var G__38438 = cljs.core.next(more);
        x = G__38436;
        y = G__38437;
        more = G__38438;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq38427) {
  var G__38428 = cljs.core.first(seq38427);
  var seq38427__$1 = cljs.core.next(seq38427);
  var G__38429 = cljs.core.first(seq38427__$1);
  var seq38427__$2 = cljs.core.next(seq38427__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__38428, G__38429, seq38427__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args38439 = [];
  var len__27315__auto___38445 = arguments.length;
  var i__27316__auto___38446 = 0;
  while (true) {
    if (i__27316__auto___38446 < len__27315__auto___38445) {
      args38439.push(arguments[i__27316__auto___38446]);
      var G__38447 = i__27316__auto___38446 + 1;
      i__27316__auto___38446 = G__38447;
      continue;
    } else {
    }
    break;
  }
  var G__38444 = args38439.length;
  switch(G__38444) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38439.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__38449 = y;
        var G__38450 = cljs.core.first(more);
        var G__38451 = cljs.core.next(more);
        x = G__38449;
        y = G__38450;
        more = G__38451;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq38440) {
  var G__38441 = cljs.core.first(seq38440);
  var seq38440__$1 = cljs.core.next(seq38440);
  var G__38442 = cljs.core.first(seq38440__$1);
  var seq38440__$2 = cljs.core.next(seq38440__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__38441, G__38442, seq38440__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args38452 = [];
  var len__27315__auto___38458 = arguments.length;
  var i__27316__auto___38459 = 0;
  while (true) {
    if (i__27316__auto___38459 < len__27315__auto___38458) {
      args38452.push(arguments[i__27316__auto___38459]);
      var G__38460 = i__27316__auto___38459 + 1;
      i__27316__auto___38459 = G__38460;
      continue;
    } else {
    }
    break;
  }
  var G__38457 = args38452.length;
  switch(G__38457) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38452.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__38462 = y;
        var G__38463 = cljs.core.first(more);
        var G__38464 = cljs.core.next(more);
        x = G__38462;
        y = G__38463;
        more = G__38464;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq38453) {
  var G__38454 = cljs.core.first(seq38453);
  var seq38453__$1 = cljs.core.next(seq38453);
  var G__38455 = cljs.core.first(seq38453__$1);
  var seq38453__$2 = cljs.core.next(seq38453__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__38454, G__38455, seq38453__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args38465 = [];
  var len__27315__auto___38471 = arguments.length;
  var i__27316__auto___38472 = 0;
  while (true) {
    if (i__27316__auto___38472 < len__27315__auto___38471) {
      args38465.push(arguments[i__27316__auto___38472]);
      var G__38473 = i__27316__auto___38472 + 1;
      i__27316__auto___38472 = G__38473;
      continue;
    } else {
    }
    break;
  }
  var G__38470 = args38465.length;
  switch(G__38470) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38465.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__38475 = y;
        var G__38476 = cljs.core.first(more);
        var G__38477 = cljs.core.next(more);
        x = G__38475;
        y = G__38476;
        more = G__38477;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq38466) {
  var G__38467 = cljs.core.first(seq38466);
  var seq38466__$1 = cljs.core.next(seq38466);
  var G__38468 = cljs.core.first(seq38466__$1);
  var seq38466__$2 = cljs.core.next(seq38466__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__38467, G__38468, seq38466__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args38478 = [];
  var len__27315__auto___38484 = arguments.length;
  var i__27316__auto___38485 = 0;
  while (true) {
    if (i__27316__auto___38485 < len__27315__auto___38484) {
      args38478.push(arguments[i__27316__auto___38485]);
      var G__38486 = i__27316__auto___38485 + 1;
      i__27316__auto___38485 = G__38486;
      continue;
    } else {
    }
    break;
  }
  var G__38483 = args38478.length;
  switch(G__38483) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38478.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__26571__auto__ = x;
  var y__26572__auto__ = y;
  return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__26571__auto__ = x;
    var y__26572__auto__ = y;
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq38479) {
  var G__38480 = cljs.core.first(seq38479);
  var seq38479__$1 = cljs.core.next(seq38479);
  var G__38481 = cljs.core.first(seq38479__$1);
  var seq38479__$2 = cljs.core.next(seq38479__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__38480, G__38481, seq38479__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args38488 = [];
  var len__27315__auto___38494 = arguments.length;
  var i__27316__auto___38495 = 0;
  while (true) {
    if (i__27316__auto___38495 < len__27315__auto___38494) {
      args38488.push(arguments[i__27316__auto___38495]);
      var G__38496 = i__27316__auto___38495 + 1;
      i__27316__auto___38495 = G__38496;
      continue;
    } else {
    }
    break;
  }
  var G__38493 = args38488.length;
  switch(G__38493) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38488.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__26578__auto__ = x;
  var y__26579__auto__ = y;
  return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__26578__auto__ = x;
    var y__26579__auto__ = y;
    return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq38489) {
  var G__38490 = cljs.core.first(seq38489);
  var seq38489__$1 = cljs.core.next(seq38489);
  var G__38491 = cljs.core.first(seq38489__$1);
  var seq38489__$2 = cljs.core.next(seq38489__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__38490, G__38491, seq38489__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args38498 = [];
  var len__27315__auto___38504 = arguments.length;
  var i__27316__auto___38505 = 0;
  while (true) {
    if (i__27316__auto___38505 < len__27315__auto___38504) {
      args38498.push(arguments[i__27316__auto___38505]);
      var G__38506 = i__27316__auto___38505 + 1;
      i__27316__auto___38505 = G__38506;
      continue;
    } else {
    }
    break;
  }
  var G__38503 = args38498.length;
  switch(G__38503) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38498.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq38499) {
  var G__38500 = cljs.core.first(seq38499);
  var seq38499__$1 = cljs.core.next(seq38499);
  var G__38501 = cljs.core.first(seq38499__$1);
  var seq38499__$2 = cljs.core.next(seq38499__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__38500, G__38501, seq38499__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args38508 = [];
  var len__27315__auto___38514 = arguments.length;
  var i__27316__auto___38515 = 0;
  while (true) {
    if (i__27316__auto___38515 < len__27315__auto___38514) {
      args38508.push(arguments[i__27316__auto___38515]);
      var G__38516 = i__27316__auto___38515 + 1;
      i__27316__auto___38515 = G__38516;
      continue;
    } else {
    }
    break;
  }
  var G__38513 = args38508.length;
  switch(G__38513) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38508.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq38509) {
  var G__38510 = cljs.core.first(seq38509);
  var seq38509__$1 = cljs.core.next(seq38509);
  var G__38511 = cljs.core.first(seq38509__$1);
  var seq38509__$2 = cljs.core.next(seq38509__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__38510, G__38511, seq38509__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args38518 = [];
  var len__27315__auto___38524 = arguments.length;
  var i__27316__auto___38525 = 0;
  while (true) {
    if (i__27316__auto___38525 < len__27315__auto___38524) {
      args38518.push(arguments[i__27316__auto___38525]);
      var G__38526 = i__27316__auto___38525 + 1;
      i__27316__auto___38525 = G__38526;
      continue;
    } else {
    }
    break;
  }
  var G__38523 = args38518.length;
  switch(G__38523) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38518.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq38519) {
  var G__38520 = cljs.core.first(seq38519);
  var seq38519__$1 = cljs.core.next(seq38519);
  var G__38521 = cljs.core.first(seq38519__$1);
  var seq38519__$2 = cljs.core.next(seq38519__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__38520, G__38521, seq38519__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args38528 = [];
  var len__27315__auto___38534 = arguments.length;
  var i__27316__auto___38535 = 0;
  while (true) {
    if (i__27316__auto___38535 < len__27315__auto___38534) {
      args38528.push(arguments[i__27316__auto___38535]);
      var G__38536 = i__27316__auto___38535 + 1;
      i__27316__auto___38535 = G__38536;
      continue;
    } else {
    }
    break;
  }
  var G__38533 = args38528.length;
  switch(G__38533) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38528.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq38529) {
  var G__38530 = cljs.core.first(seq38529);
  var seq38529__$1 = cljs.core.next(seq38529);
  var G__38531 = cljs.core.first(seq38529__$1);
  var seq38529__$2 = cljs.core.next(seq38529__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__38530, G__38531, seq38529__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args38538 = [];
  var len__27315__auto___38544 = arguments.length;
  var i__27316__auto___38545 = 0;
  while (true) {
    if (i__27316__auto___38545 < len__27315__auto___38544) {
      args38538.push(arguments[i__27316__auto___38545]);
      var G__38546 = i__27316__auto___38545 + 1;
      i__27316__auto___38545 = G__38546;
      continue;
    } else {
    }
    break;
  }
  var G__38543 = args38538.length;
  switch(G__38543) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38538.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq38539) {
  var G__38540 = cljs.core.first(seq38539);
  var seq38539__$1 = cljs.core.next(seq38539);
  var G__38541 = cljs.core.first(seq38539__$1);
  var seq38539__$2 = cljs.core.next(seq38539__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__38540, G__38541, seq38539__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args38548 = [];
  var len__27315__auto___38554 = arguments.length;
  var i__27316__auto___38555 = 0;
  while (true) {
    if (i__27316__auto___38555 < len__27315__auto___38554) {
      args38548.push(arguments[i__27316__auto___38555]);
      var G__38556 = i__27316__auto___38555 + 1;
      i__27316__auto___38555 = G__38556;
      continue;
    } else {
    }
    break;
  }
  var G__38553 = args38548.length;
  switch(G__38553) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38548.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq38549) {
  var G__38550 = cljs.core.first(seq38549);
  var seq38549__$1 = cljs.core.next(seq38549);
  var G__38551 = cljs.core.first(seq38549__$1);
  var seq38549__$2 = cljs.core.next(seq38549__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__38550, G__38551, seq38549__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args38558 = [];
  var len__27315__auto___38564 = arguments.length;
  var i__27316__auto___38565 = 0;
  while (true) {
    if (i__27316__auto___38565 < len__27315__auto___38564) {
      args38558.push(arguments[i__27316__auto___38565]);
      var G__38566 = i__27316__auto___38565 + 1;
      i__27316__auto___38565 = G__38566;
      continue;
    } else {
    }
    break;
  }
  var G__38563 = args38558.length;
  switch(G__38563) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38558.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq38559) {
  var G__38560 = cljs.core.first(seq38559);
  var seq38559__$1 = cljs.core.next(seq38559);
  var G__38561 = cljs.core.first(seq38559__$1);
  var seq38559__$2 = cljs.core.next(seq38559__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__38560, G__38561, seq38559__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args38568 = [];
  var len__27315__auto___38574 = arguments.length;
  var i__27316__auto___38575 = 0;
  while (true) {
    if (i__27316__auto___38575 < len__27315__auto___38574) {
      args38568.push(arguments[i__27316__auto___38575]);
      var G__38576 = i__27316__auto___38575 + 1;
      i__27316__auto___38575 = G__38576;
      continue;
    } else {
    }
    break;
  }
  var G__38573 = args38568.length;
  switch(G__38573) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38568.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq38569) {
  var G__38570 = cljs.core.first(seq38569);
  var seq38569__$1 = cljs.core.next(seq38569);
  var G__38571 = cljs.core.first(seq38569__$1);
  var seq38569__$2 = cljs.core.next(seq38569__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__38570, G__38571, seq38569__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args38578 = [];
  var len__27315__auto___38584 = arguments.length;
  var i__27316__auto___38585 = 0;
  while (true) {
    if (i__27316__auto___38585 < len__27315__auto___38584) {
      args38578.push(arguments[i__27316__auto___38585]);
      var G__38586 = i__27316__auto___38585 + 1;
      i__27316__auto___38585 = G__38586;
      continue;
    } else {
    }
    break;
  }
  var G__38583 = args38578.length;
  switch(G__38583) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38578.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq38579) {
  var G__38580 = cljs.core.first(seq38579);
  var seq38579__$1 = cljs.core.next(seq38579);
  var G__38581 = cljs.core.first(seq38579__$1);
  var seq38579__$2 = cljs.core.next(seq38579__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__38580, G__38581, seq38579__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args38588 = [];
  var len__27315__auto___38594 = arguments.length;
  var i__27316__auto___38595 = 0;
  while (true) {
    if (i__27316__auto___38595 < len__27315__auto___38594) {
      args38588.push(arguments[i__27316__auto___38595]);
      var G__38596 = i__27316__auto___38595 + 1;
      i__27316__auto___38595 = G__38596;
      continue;
    } else {
    }
    break;
  }
  var G__38593 = args38588.length;
  switch(G__38593) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38588.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq38589) {
  var G__38590 = cljs.core.first(seq38589);
  var seq38589__$1 = cljs.core.next(seq38589);
  var G__38591 = cljs.core.first(seq38589__$1);
  var seq38589__$2 = cljs.core.next(seq38589__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__38590, G__38591, seq38589__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args38598 = [];
  var len__27315__auto___38604 = arguments.length;
  var i__27316__auto___38605 = 0;
  while (true) {
    if (i__27316__auto___38605 < len__27315__auto___38604) {
      args38598.push(arguments[i__27316__auto___38605]);
      var G__38606 = i__27316__auto___38605 + 1;
      i__27316__auto___38605 = G__38606;
      continue;
    } else {
    }
    break;
  }
  var G__38603 = args38598.length;
  switch(G__38603) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38598.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq38599) {
  var G__38600 = cljs.core.first(seq38599);
  var seq38599__$1 = cljs.core.next(seq38599);
  var G__38601 = cljs.core.first(seq38599__$1);
  var seq38599__$2 = cljs.core.next(seq38599__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__38600, G__38601, seq38599__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args38608 = [];
  var len__27315__auto___38614 = arguments.length;
  var i__27316__auto___38615 = 0;
  while (true) {
    if (i__27316__auto___38615 < len__27315__auto___38614) {
      args38608.push(arguments[i__27316__auto___38615]);
      var G__38616 = i__27316__auto___38615 + 1;
      i__27316__auto___38615 = G__38616;
      continue;
    } else {
    }
    break;
  }
  var G__38613 = args38608.length;
  switch(G__38613) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38608.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__38618 = y;
        var G__38619 = cljs.core.first(more);
        var G__38620 = cljs.core.next(more);
        x = G__38618;
        y = G__38619;
        more = G__38620;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq38609) {
  var G__38610 = cljs.core.first(seq38609);
  var seq38609__$1 = cljs.core.next(seq38609);
  var G__38611 = cljs.core.first(seq38609__$1);
  var seq38609__$2 = cljs.core.next(seq38609__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__38610, G__38611, seq38609__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__38621 = n__$1 - 1;
      var G__38622 = cljs.core.next(xs);
      n__$1 = G__38621;
      xs = G__38622;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args38623 = [];
  var len__27315__auto___38628 = arguments.length;
  var i__27316__auto___38629 = 0;
  while (true) {
    if (i__27316__auto___38629 < len__27315__auto___38628) {
      args38623.push(arguments[i__27316__auto___38629]);
      var G__38630 = i__27316__auto___38629 + 1;
      i__27316__auto___38629 = G__38630;
      continue;
    } else {
    }
    break;
  }
  var G__38627 = args38623.length;
  switch(G__38627) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38623.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__38632 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__38633 = cljs.core.next(more);
      sb = G__38632;
      more = G__38633;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq38624) {
  var G__38625 = cljs.core.first(seq38624);
  var seq38624__$1 = cljs.core.next(seq38624);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__38625, seq38624__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args38634 = [];
  var len__27315__auto___38637 = arguments.length;
  var i__27316__auto___38638 = 0;
  while (true) {
    if (i__27316__auto___38638 < len__27315__auto___38637) {
      args38634.push(arguments[i__27316__auto___38638]);
      var G__38639 = i__27316__auto___38638 + 1;
      i__27316__auto___38638 = G__38639;
      continue;
    } else {
    }
    break;
  }
  var G__38636 = args38634.length;
  switch(G__38636) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38634.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__38641 = cljs.core.next(xs);
            var G__38642 = cljs.core.next(ys);
            xs = G__38641;
            ys = G__38642;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__38643 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__38644 = cljs.core.next(s);
        res = G__38643;
        s = G__38644;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__38645 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__38646 = cljs.core.next(s);
      h = G__38645;
      s = G__38646;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__38647 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__38648 = cljs.core.next(s__$1);
      h = G__38647;
      s__$1 = G__38648;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__38659_38669 = cljs.core.seq(fn_map);
  var chunk__38660_38670 = null;
  var count__38661_38671 = 0;
  var i__38662_38672 = 0;
  while (true) {
    if (i__38662_38672 < count__38661_38671) {
      var vec__38663_38673 = chunk__38660_38670.cljs$core$IIndexed$_nth$arity$2(null, i__38662_38672);
      var key_name_38674 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38663_38673, 0, null);
      var f_38675 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38663_38673, 1, null);
      var str_name_38676 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_38674) : cljs.core.name.call(null, key_name_38674);
      obj[str_name_38676] = f_38675;
      var G__38677 = seq__38659_38669;
      var G__38678 = chunk__38660_38670;
      var G__38679 = count__38661_38671;
      var G__38680 = i__38662_38672 + 1;
      seq__38659_38669 = G__38677;
      chunk__38660_38670 = G__38678;
      count__38661_38671 = G__38679;
      i__38662_38672 = G__38680;
      continue;
    } else {
      var temp__4657__auto___38681 = cljs.core.seq(seq__38659_38669);
      if (temp__4657__auto___38681) {
        var seq__38659_38682__$1 = temp__4657__auto___38681;
        if (cljs.core.chunked_seq_QMARK_(seq__38659_38682__$1)) {
          var c__27051__auto___38683 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__38659_38682__$1) : cljs.core.chunk_first.call(null, seq__38659_38682__$1);
          var G__38684 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__38659_38682__$1) : cljs.core.chunk_rest.call(null, seq__38659_38682__$1);
          var G__38685 = c__27051__auto___38683;
          var G__38686 = cljs.core.count(c__27051__auto___38683);
          var G__38687 = 0;
          seq__38659_38669 = G__38684;
          chunk__38660_38670 = G__38685;
          count__38661_38671 = G__38686;
          i__38662_38672 = G__38687;
          continue;
        } else {
          var vec__38666_38688 = cljs.core.first(seq__38659_38682__$1);
          var key_name_38689 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38666_38688, 0, null);
          var f_38690 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38666_38688, 1, null);
          var str_name_38691 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_38689) : cljs.core.name.call(null, key_name_38689);
          obj[str_name_38691] = f_38690;
          var G__38692 = cljs.core.next(seq__38659_38682__$1);
          var G__38693 = null;
          var G__38694 = 0;
          var G__38695 = 0;
          seq__38659_38669 = G__38692;
          chunk__38660_38670 = G__38693;
          count__38661_38671 = G__38694;
          i__38662_38672 = G__38695;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__38696 = null;
  var G__38696__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38696__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38696 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38696__1.call(this, x);
      case 2:
        return G__38696__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38696.cljs$core$IFn$_invoke$arity$1 = G__38696__1;
  G__38696.cljs$core$IFn$_invoke$arity$2 = G__38696__2;
  return G__38696;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__38697 = null;
  var G__38697__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__38697__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38697 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38697__1.call(this, x);
      case 2:
        return G__38697__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38697.cljs$core$IFn$_invoke$arity$1 = G__38697__1;
  G__38697.cljs$core$IFn$_invoke$arity$2 = G__38697__2;
  return G__38697;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__38700 = null;
  var G__38700__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38700__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38700 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38700__1.call(this, x);
      case 2:
        return G__38700__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38700.cljs$core$IFn$_invoke$arity$1 = G__38700__1;
  G__38700.cljs$core$IFn$_invoke$arity$2 = G__38700__2;
  return G__38700;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__38701 = null;
  var G__38701__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__38701__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38701 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38701__1.call(this, x);
      case 2:
        return G__38701__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38701.cljs$core$IFn$_invoke$arity$1 = G__38701__1;
  G__38701.cljs$core$IFn$_invoke$arity$2 = G__38701__2;
  return G__38701;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___38705 = arguments.length;
  var i__27316__auto___38706 = 0;
  while (true) {
    if (i__27316__auto___38706 < len__27315__auto___38705) {
      args__27322__auto__.push(arguments[i__27316__auto___38706]);
      var G__38707 = i__27316__auto___38706 + 1;
      i__27316__auto___38706 = G__38707;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__38708 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__38708;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__38709 = i - 1;
      var G__38710 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__38709;
      r = G__38710;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq38704) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq38704));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__38711 = null;
  var G__38711__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38711__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38711 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38711__1.call(this, x);
      case 2:
        return G__38711__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38711.cljs$core$IFn$_invoke$arity$1 = G__38711__1;
  G__38711.cljs$core$IFn$_invoke$arity$2 = G__38711__2;
  return G__38711;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__38712 = null;
  var G__38712__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__38712__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38712 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38712__1.call(this, x);
      case 2:
        return G__38712__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38712.cljs$core$IFn$_invoke$arity$1 = G__38712__1;
  G__38712.cljs$core$IFn$_invoke$arity$2 = G__38712__2;
  return G__38712;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__26240__auto__ = coll == null;
    if (or__26240__auto__) {
      return or__26240__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = cljs.core.not(a.ns);
      if (and__26228__auto__) {
        return b.ns;
      } else {
        return and__26228__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__38723 = a.ns;
            var G__38724 = b.ns;
            return goog.array.defaultCompare(G__38723, G__38724);
          }();
          if (0 === nsc) {
            var G__38725 = a.name;
            var G__38726 = b.name;
            return goog.array.defaultCompare(G__38725, G__38726);
          } else {
            return nsc;
          }
        }
      } else {
        var G__38727 = a.name;
        var G__38728 = b.name;
        return goog.array.defaultCompare(G__38727, G__38728);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__38730 = null;
  var G__38730__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__38730__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__38730 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__38730__2.call(this, self__, coll);
      case 3:
        return G__38730__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38730.cljs$core$IFn$_invoke$arity$2 = G__38730__2;
  G__38730.cljs$core$IFn$_invoke$arity$3 = G__38730__3;
  return G__38730;
}();
cljs.core.Keyword.prototype.apply = function(self__, args38729) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args38729)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__26675__auto__ = self__._hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  var and__26228__auto__ = cljs.core.ident_QMARK_(x);
  if (and__26228__auto__) {
    var and__26228__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__26228__auto____$1)) {
      return true;
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  var and__26228__auto__ = x instanceof cljs.core.Symbol;
  if (and__26228__auto__) {
    var and__26228__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__26228__auto____$1)) {
      return true;
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  var and__26228__auto__ = x instanceof cljs.core.Keyword;
  if (and__26228__auto__) {
    var and__26228__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__26228__auto____$1)) {
      return true;
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args38733 = [];
  var len__27315__auto___38736 = arguments.length;
  var i__27316__auto___38737 = 0;
  while (true) {
    if (i__27316__auto___38737 < len__27315__auto___38736) {
      args38733.push(arguments[i__27316__auto___38737]);
      var G__38738 = i__27316__auto___38737 + 1;
      i__27316__auto___38737 = G__38738;
      continue;
    } else {
    }
    break;
  }
  var G__38735 = args38733.length;
  switch(G__38735) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38733.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__38740 = null;
  var G__38740__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38740__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38740 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38740__1.call(this, x);
      case 2:
        return G__38740__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38740.cljs$core$IFn$_invoke$arity$1 = G__38740__1;
  G__38740.cljs$core$IFn$_invoke$arity$2 = G__38740__2;
  return G__38740;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__38741 = null;
  var G__38741__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__38741__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38741 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38741__1.call(this, x);
      case 2:
        return G__38741__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38741.cljs$core$IFn$_invoke$arity$1 = G__38741__1;
  G__38741.cljs$core$IFn$_invoke$arity$2 = G__38741__2;
  return G__38741;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__38742 = ls.sval();
        ls = G__38742;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args38743 = [];
  var len__27315__auto___38746 = arguments.length;
  var i__27316__auto___38747 = 0;
  while (true) {
    if (i__27316__auto___38747 < len__27315__auto___38746) {
      args38743.push(arguments[i__27316__auto___38747]);
      var G__38748 = i__27316__auto___38747 + 1;
      i__27316__auto___38747 = G__38748;
      continue;
    } else {
    }
    break;
  }
  var G__38745 = args38743.length;
  switch(G__38745) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38743.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__38750 = null;
  var G__38750__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38750__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38750 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38750__1.call(this, x);
      case 2:
        return G__38750__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38750.cljs$core$IFn$_invoke$arity$1 = G__38750__1;
  G__38750.cljs$core$IFn$_invoke$arity$2 = G__38750__2;
  return G__38750;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__38751 = null;
  var G__38751__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__38751__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38751 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38751__1.call(this, x);
      case 2:
        return G__38751__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38751.cljs$core$IFn$_invoke$arity$1 = G__38751__1;
  G__38751.cljs$core$IFn$_invoke$arity$2 = G__38751__2;
  return G__38751;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__38754 = cljs.core.next(s__$1);
      s__$1 = G__38754;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_38755 = 0;
  var xs_38756 = cljs.core.seq(coll);
  while (true) {
    if (xs_38756) {
      ret[i_38755] = cljs.core.to_array(cljs.core.first(xs_38756));
      var G__38757 = i_38755 + 1;
      var G__38758 = cljs.core.next(xs_38756);
      i_38755 = G__38757;
      xs_38756 = G__38758;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args38759 = [];
  var len__27315__auto___38762 = arguments.length;
  var i__27316__auto___38763 = 0;
  while (true) {
    if (i__27316__auto___38763 < len__27315__auto___38762) {
      args38759.push(arguments[i__27316__auto___38763]);
      var G__38764 = i__27316__auto___38763 + 1;
      i__27316__auto___38763 = G__38764;
      continue;
    } else {
    }
    break;
  }
  var G__38761 = args38759.length;
  switch(G__38761) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38759.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__38766 = i + 1;
        var G__38767 = cljs.core.next(s__$1);
        i = G__38766;
        s__$1 = G__38767;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___38768 = size;
    var i_38769 = 0;
    while (true) {
      if (i_38769 < n__27155__auto___38768) {
        a[i_38769] = init_val_or_seq;
        var G__38770 = i_38769 + 1;
        i_38769 = G__38770;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args38771 = [];
  var len__27315__auto___38774 = arguments.length;
  var i__27316__auto___38775 = 0;
  while (true) {
    if (i__27316__auto___38775 < len__27315__auto___38774) {
      args38771.push(arguments[i__27316__auto___38775]);
      var G__38776 = i__27316__auto___38775 + 1;
      i__27316__auto___38775 = G__38776;
      continue;
    } else {
    }
    break;
  }
  var G__38773 = args38771.length;
  switch(G__38773) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38771.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__38778 = i + 1;
        var G__38779 = cljs.core.next(s__$1);
        i = G__38778;
        s__$1 = G__38779;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___38780 = size;
    var i_38781 = 0;
    while (true) {
      if (i_38781 < n__27155__auto___38780) {
        a[i_38781] = init_val_or_seq;
        var G__38782 = i_38781 + 1;
        i_38781 = G__38782;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args38783 = [];
  var len__27315__auto___38786 = arguments.length;
  var i__27316__auto___38787 = 0;
  while (true) {
    if (i__27316__auto___38787 < len__27315__auto___38786) {
      args38783.push(arguments[i__27316__auto___38787]);
      var G__38788 = i__27316__auto___38787 + 1;
      i__27316__auto___38787 = G__38788;
      continue;
    } else {
    }
    break;
  }
  var G__38785 = args38783.length;
  switch(G__38785) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38783.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__38790 = i + 1;
        var G__38791 = cljs.core.next(s__$1);
        i = G__38790;
        s__$1 = G__38791;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___38792 = size;
    var i_38793 = 0;
    while (true) {
      if (i_38793 < n__27155__auto___38792) {
        a[i_38793] = init_val_or_seq;
        var G__38794 = i_38793 + 1;
        i_38793 = G__38794;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args38795 = [];
  var len__27315__auto___38798 = arguments.length;
  var i__27316__auto___38799 = 0;
  while (true) {
    if (i__27316__auto___38799 < len__27315__auto___38798) {
      args38795.push(arguments[i__27316__auto___38799]);
      var G__38800 = i__27316__auto___38799 + 1;
      i__27316__auto___38799 = G__38800;
      continue;
    } else {
    }
    break;
  }
  var G__38797 = args38795.length;
  switch(G__38797) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38795.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__38802 = i + 1;
        var G__38803 = cljs.core.next(s__$1);
        i = G__38802;
        s__$1 = G__38803;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__27155__auto___38804 = size;
    var i_38805 = 0;
    while (true) {
      if (i_38805 < n__27155__auto___38804) {
        a[i_38805] = init_val_or_seq;
        var G__38806 = i_38805 + 1;
        i_38805 = G__38806;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__38807 = i + 1;
        var G__38808 = cljs.core.next(s);
        i = G__38807;
        s = G__38808;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args38810 = [];
  var len__27315__auto___38822 = arguments.length;
  var i__27316__auto___38823 = 0;
  while (true) {
    if (i__27316__auto___38823 < len__27315__auto___38822) {
      args38810.push(arguments[i__27316__auto___38823]);
      var G__38824 = i__27316__auto___38823 + 1;
      i__27316__auto___38823 = G__38824;
      continue;
    } else {
    }
    break;
  }
  var G__38815 = args38810.length;
  switch(G__38815) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38810.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq38811) {
  var G__38812 = cljs.core.first(seq38811);
  var seq38811__$1 = cljs.core.next(seq38811);
  var G__38813 = cljs.core.first(seq38811__$1);
  var seq38811__$2 = cljs.core.next(seq38811__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__38812, G__38813, seq38811__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args38826 = [];
  var len__27315__auto___38834 = arguments.length;
  var i__27316__auto___38835 = 0;
  while (true) {
    if (i__27316__auto___38835 < len__27315__auto___38834) {
      args38826.push(arguments[i__27316__auto___38835]);
      var G__38836 = i__27316__auto___38835 + 1;
      i__27316__auto___38835 = G__38836;
      continue;
    } else {
    }
    break;
  }
  var G__38833 = args38826.length;
  switch(G__38833) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38826.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq38827) {
  var G__38828 = cljs.core.first(seq38827);
  var seq38827__$1 = cljs.core.next(seq38827);
  var G__38829 = cljs.core.first(seq38827__$1);
  var seq38827__$2 = cljs.core.next(seq38827__$1);
  var G__38830 = cljs.core.first(seq38827__$2);
  var seq38827__$3 = cljs.core.next(seq38827__$2);
  var G__38831 = cljs.core.first(seq38827__$3);
  var seq38827__$4 = cljs.core.next(seq38827__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__38828, G__38829, G__38830, G__38831, seq38827__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args38838 = [];
  var len__27315__auto___38844 = arguments.length;
  var i__27316__auto___38845 = 0;
  while (true) {
    if (i__27316__auto___38845 < len__27315__auto___38844) {
      args38838.push(arguments[i__27316__auto___38845]);
      var G__38846 = i__27316__auto___38845 + 1;
      i__27316__auto___38845 = G__38846;
      continue;
    } else {
    }
    break;
  }
  var G__38843 = args38838.length;
  switch(G__38843) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38838.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__38848 = ntcoll;
      var G__38849 = cljs.core.first(vals);
      var G__38850 = cljs.core.next(vals);
      tcoll = G__38848;
      val = G__38849;
      vals = G__38850;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq38839) {
  var G__38840 = cljs.core.first(seq38839);
  var seq38839__$1 = cljs.core.next(seq38839);
  var G__38841 = cljs.core.first(seq38839__$1);
  var seq38839__$2 = cljs.core.next(seq38839__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__38840, G__38841, seq38839__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args38851 = [];
  var len__27315__auto___38858 = arguments.length;
  var i__27316__auto___38859 = 0;
  while (true) {
    if (i__27316__auto___38859 < len__27315__auto___38858) {
      args38851.push(arguments[i__27316__auto___38859]);
      var G__38860 = i__27316__auto___38859 + 1;
      i__27316__auto___38859 = G__38860;
      continue;
    } else {
    }
    break;
  }
  var G__38857 = args38851.length;
  switch(G__38857) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38851.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__38862 = ntcoll;
      var G__38863 = cljs.core.first(kvs);
      var G__38864 = cljs.core.second(kvs);
      var G__38865 = cljs.core.nnext(kvs);
      tcoll = G__38862;
      key = G__38863;
      val = G__38864;
      kvs = G__38865;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq38852) {
  var G__38853 = cljs.core.first(seq38852);
  var seq38852__$1 = cljs.core.next(seq38852);
  var G__38854 = cljs.core.first(seq38852__$1);
  var seq38852__$2 = cljs.core.next(seq38852__$1);
  var G__38855 = cljs.core.first(seq38852__$2);
  var seq38852__$3 = cljs.core.next(seq38852__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__38853, G__38854, G__38855, seq38852__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args38866 = [];
  var len__27315__auto___38872 = arguments.length;
  var i__27316__auto___38873 = 0;
  while (true) {
    if (i__27316__auto___38873 < len__27315__auto___38872) {
      args38866.push(arguments[i__27316__auto___38873]);
      var G__38874 = i__27316__auto___38873 + 1;
      i__27316__auto___38873 = G__38874;
      continue;
    } else {
    }
    break;
  }
  var G__38871 = args38866.length;
  switch(G__38871) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38866.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__38876 = ntcoll;
      var G__38877 = cljs.core.first(ks);
      var G__38878 = cljs.core.next(ks);
      tcoll = G__38876;
      key = G__38877;
      ks = G__38878;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq38867) {
  var G__38868 = cljs.core.first(seq38867);
  var seq38867__$1 = cljs.core.next(seq38867);
  var G__38869 = cljs.core.first(seq38867__$1);
  var seq38867__$2 = cljs.core.next(seq38867__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__38868, G__38869, seq38867__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args38879 = [];
  var len__27315__auto___38885 = arguments.length;
  var i__27316__auto___38886 = 0;
  while (true) {
    if (i__27316__auto___38886 < len__27315__auto___38885) {
      args38879.push(arguments[i__27316__auto___38886]);
      var G__38887 = i__27316__auto___38886 + 1;
      i__27316__auto___38886 = G__38887;
      continue;
    } else {
    }
    break;
  }
  var G__38884 = args38879.length;
  switch(G__38884) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38879.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__38889 = ntcoll;
      var G__38890 = cljs.core.first(vals);
      var G__38891 = cljs.core.next(vals);
      tcoll = G__38889;
      val = G__38890;
      vals = G__38891;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq38880) {
  var G__38881 = cljs.core.first(seq38880);
  var seq38880__$1 = cljs.core.next(seq38880);
  var G__38882 = cljs.core.first(seq38880__$1);
  var seq38880__$2 = cljs.core.next(seq38880__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__38881, G__38882, seq38880__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a27199 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a27199);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a27199) : f.call(null, a27199);
      }
    } else {
      var b27200 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a27199, b27200);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a27199, b27200) : f.call(null, a27199, b27200);
        }
      } else {
        var c27201 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a27199, b27200, c27201);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a27199, b27200, c27201) : f.call(null, a27199, b27200, c27201);
          }
        } else {
          var d27202 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a27199, b27200, c27201, d27202);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a27199, b27200, c27201, d27202) : f.call(null, a27199, b27200, c27201, d27202);
            }
          } else {
            var e27203 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a27199, b27200, c27201, d27202, e27203);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a27199, b27200, c27201, d27202, e27203) : f.call(null, a27199, b27200, c27201, d27202, e27203);
              }
            } else {
              var f27204 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a27199, b27200, c27201, d27202, e27203, f27204);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a27199, b27200, c27201, d27202, e27203, f27204) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204);
                }
              } else {
                var g27205 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a27199, b27200, c27201, d27202, e27203, f27204, g27205);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a27199, b27200, c27201, d27202, e27203, f27204, g27205) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205);
                  }
                } else {
                  var h27206 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206);
                    }
                  } else {
                    var i27207 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207);
                      }
                    } else {
                      var j27208 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208);
                        }
                      } else {
                        var k27209 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209);
                          }
                        } else {
                          var l27210 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210);
                            }
                          } else {
                            var m27211 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211);
                              }
                            } else {
                              var n27212 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212);
                                }
                              } else {
                                var o27213 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213);
                                  }
                                } else {
                                  var p27214 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214);
                                    }
                                  } else {
                                    var q27215 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215);
                                      }
                                    } else {
                                      var r27216 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216);
                                        }
                                      } else {
                                        var s27217 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217);
                                          }
                                        } else {
                                          var t27218 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217, t27218);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217, t27218) : f.call(null, a27199, b27200, c27201, d27202, e27203, f27204, g27205, h27206, i27207, j27208, k27209, l27210, m27211, n27212, o27213, p27214, q27215, r27216, s27217, t27218);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args38892 = [];
  var len__27315__auto___38901 = arguments.length;
  var i__27316__auto___38902 = 0;
  while (true) {
    if (i__27316__auto___38902 < len__27315__auto___38901) {
      args38892.push(arguments[i__27316__auto___38902]);
      var G__38903 = i__27316__auto___38902 + 1;
      i__27316__auto___38902 = G__38903;
      continue;
    } else {
    }
    break;
  }
  var G__38900 = args38892.length;
  switch(G__38900) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38892.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__27334__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq38893) {
  var G__38894 = cljs.core.first(seq38893);
  var seq38893__$1 = cljs.core.next(seq38893);
  var G__38895 = cljs.core.first(seq38893__$1);
  var seq38893__$2 = cljs.core.next(seq38893__$1);
  var G__38896 = cljs.core.first(seq38893__$2);
  var seq38893__$3 = cljs.core.next(seq38893__$2);
  var G__38897 = cljs.core.first(seq38893__$3);
  var seq38893__$4 = cljs.core.next(seq38893__$3);
  var G__38898 = cljs.core.first(seq38893__$4);
  var seq38893__$5 = cljs.core.next(seq38893__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__38894, G__38895, G__38896, G__38897, G__38898, seq38893__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args38905 = [];
  var len__27315__auto___38930 = arguments.length;
  var i__27316__auto___38931 = 0;
  while (true) {
    if (i__27316__auto___38931 < len__27315__auto___38930) {
      args38905.push(arguments[i__27316__auto___38931]);
      var G__38932 = i__27316__auto___38931 + 1;
      i__27316__auto___38931 = G__38932;
      continue;
    } else {
    }
    break;
  }
  var G__38914 = args38905.length;
  switch(G__38914) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38905.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__27334__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__38915 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38915) : f.call(null, G__38915);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__38916 = cljs.core.meta(obj);
    var G__38917 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38916, G__38917) : f.call(null, G__38916, G__38917);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__38918 = cljs.core.meta(obj);
    var G__38919 = a;
    var G__38920 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38918, G__38919, G__38920) : f.call(null, G__38918, G__38919, G__38920);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__38921 = cljs.core.meta(obj);
    var G__38922 = a;
    var G__38923 = b;
    var G__38924 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__38921, G__38922, G__38923, G__38924) : f.call(null, G__38921, G__38922, G__38923, G__38924);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__38925 = cljs.core.meta(obj);
    var G__38926 = a;
    var G__38927 = b;
    var G__38928 = c;
    var G__38929 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__38925, G__38926, G__38927, G__38928, G__38929) : f.call(null, G__38925, G__38926, G__38927, G__38928, G__38929);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq38906) {
  var G__38907 = cljs.core.first(seq38906);
  var seq38906__$1 = cljs.core.next(seq38906);
  var G__38908 = cljs.core.first(seq38906__$1);
  var seq38906__$2 = cljs.core.next(seq38906__$1);
  var G__38909 = cljs.core.first(seq38906__$2);
  var seq38906__$3 = cljs.core.next(seq38906__$2);
  var G__38910 = cljs.core.first(seq38906__$3);
  var seq38906__$4 = cljs.core.next(seq38906__$3);
  var G__38911 = cljs.core.first(seq38906__$4);
  var seq38906__$5 = cljs.core.next(seq38906__$4);
  var G__38912 = cljs.core.first(seq38906__$5);
  var seq38906__$6 = cljs.core.next(seq38906__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__38907, G__38908, G__38909, G__38910, G__38911, G__38912, seq38906__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args38934 = [];
  var len__27315__auto___38940 = arguments.length;
  var i__27316__auto___38941 = 0;
  while (true) {
    if (i__27316__auto___38941 < len__27315__auto___38940) {
      args38934.push(arguments[i__27316__auto___38941]);
      var G__38942 = i__27316__auto___38941 + 1;
      i__27316__auto___38941 = G__38942;
      continue;
    } else {
    }
    break;
  }
  var G__38939 = args38934.length;
  switch(G__38939) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38934.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq38935) {
  var G__38936 = cljs.core.first(seq38935);
  var seq38935__$1 = cljs.core.next(seq38935);
  var G__38937 = cljs.core.first(seq38935__$1);
  var seq38935__$2 = cljs.core.next(seq38935__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__38936, G__38937, seq38935__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core38947 !== "undefined") {
  } else {
    cljs.core.t_cljs$core38947 = function(nil_iter, meta38948) {
      this.nil_iter = nil_iter;
      this.meta38948 = meta38948;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core38947.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_38949, meta38948__$1) {
      var self__ = this;
      var _38949__$1 = this;
      return new cljs.core.t_cljs$core38947(self__.nil_iter, meta38948__$1);
    };
    cljs.core.t_cljs$core38947.prototype.cljs$core$IMeta$_meta$arity$1 = function(_38949) {
      var self__ = this;
      var _38949__$1 = this;
      return self__.meta38948;
    };
    cljs.core.t_cljs$core38947.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core38947.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core38947.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core38947.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta38948", "meta38948", -943015046, null)], 
      null);
    };
    cljs.core.t_cljs$core38947.cljs$lang$type = true;
    cljs.core.t_cljs$core38947.cljs$lang$ctorStr = "cljs.core/t_cljs$core38947";
    cljs.core.t_cljs$core38947.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write(writer__26847__auto__, "cljs.core/t_cljs$core38947");
    };
    cljs.core.__GT_t_cljs$core38947 = function cljs$core$nil_iter_$___GT_t_cljs$core38947(nil_iter__$1, meta38948) {
      return new cljs.core.t_cljs$core38947(nil_iter__$1, meta38948);
    };
  }
  return new cljs.core.t_cljs$core38947(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = !(lt.stepper == null);
      if (and__26228__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__26228__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__38950 = lt;
        var G__38951 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__38950, G__38951) : self__.xform.call(null, G__38950, G__38951);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__38952 = cljs.core.next(iters__$1);
        iters__$1 = G__38952;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__27155__auto___38953 = self__.iters.length;
  var i_38954 = 0;
  while (true) {
    if (i_38954 < n__27155__auto___38953) {
      self__.nexts[i_38954] = self__.iters[i_38954].next();
      var G__38955 = i_38954 + 1;
      i_38954 = G__38955;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = !(lt.stepper == null);
      if (and__26228__auto__) {
        return this$.hasNext();
      } else {
        return and__26228__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args38956 = [];
  var len__27315__auto___38959 = arguments.length;
  var i__27316__auto___38960 = 0;
  while (true) {
    if (i__27316__auto___38960 < len__27315__auto___38959) {
      args38956.push(arguments[i__27316__auto___38960]);
      var G__38961 = i__27316__auto___38960 + 1;
      i__27316__auto___38960 = G__38961;
      continue;
    } else {
    }
    break;
  }
  var G__38958 = args38956.length;
  switch(G__38958) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38956.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__38963 = null;
  var G__38963__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__38963__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38963 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38963__1.call(this, x);
      case 2:
        return G__38963__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38963.cljs$core$IFn$_invoke$arity$1 = G__38963__1;
  G__38963.cljs$core$IFn$_invoke$arity$2 = G__38963__2;
  return G__38963;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__38964 = null;
  var G__38964__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__38964__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__38964 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__38964__1.call(this, x);
      case 2:
        return G__38964__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__38964.cljs$core$IFn$_invoke$arity$1 = G__38964__1;
  G__38964.cljs$core$IFn$_invoke$arity$2 = G__38964__2;
  return G__38964;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__38965_38969 = cljs.core.seq(colls);
  var chunk__38966_38970 = null;
  var count__38967_38971 = 0;
  var i__38968_38972 = 0;
  while (true) {
    if (i__38968_38972 < count__38967_38971) {
      var coll_38973 = chunk__38966_38970.cljs$core$IIndexed$_nth$arity$2(null, i__38968_38972);
      iters.push(cljs.core.iter(coll_38973));
      var G__38974 = seq__38965_38969;
      var G__38975 = chunk__38966_38970;
      var G__38976 = count__38967_38971;
      var G__38977 = i__38968_38972 + 1;
      seq__38965_38969 = G__38974;
      chunk__38966_38970 = G__38975;
      count__38967_38971 = G__38976;
      i__38968_38972 = G__38977;
      continue;
    } else {
      var temp__4657__auto___38978 = cljs.core.seq(seq__38965_38969);
      if (temp__4657__auto___38978) {
        var seq__38965_38979__$1 = temp__4657__auto___38978;
        if (cljs.core.chunked_seq_QMARK_(seq__38965_38979__$1)) {
          var c__27051__auto___38980 = cljs.core.chunk_first(seq__38965_38979__$1);
          var G__38981 = cljs.core.chunk_rest(seq__38965_38979__$1);
          var G__38982 = c__27051__auto___38980;
          var G__38983 = cljs.core.count(c__27051__auto___38980);
          var G__38984 = 0;
          seq__38965_38969 = G__38981;
          chunk__38966_38970 = G__38982;
          count__38967_38971 = G__38983;
          i__38968_38972 = G__38984;
          continue;
        } else {
          var coll_38985 = cljs.core.first(seq__38965_38979__$1);
          iters.push(cljs.core.iter(coll_38985));
          var G__38986 = cljs.core.next(seq__38965_38979__$1);
          var G__38987 = null;
          var G__38988 = 0;
          var G__38989 = 0;
          seq__38965_38969 = G__38986;
          chunk__38966_38970 = G__38987;
          count__38967_38971 = G__38988;
          i__38968_38972 = G__38989;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args38990 = [];
  var len__27315__auto___38996 = arguments.length;
  var i__27316__auto___38997 = 0;
  while (true) {
    if (i__27316__auto___38997 < len__27315__auto___38996) {
      args38990.push(arguments[i__27316__auto___38997]);
      var G__38998 = i__27316__auto___38997 + 1;
      i__27316__auto___38997 = G__38998;
      continue;
    } else {
    }
    break;
  }
  var G__38995 = args38990.length;
  switch(G__38995) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args38990.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__26240__auto__ = cljs.core.seq(coll);
    if (or__26240__auto__) {
      return or__26240__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq38991) {
  var G__38992 = cljs.core.first(seq38991);
  var seq38991__$1 = cljs.core.next(seq38991);
  var G__38993 = cljs.core.first(seq38991__$1);
  var seq38991__$2 = cljs.core.next(seq38991__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__38992, G__38993, seq38991__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__39001 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__39001) : pred.call(null, G__39001);
      }())) {
        var G__39002 = pred;
        var G__39003 = cljs.core.next(coll);
        pred = G__39002;
        coll = G__39003;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__26240__auto__ = function() {
        var G__39007 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__39007) : pred.call(null, G__39007);
      }();
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var G__39008 = pred;
        var G__39009 = cljs.core.next(coll);
        pred = G__39008;
        coll = G__39009;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__39010 = null;
    var G__39010__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__39010__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__39010__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__39010__3 = function() {
      var G__39011__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__39011 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__39012__i = 0, G__39012__a = new Array(arguments.length - 2);
          while (G__39012__i < G__39012__a.length) {
            G__39012__a[G__39012__i] = arguments[G__39012__i + 2];
            ++G__39012__i;
          }
          zs = new cljs.core.IndexedSeq(G__39012__a, 0);
        }
        return G__39011__delegate.call(this, x, y, zs);
      };
      G__39011.cljs$lang$maxFixedArity = 2;
      G__39011.cljs$lang$applyTo = function(arglist__39013) {
        var x = cljs.core.first(arglist__39013);
        arglist__39013 = cljs.core.next(arglist__39013);
        var y = cljs.core.first(arglist__39013);
        var zs = cljs.core.rest(arglist__39013);
        return G__39011__delegate(x, y, zs);
      };
      G__39011.cljs$core$IFn$_invoke$arity$variadic = G__39011__delegate;
      return G__39011;
    }();
    G__39010 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__39010__0.call(this);
        case 1:
          return G__39010__1.call(this, x);
        case 2:
          return G__39010__2.call(this, x, y);
        default:
          var G__39014 = null;
          if (arguments.length > 2) {
            var G__39015__i = 0, G__39015__a = new Array(arguments.length - 2);
            while (G__39015__i < G__39015__a.length) {
              G__39015__a[G__39015__i] = arguments[G__39015__i + 2];
              ++G__39015__i;
            }
            G__39014 = new cljs.core.IndexedSeq(G__39015__a, 0);
          }
          return G__39010__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__39014);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39010.cljs$lang$maxFixedArity = 2;
    G__39010.cljs$lang$applyTo = G__39010__3.cljs$lang$applyTo;
    G__39010.cljs$core$IFn$_invoke$arity$0 = G__39010__0;
    G__39010.cljs$core$IFn$_invoke$arity$1 = G__39010__1;
    G__39010.cljs$core$IFn$_invoke$arity$2 = G__39010__2;
    G__39010.cljs$core$IFn$_invoke$arity$variadic = G__39010__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__39010;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__39016__delegate = function(args) {
      return x;
    };
    var G__39016 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__39017__i = 0, G__39017__a = new Array(arguments.length - 0);
        while (G__39017__i < G__39017__a.length) {
          G__39017__a[G__39017__i] = arguments[G__39017__i + 0];
          ++G__39017__i;
        }
        args = new cljs.core.IndexedSeq(G__39017__a, 0);
      }
      return G__39016__delegate.call(this, args);
    };
    G__39016.cljs$lang$maxFixedArity = 0;
    G__39016.cljs$lang$applyTo = function(arglist__39018) {
      var args = cljs.core.seq(arglist__39018);
      return G__39016__delegate(args);
    };
    G__39016.cljs$core$IFn$_invoke$arity$variadic = G__39016__delegate;
    return G__39016;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args39019 = [];
  var len__27315__auto___39041 = arguments.length;
  var i__27316__auto___39042 = 0;
  while (true) {
    if (i__27316__auto___39042 < len__27315__auto___39041) {
      args39019.push(arguments[i__27316__auto___39042]);
      var G__39043 = i__27316__auto___39042 + 1;
      i__27316__auto___39042 = G__39043;
      continue;
    } else {
    }
    break;
  }
  var G__39025 = args39019.length;
  switch(G__39025) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39019.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__39045 = null;
    var G__39045__0 = function() {
      var G__39026 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39026) : f.call(null, G__39026);
    };
    var G__39045__1 = function(x) {
      var G__39027 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39027) : f.call(null, G__39027);
    };
    var G__39045__2 = function(x, y) {
      var G__39028 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39028) : f.call(null, G__39028);
    };
    var G__39045__3 = function(x, y, z) {
      var G__39029 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39029) : f.call(null, G__39029);
    };
    var G__39045__4 = function() {
      var G__39046__delegate = function(x, y, z, args) {
        var G__39030 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39030) : f.call(null, G__39030);
      };
      var G__39046 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39047__i = 0, G__39047__a = new Array(arguments.length - 3);
          while (G__39047__i < G__39047__a.length) {
            G__39047__a[G__39047__i] = arguments[G__39047__i + 3];
            ++G__39047__i;
          }
          args = new cljs.core.IndexedSeq(G__39047__a, 0);
        }
        return G__39046__delegate.call(this, x, y, z, args);
      };
      G__39046.cljs$lang$maxFixedArity = 3;
      G__39046.cljs$lang$applyTo = function(arglist__39048) {
        var x = cljs.core.first(arglist__39048);
        arglist__39048 = cljs.core.next(arglist__39048);
        var y = cljs.core.first(arglist__39048);
        arglist__39048 = cljs.core.next(arglist__39048);
        var z = cljs.core.first(arglist__39048);
        var args = cljs.core.rest(arglist__39048);
        return G__39046__delegate(x, y, z, args);
      };
      G__39046.cljs$core$IFn$_invoke$arity$variadic = G__39046__delegate;
      return G__39046;
    }();
    G__39045 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__39045__0.call(this);
        case 1:
          return G__39045__1.call(this, x);
        case 2:
          return G__39045__2.call(this, x, y);
        case 3:
          return G__39045__3.call(this, x, y, z);
        default:
          var G__39049 = null;
          if (arguments.length > 3) {
            var G__39050__i = 0, G__39050__a = new Array(arguments.length - 3);
            while (G__39050__i < G__39050__a.length) {
              G__39050__a[G__39050__i] = arguments[G__39050__i + 3];
              ++G__39050__i;
            }
            G__39049 = new cljs.core.IndexedSeq(G__39050__a, 0);
          }
          return G__39045__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39049);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39045.cljs$lang$maxFixedArity = 3;
    G__39045.cljs$lang$applyTo = G__39045__4.cljs$lang$applyTo;
    G__39045.cljs$core$IFn$_invoke$arity$0 = G__39045__0;
    G__39045.cljs$core$IFn$_invoke$arity$1 = G__39045__1;
    G__39045.cljs$core$IFn$_invoke$arity$2 = G__39045__2;
    G__39045.cljs$core$IFn$_invoke$arity$3 = G__39045__3;
    G__39045.cljs$core$IFn$_invoke$arity$variadic = G__39045__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39045;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__39051 = null;
    var G__39051__0 = function() {
      var G__39031 = function() {
        var G__39032 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39032) : g.call(null, G__39032);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39031) : f.call(null, G__39031);
    };
    var G__39051__1 = function(x) {
      var G__39033 = function() {
        var G__39034 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39034) : g.call(null, G__39034);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39033) : f.call(null, G__39033);
    };
    var G__39051__2 = function(x, y) {
      var G__39035 = function() {
        var G__39036 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39036) : g.call(null, G__39036);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39035) : f.call(null, G__39035);
    };
    var G__39051__3 = function(x, y, z) {
      var G__39037 = function() {
        var G__39038 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39038) : g.call(null, G__39038);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39037) : f.call(null, G__39037);
    };
    var G__39051__4 = function() {
      var G__39052__delegate = function(x, y, z, args) {
        var G__39039 = function() {
          var G__39040 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__39040) : g.call(null, G__39040);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39039) : f.call(null, G__39039);
      };
      var G__39052 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39053__i = 0, G__39053__a = new Array(arguments.length - 3);
          while (G__39053__i < G__39053__a.length) {
            G__39053__a[G__39053__i] = arguments[G__39053__i + 3];
            ++G__39053__i;
          }
          args = new cljs.core.IndexedSeq(G__39053__a, 0);
        }
        return G__39052__delegate.call(this, x, y, z, args);
      };
      G__39052.cljs$lang$maxFixedArity = 3;
      G__39052.cljs$lang$applyTo = function(arglist__39054) {
        var x = cljs.core.first(arglist__39054);
        arglist__39054 = cljs.core.next(arglist__39054);
        var y = cljs.core.first(arglist__39054);
        arglist__39054 = cljs.core.next(arglist__39054);
        var z = cljs.core.first(arglist__39054);
        var args = cljs.core.rest(arglist__39054);
        return G__39052__delegate(x, y, z, args);
      };
      G__39052.cljs$core$IFn$_invoke$arity$variadic = G__39052__delegate;
      return G__39052;
    }();
    G__39051 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__39051__0.call(this);
        case 1:
          return G__39051__1.call(this, x);
        case 2:
          return G__39051__2.call(this, x, y);
        case 3:
          return G__39051__3.call(this, x, y, z);
        default:
          var G__39055 = null;
          if (arguments.length > 3) {
            var G__39056__i = 0, G__39056__a = new Array(arguments.length - 3);
            while (G__39056__i < G__39056__a.length) {
              G__39056__a[G__39056__i] = arguments[G__39056__i + 3];
              ++G__39056__i;
            }
            G__39055 = new cljs.core.IndexedSeq(G__39056__a, 0);
          }
          return G__39051__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39055);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39051.cljs$lang$maxFixedArity = 3;
    G__39051.cljs$lang$applyTo = G__39051__4.cljs$lang$applyTo;
    G__39051.cljs$core$IFn$_invoke$arity$0 = G__39051__0;
    G__39051.cljs$core$IFn$_invoke$arity$1 = G__39051__1;
    G__39051.cljs$core$IFn$_invoke$arity$2 = G__39051__2;
    G__39051.cljs$core$IFn$_invoke$arity$3 = G__39051__3;
    G__39051.cljs$core$IFn$_invoke$arity$variadic = G__39051__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39051;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__39057__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__39058 = cljs.core.first(fs__$2).call(null, ret);
            var G__39059 = cljs.core.next(fs__$2);
            ret = G__39058;
            fs__$2 = G__39059;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__39057 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__39060__i = 0, G__39060__a = new Array(arguments.length - 0);
          while (G__39060__i < G__39060__a.length) {
            G__39060__a[G__39060__i] = arguments[G__39060__i + 0];
            ++G__39060__i;
          }
          args = new cljs.core.IndexedSeq(G__39060__a, 0);
        }
        return G__39057__delegate.call(this, args);
      };
      G__39057.cljs$lang$maxFixedArity = 0;
      G__39057.cljs$lang$applyTo = function(arglist__39061) {
        var args = cljs.core.seq(arglist__39061);
        return G__39057__delegate(args);
      };
      G__39057.cljs$core$IFn$_invoke$arity$variadic = G__39057__delegate;
      return G__39057;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq39020) {
  var G__39021 = cljs.core.first(seq39020);
  var seq39020__$1 = cljs.core.next(seq39020);
  var G__39022 = cljs.core.first(seq39020__$1);
  var seq39020__$2 = cljs.core.next(seq39020__$1);
  var G__39023 = cljs.core.first(seq39020__$2);
  var seq39020__$3 = cljs.core.next(seq39020__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__39021, G__39022, G__39023, seq39020__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args39062 = [];
  var len__27315__auto___39070 = arguments.length;
  var i__27316__auto___39071 = 0;
  while (true) {
    if (i__27316__auto___39071 < len__27315__auto___39070) {
      args39062.push(arguments[i__27316__auto___39071]);
      var G__39072 = i__27316__auto___39071 + 1;
      i__27316__auto___39071 = G__39072;
      continue;
    } else {
    }
    break;
  }
  var G__39069 = args39062.length;
  switch(G__39069) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39062.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__39074 = null;
    var G__39074__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__39074__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__39074__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__39074__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__39074__4 = function() {
      var G__39075__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__39075 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39076__i = 0, G__39076__a = new Array(arguments.length - 3);
          while (G__39076__i < G__39076__a.length) {
            G__39076__a[G__39076__i] = arguments[G__39076__i + 3];
            ++G__39076__i;
          }
          args = new cljs.core.IndexedSeq(G__39076__a, 0);
        }
        return G__39075__delegate.call(this, x, y, z, args);
      };
      G__39075.cljs$lang$maxFixedArity = 3;
      G__39075.cljs$lang$applyTo = function(arglist__39077) {
        var x = cljs.core.first(arglist__39077);
        arglist__39077 = cljs.core.next(arglist__39077);
        var y = cljs.core.first(arglist__39077);
        arglist__39077 = cljs.core.next(arglist__39077);
        var z = cljs.core.first(arglist__39077);
        var args = cljs.core.rest(arglist__39077);
        return G__39075__delegate(x, y, z, args);
      };
      G__39075.cljs$core$IFn$_invoke$arity$variadic = G__39075__delegate;
      return G__39075;
    }();
    G__39074 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__39074__0.call(this);
        case 1:
          return G__39074__1.call(this, x);
        case 2:
          return G__39074__2.call(this, x, y);
        case 3:
          return G__39074__3.call(this, x, y, z);
        default:
          var G__39078 = null;
          if (arguments.length > 3) {
            var G__39079__i = 0, G__39079__a = new Array(arguments.length - 3);
            while (G__39079__i < G__39079__a.length) {
              G__39079__a[G__39079__i] = arguments[G__39079__i + 3];
              ++G__39079__i;
            }
            G__39078 = new cljs.core.IndexedSeq(G__39079__a, 0);
          }
          return G__39074__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39078);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39074.cljs$lang$maxFixedArity = 3;
    G__39074.cljs$lang$applyTo = G__39074__4.cljs$lang$applyTo;
    G__39074.cljs$core$IFn$_invoke$arity$0 = G__39074__0;
    G__39074.cljs$core$IFn$_invoke$arity$1 = G__39074__1;
    G__39074.cljs$core$IFn$_invoke$arity$2 = G__39074__2;
    G__39074.cljs$core$IFn$_invoke$arity$3 = G__39074__3;
    G__39074.cljs$core$IFn$_invoke$arity$variadic = G__39074__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39074;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__39080 = null;
    var G__39080__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__39080__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__39080__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__39080__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__39080__4 = function() {
      var G__39081__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__39081 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39082__i = 0, G__39082__a = new Array(arguments.length - 3);
          while (G__39082__i < G__39082__a.length) {
            G__39082__a[G__39082__i] = arguments[G__39082__i + 3];
            ++G__39082__i;
          }
          args = new cljs.core.IndexedSeq(G__39082__a, 0);
        }
        return G__39081__delegate.call(this, x, y, z, args);
      };
      G__39081.cljs$lang$maxFixedArity = 3;
      G__39081.cljs$lang$applyTo = function(arglist__39083) {
        var x = cljs.core.first(arglist__39083);
        arglist__39083 = cljs.core.next(arglist__39083);
        var y = cljs.core.first(arglist__39083);
        arglist__39083 = cljs.core.next(arglist__39083);
        var z = cljs.core.first(arglist__39083);
        var args = cljs.core.rest(arglist__39083);
        return G__39081__delegate(x, y, z, args);
      };
      G__39081.cljs$core$IFn$_invoke$arity$variadic = G__39081__delegate;
      return G__39081;
    }();
    G__39080 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__39080__0.call(this);
        case 1:
          return G__39080__1.call(this, x);
        case 2:
          return G__39080__2.call(this, x, y);
        case 3:
          return G__39080__3.call(this, x, y, z);
        default:
          var G__39084 = null;
          if (arguments.length > 3) {
            var G__39085__i = 0, G__39085__a = new Array(arguments.length - 3);
            while (G__39085__i < G__39085__a.length) {
              G__39085__a[G__39085__i] = arguments[G__39085__i + 3];
              ++G__39085__i;
            }
            G__39084 = new cljs.core.IndexedSeq(G__39085__a, 0);
          }
          return G__39080__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39084);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39080.cljs$lang$maxFixedArity = 3;
    G__39080.cljs$lang$applyTo = G__39080__4.cljs$lang$applyTo;
    G__39080.cljs$core$IFn$_invoke$arity$0 = G__39080__0;
    G__39080.cljs$core$IFn$_invoke$arity$1 = G__39080__1;
    G__39080.cljs$core$IFn$_invoke$arity$2 = G__39080__2;
    G__39080.cljs$core$IFn$_invoke$arity$3 = G__39080__3;
    G__39080.cljs$core$IFn$_invoke$arity$variadic = G__39080__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39080;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__39086 = null;
    var G__39086__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__39086__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__39086__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__39086__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__39086__4 = function() {
      var G__39087__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__39087 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39088__i = 0, G__39088__a = new Array(arguments.length - 3);
          while (G__39088__i < G__39088__a.length) {
            G__39088__a[G__39088__i] = arguments[G__39088__i + 3];
            ++G__39088__i;
          }
          args = new cljs.core.IndexedSeq(G__39088__a, 0);
        }
        return G__39087__delegate.call(this, x, y, z, args);
      };
      G__39087.cljs$lang$maxFixedArity = 3;
      G__39087.cljs$lang$applyTo = function(arglist__39089) {
        var x = cljs.core.first(arglist__39089);
        arglist__39089 = cljs.core.next(arglist__39089);
        var y = cljs.core.first(arglist__39089);
        arglist__39089 = cljs.core.next(arglist__39089);
        var z = cljs.core.first(arglist__39089);
        var args = cljs.core.rest(arglist__39089);
        return G__39087__delegate(x, y, z, args);
      };
      G__39087.cljs$core$IFn$_invoke$arity$variadic = G__39087__delegate;
      return G__39087;
    }();
    G__39086 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__39086__0.call(this);
        case 1:
          return G__39086__1.call(this, x);
        case 2:
          return G__39086__2.call(this, x, y);
        case 3:
          return G__39086__3.call(this, x, y, z);
        default:
          var G__39090 = null;
          if (arguments.length > 3) {
            var G__39091__i = 0, G__39091__a = new Array(arguments.length - 3);
            while (G__39091__i < G__39091__a.length) {
              G__39091__a[G__39091__i] = arguments[G__39091__i + 3];
              ++G__39091__i;
            }
            G__39090 = new cljs.core.IndexedSeq(G__39091__a, 0);
          }
          return G__39086__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39090);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39086.cljs$lang$maxFixedArity = 3;
    G__39086.cljs$lang$applyTo = G__39086__4.cljs$lang$applyTo;
    G__39086.cljs$core$IFn$_invoke$arity$0 = G__39086__0;
    G__39086.cljs$core$IFn$_invoke$arity$1 = G__39086__1;
    G__39086.cljs$core$IFn$_invoke$arity$2 = G__39086__2;
    G__39086.cljs$core$IFn$_invoke$arity$3 = G__39086__3;
    G__39086.cljs$core$IFn$_invoke$arity$variadic = G__39086__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39086;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__39092__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__39092 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__39093__i = 0, G__39093__a = new Array(arguments.length - 0);
        while (G__39093__i < G__39093__a.length) {
          G__39093__a[G__39093__i] = arguments[G__39093__i + 0];
          ++G__39093__i;
        }
        args = new cljs.core.IndexedSeq(G__39093__a, 0);
      }
      return G__39092__delegate.call(this, args);
    };
    G__39092.cljs$lang$maxFixedArity = 0;
    G__39092.cljs$lang$applyTo = function(arglist__39094) {
      var args = cljs.core.seq(arglist__39094);
      return G__39092__delegate(args);
    };
    G__39092.cljs$core$IFn$_invoke$arity$variadic = G__39092__delegate;
    return G__39092;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq39063) {
  var G__39064 = cljs.core.first(seq39063);
  var seq39063__$1 = cljs.core.next(seq39063);
  var G__39065 = cljs.core.first(seq39063__$1);
  var seq39063__$2 = cljs.core.next(seq39063__$1);
  var G__39066 = cljs.core.first(seq39063__$2);
  var seq39063__$3 = cljs.core.next(seq39063__$2);
  var G__39067 = cljs.core.first(seq39063__$3);
  var seq39063__$4 = cljs.core.next(seq39063__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__39064, G__39065, G__39066, G__39067, seq39063__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args39095 = [];
  var len__27315__auto___39114 = arguments.length;
  var i__27316__auto___39115 = 0;
  while (true) {
    if (i__27316__auto___39115 < len__27315__auto___39114) {
      args39095.push(arguments[i__27316__auto___39115]);
      var G__39116 = i__27316__auto___39115 + 1;
      i__27316__auto___39115 = G__39116;
      continue;
    } else {
    }
    break;
  }
  var G__39097 = args39095.length;
  switch(G__39097) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39095.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__39118 = null;
    var G__39118__1 = function(a) {
      var G__39098 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39098) : f.call(null, G__39098);
    };
    var G__39118__2 = function(a, b) {
      var G__39099 = a == null ? x : a;
      var G__39100 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39099, G__39100) : f.call(null, G__39099, G__39100);
    };
    var G__39118__3 = function(a, b, c) {
      var G__39101 = a == null ? x : a;
      var G__39102 = b;
      var G__39103 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39101, G__39102, G__39103) : f.call(null, G__39101, G__39102, G__39103);
    };
    var G__39118__4 = function() {
      var G__39119__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__39119 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__39120__i = 0, G__39120__a = new Array(arguments.length - 3);
          while (G__39120__i < G__39120__a.length) {
            G__39120__a[G__39120__i] = arguments[G__39120__i + 3];
            ++G__39120__i;
          }
          ds = new cljs.core.IndexedSeq(G__39120__a, 0);
        }
        return G__39119__delegate.call(this, a, b, c, ds);
      };
      G__39119.cljs$lang$maxFixedArity = 3;
      G__39119.cljs$lang$applyTo = function(arglist__39121) {
        var a = cljs.core.first(arglist__39121);
        arglist__39121 = cljs.core.next(arglist__39121);
        var b = cljs.core.first(arglist__39121);
        arglist__39121 = cljs.core.next(arglist__39121);
        var c = cljs.core.first(arglist__39121);
        var ds = cljs.core.rest(arglist__39121);
        return G__39119__delegate(a, b, c, ds);
      };
      G__39119.cljs$core$IFn$_invoke$arity$variadic = G__39119__delegate;
      return G__39119;
    }();
    G__39118 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__39118__1.call(this, a);
        case 2:
          return G__39118__2.call(this, a, b);
        case 3:
          return G__39118__3.call(this, a, b, c);
        default:
          var G__39122 = null;
          if (arguments.length > 3) {
            var G__39123__i = 0, G__39123__a = new Array(arguments.length - 3);
            while (G__39123__i < G__39123__a.length) {
              G__39123__a[G__39123__i] = arguments[G__39123__i + 3];
              ++G__39123__i;
            }
            G__39122 = new cljs.core.IndexedSeq(G__39123__a, 0);
          }
          return G__39118__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__39122);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39118.cljs$lang$maxFixedArity = 3;
    G__39118.cljs$lang$applyTo = G__39118__4.cljs$lang$applyTo;
    G__39118.cljs$core$IFn$_invoke$arity$1 = G__39118__1;
    G__39118.cljs$core$IFn$_invoke$arity$2 = G__39118__2;
    G__39118.cljs$core$IFn$_invoke$arity$3 = G__39118__3;
    G__39118.cljs$core$IFn$_invoke$arity$variadic = G__39118__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39118;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__39124 = null;
    var G__39124__2 = function(a, b) {
      var G__39104 = a == null ? x : a;
      var G__39105 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39104, G__39105) : f.call(null, G__39104, G__39105);
    };
    var G__39124__3 = function(a, b, c) {
      var G__39106 = a == null ? x : a;
      var G__39107 = b == null ? y : b;
      var G__39108 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39106, G__39107, G__39108) : f.call(null, G__39106, G__39107, G__39108);
    };
    var G__39124__4 = function() {
      var G__39125__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__39125 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__39126__i = 0, G__39126__a = new Array(arguments.length - 3);
          while (G__39126__i < G__39126__a.length) {
            G__39126__a[G__39126__i] = arguments[G__39126__i + 3];
            ++G__39126__i;
          }
          ds = new cljs.core.IndexedSeq(G__39126__a, 0);
        }
        return G__39125__delegate.call(this, a, b, c, ds);
      };
      G__39125.cljs$lang$maxFixedArity = 3;
      G__39125.cljs$lang$applyTo = function(arglist__39127) {
        var a = cljs.core.first(arglist__39127);
        arglist__39127 = cljs.core.next(arglist__39127);
        var b = cljs.core.first(arglist__39127);
        arglist__39127 = cljs.core.next(arglist__39127);
        var c = cljs.core.first(arglist__39127);
        var ds = cljs.core.rest(arglist__39127);
        return G__39125__delegate(a, b, c, ds);
      };
      G__39125.cljs$core$IFn$_invoke$arity$variadic = G__39125__delegate;
      return G__39125;
    }();
    G__39124 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__39124__2.call(this, a, b);
        case 3:
          return G__39124__3.call(this, a, b, c);
        default:
          var G__39128 = null;
          if (arguments.length > 3) {
            var G__39129__i = 0, G__39129__a = new Array(arguments.length - 3);
            while (G__39129__i < G__39129__a.length) {
              G__39129__a[G__39129__i] = arguments[G__39129__i + 3];
              ++G__39129__i;
            }
            G__39128 = new cljs.core.IndexedSeq(G__39129__a, 0);
          }
          return G__39124__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__39128);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39124.cljs$lang$maxFixedArity = 3;
    G__39124.cljs$lang$applyTo = G__39124__4.cljs$lang$applyTo;
    G__39124.cljs$core$IFn$_invoke$arity$2 = G__39124__2;
    G__39124.cljs$core$IFn$_invoke$arity$3 = G__39124__3;
    G__39124.cljs$core$IFn$_invoke$arity$variadic = G__39124__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39124;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__39130 = null;
    var G__39130__2 = function(a, b) {
      var G__39109 = a == null ? x : a;
      var G__39110 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39109, G__39110) : f.call(null, G__39109, G__39110);
    };
    var G__39130__3 = function(a, b, c) {
      var G__39111 = a == null ? x : a;
      var G__39112 = b == null ? y : b;
      var G__39113 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39111, G__39112, G__39113) : f.call(null, G__39111, G__39112, G__39113);
    };
    var G__39130__4 = function() {
      var G__39131__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__39131 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__39132__i = 0, G__39132__a = new Array(arguments.length - 3);
          while (G__39132__i < G__39132__a.length) {
            G__39132__a[G__39132__i] = arguments[G__39132__i + 3];
            ++G__39132__i;
          }
          ds = new cljs.core.IndexedSeq(G__39132__a, 0);
        }
        return G__39131__delegate.call(this, a, b, c, ds);
      };
      G__39131.cljs$lang$maxFixedArity = 3;
      G__39131.cljs$lang$applyTo = function(arglist__39133) {
        var a = cljs.core.first(arglist__39133);
        arglist__39133 = cljs.core.next(arglist__39133);
        var b = cljs.core.first(arglist__39133);
        arglist__39133 = cljs.core.next(arglist__39133);
        var c = cljs.core.first(arglist__39133);
        var ds = cljs.core.rest(arglist__39133);
        return G__39131__delegate(a, b, c, ds);
      };
      G__39131.cljs$core$IFn$_invoke$arity$variadic = G__39131__delegate;
      return G__39131;
    }();
    G__39130 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__39130__2.call(this, a, b);
        case 3:
          return G__39130__3.call(this, a, b, c);
        default:
          var G__39134 = null;
          if (arguments.length > 3) {
            var G__39135__i = 0, G__39135__a = new Array(arguments.length - 3);
            while (G__39135__i < G__39135__a.length) {
              G__39135__a[G__39135__i] = arguments[G__39135__i + 3];
              ++G__39135__i;
            }
            G__39134 = new cljs.core.IndexedSeq(G__39135__a, 0);
          }
          return G__39130__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__39134);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__39130.cljs$lang$maxFixedArity = 3;
    G__39130.cljs$lang$applyTo = G__39130__4.cljs$lang$applyTo;
    G__39130.cljs$core$IFn$_invoke$arity$2 = G__39130__2;
    G__39130.cljs$core$IFn$_invoke$arity$3 = G__39130__3;
    G__39130.cljs$core$IFn$_invoke$arity$variadic = G__39130__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__39130;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args39136 = [];
  var len__27315__auto___39167 = arguments.length;
  var i__27316__auto___39168 = 0;
  while (true) {
    if (i__27316__auto___39168 < len__27315__auto___39167) {
      args39136.push(arguments[i__27316__auto___39168]);
      var G__39169 = i__27316__auto___39168 + 1;
      i__27316__auto___39168 = G__39169;
      continue;
    } else {
    }
    break;
  }
  var G__39138 = args39136.length;
  switch(G__39138) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39136.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__39171 = null;
        var G__39171__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__39171__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__39171__2 = function(result, input) {
          var G__39139 = result;
          var G__39140 = function() {
            var G__39141 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__39142 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39141, G__39142) : f.call(null, G__39141, G__39142);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__39139, G__39140) : rf.call(null, G__39139, G__39140);
        };
        G__39171 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39171__0.call(this);
            case 1:
              return G__39171__1.call(this, result);
            case 2:
              return G__39171__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39171.cljs$core$IFn$_invoke$arity$0 = G__39171__0;
        G__39171.cljs$core$IFn$_invoke$arity$1 = G__39171__1;
        G__39171.cljs$core$IFn$_invoke$arity$2 = G__39171__2;
        return G__39171;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__27155__auto___39172 = size;
          var i_39173 = 0;
          while (true) {
            if (i_39173 < n__27155__auto___39172) {
              cljs.core.chunk_append(b, function() {
                var G__39163 = idx + i_39173;
                var G__39164 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_39173);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39163, G__39164) : f.call(null, G__39163, G__39164);
              }());
              var G__39174 = i_39173 + 1;
              i_39173 = G__39174;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__39165 = idx;
            var G__39166 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39165, G__39166) : f.call(null, G__39165, G__39166);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args39175 = [];
  var len__27315__auto___39180 = arguments.length;
  var i__27316__auto___39181 = 0;
  while (true) {
    if (i__27316__auto___39181 < len__27315__auto___39180) {
      args39175.push(arguments[i__27316__auto___39181]);
      var G__39182 = i__27316__auto___39181 + 1;
      i__27316__auto___39181 = G__39182;
      continue;
    } else {
    }
    break;
  }
  var G__39177 = args39175.length;
  switch(G__39177) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39175.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__39184 = null;
      var G__39184__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__39184__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__39184__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__39184 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__39184__0.call(this);
          case 1:
            return G__39184__1.call(this, result);
          case 2:
            return G__39184__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39184.cljs$core$IFn$_invoke$arity$0 = G__39184__0;
      G__39184.cljs$core$IFn$_invoke$arity$1 = G__39184__1;
      G__39184.cljs$core$IFn$_invoke$arity$2 = G__39184__2;
      return G__39184;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__27155__auto___39185 = size;
        var i_39186 = 0;
        while (true) {
          if (i_39186 < n__27155__auto___39185) {
            var x_39187 = function() {
              var G__39178 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_39186);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39178) : f.call(null, G__39178);
            }();
            if (x_39187 == null) {
            } else {
              cljs.core.chunk_append(b, x_39187);
            }
            var G__39188 = i_39186 + 1;
            i_39186 = G__39188;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__39179 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39179) : f.call(null, G__39179);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__39189 = cljs.core.seq(self__.watches);
  var chunk__39190 = null;
  var count__39191 = 0;
  var i__39192 = 0;
  while (true) {
    if (i__39192 < count__39191) {
      var vec__39193 = chunk__39190.cljs$core$IIndexed$_nth$arity$2(null, i__39192);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39193, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39193, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__39199 = seq__39189;
      var G__39200 = chunk__39190;
      var G__39201 = count__39191;
      var G__39202 = i__39192 + 1;
      seq__39189 = G__39199;
      chunk__39190 = G__39200;
      count__39191 = G__39201;
      i__39192 = G__39202;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__39189);
      if (temp__4657__auto__) {
        var seq__39189__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__39189__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__39189__$1);
          var G__39203 = cljs.core.chunk_rest(seq__39189__$1);
          var G__39204 = c__27051__auto__;
          var G__39205 = cljs.core.count(c__27051__auto__);
          var G__39206 = 0;
          seq__39189 = G__39203;
          chunk__39190 = G__39204;
          count__39191 = G__39205;
          i__39192 = G__39206;
          continue;
        } else {
          var vec__39196 = cljs.core.first(seq__39189__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39196, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39196, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__39207 = cljs.core.next(seq__39189__$1);
          var G__39208 = null;
          var G__39209 = 0;
          var G__39210 = 0;
          seq__39189 = G__39207;
          chunk__39190 = G__39208;
          count__39191 = G__39209;
          i__39192 = G__39210;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args39211 = [];
  var len__27315__auto___39219 = arguments.length;
  var i__27316__auto___39220 = 0;
  while (true) {
    if (i__27316__auto___39220 < len__27315__auto___39219) {
      args39211.push(arguments[i__27316__auto___39220]);
      var G__39221 = i__27316__auto___39220 + 1;
      i__27316__auto___39220 = G__39221;
      continue;
    } else {
    }
    break;
  }
  var G__39215 = args39211.length;
  switch(G__39215) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39211.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__39216) {
  var map__39217 = p__39216;
  var map__39217__$1 = (!(map__39217 == null) ? map__39217.cljs$lang$protocol_mask$partition0$ & 64 || map__39217.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__39217) : map__39217;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39217__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39217__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq39212) {
  var G__39213 = cljs.core.first(seq39212);
  var seq39212__$1 = cljs.core.next(seq39212);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__39213, seq39212__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args39223 = [];
  var len__27315__auto___39237 = arguments.length;
  var i__27316__auto___39238 = 0;
  while (true) {
    if (i__27316__auto___39238 < len__27315__auto___39237) {
      args39223.push(arguments[i__27316__auto___39238]);
      var G__39239 = i__27316__auto___39238 + 1;
      i__27316__auto___39238 = G__39239;
      continue;
    } else {
    }
    break;
  }
  var G__39230 = args39223.length;
  switch(G__39230) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39223.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__39231 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39231) : f.call(null, G__39231);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__39232 = a.state;
      var G__39233 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39232, G__39233) : f.call(null, G__39232, G__39233);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__39234 = a.state;
      var G__39235 = x;
      var G__39236 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39234, G__39235, G__39236) : f.call(null, G__39234, G__39235, G__39236);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq39224) {
  var G__39225 = cljs.core.first(seq39224);
  var seq39224__$1 = cljs.core.next(seq39224);
  var G__39226 = cljs.core.first(seq39224__$1);
  var seq39224__$2 = cljs.core.next(seq39224__$1);
  var G__39227 = cljs.core.first(seq39224__$2);
  var seq39224__$3 = cljs.core.next(seq39224__$2);
  var G__39228 = cljs.core.first(seq39224__$3);
  var seq39224__$4 = cljs.core.next(seq39224__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__39225, G__39226, G__39227, G__39228, seq39224__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args39241 = [];
  var len__27315__auto___39272 = arguments.length;
  var i__27316__auto___39273 = 0;
  while (true) {
    if (i__27316__auto___39273 < len__27315__auto___39272) {
      args39241.push(arguments[i__27316__auto___39273]);
      var G__39274 = i__27316__auto___39273 + 1;
      i__27316__auto___39273 = G__39274;
      continue;
    } else {
    }
    break;
  }
  var G__39243 = args39241.length;
  switch(G__39243) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39241.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__39276 = null;
        var G__39276__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__39276__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__39276__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__39276 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39276__0.call(this);
            case 1:
              return G__39276__1.call(this, result);
            case 2:
              return G__39276__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39276.cljs$core$IFn$_invoke$arity$0 = G__39276__0;
        G__39276.cljs$core$IFn$_invoke$arity$1 = G__39276__1;
        G__39276.cljs$core$IFn$_invoke$arity$2 = G__39276__2;
        return G__39276;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__27155__auto___39277 = size;
          var i_39278 = 0;
          while (true) {
            if (i_39278 < n__27155__auto___39277) {
              var x_39279 = function() {
                var G__39268 = idx + i_39278;
                var G__39269 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_39278);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39268, G__39269) : f.call(null, G__39268, G__39269);
              }();
              if (x_39279 == null) {
              } else {
                cljs.core.chunk_append(b, x_39279);
              }
              var G__39280 = i_39278 + 1;
              i_39278 = G__39280;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__39270 = idx;
            var G__39271 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39270, G__39271) : f.call(null, G__39270, G__39271);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args39287 = [];
  var len__27315__auto___39294 = arguments.length;
  var i__27316__auto___39295 = 0;
  while (true) {
    if (i__27316__auto___39295 < len__27315__auto___39294) {
      args39287.push(arguments[i__27316__auto___39295]);
      var G__39296 = i__27316__auto___39295 + 1;
      i__27316__auto___39295 = G__39296;
      continue;
    } else {
    }
    break;
  }
  var G__39293 = args39287.length;
  switch(G__39293) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39287.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__39298__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__26228__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__26228__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__26228__auto__;
          }
        }());
      };
      var G__39298 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39299__i = 0, G__39299__a = new Array(arguments.length - 3);
          while (G__39299__i < G__39299__a.length) {
            G__39299__a[G__39299__i] = arguments[G__39299__i + 3];
            ++G__39299__i;
          }
          args = new cljs.core.IndexedSeq(G__39299__a, 0);
        }
        return G__39298__delegate.call(this, x, y, z, args);
      };
      G__39298.cljs$lang$maxFixedArity = 3;
      G__39298.cljs$lang$applyTo = function(arglist__39300) {
        var x = cljs.core.first(arglist__39300);
        arglist__39300 = cljs.core.next(arglist__39300);
        var y = cljs.core.first(arglist__39300);
        arglist__39300 = cljs.core.next(arglist__39300);
        var z = cljs.core.first(arglist__39300);
        var args = cljs.core.rest(arglist__39300);
        return G__39298__delegate(x, y, z, args);
      };
      G__39298.cljs$core$IFn$_invoke$arity$variadic = G__39298__delegate;
      return G__39298;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__39301 = null;
          if (arguments.length > 3) {
            var G__39302__i = 0, G__39302__a = new Array(arguments.length - 3);
            while (G__39302__i < G__39302__a.length) {
              G__39302__a[G__39302__i] = arguments[G__39302__i + 3];
              ++G__39302__i;
            }
            G__39301 = new cljs.core.IndexedSeq(G__39302__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39301);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              var and__26228__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__26228__auto____$3)) {
                var and__26228__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__26228__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__26228__auto____$4;
                }
              } else {
                return and__26228__auto____$3;
              }
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__39303__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__26228__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__26228__auto__)) {
            return cljs.core.every_QMARK_(function(and__26228__auto__) {
              return function(p1__39281_SHARP_) {
                var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__39281_SHARP_) : p1.call(null, p1__39281_SHARP_);
                if (cljs.core.truth_(and__26228__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__39281_SHARP_) : p2.call(null, p1__39281_SHARP_);
                } else {
                  return and__26228__auto____$1;
                }
              };
            }(and__26228__auto__), args);
          } else {
            return and__26228__auto__;
          }
        }());
      };
      var G__39303 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39304__i = 0, G__39304__a = new Array(arguments.length - 3);
          while (G__39304__i < G__39304__a.length) {
            G__39304__a[G__39304__i] = arguments[G__39304__i + 3];
            ++G__39304__i;
          }
          args = new cljs.core.IndexedSeq(G__39304__a, 0);
        }
        return G__39303__delegate.call(this, x, y, z, args);
      };
      G__39303.cljs$lang$maxFixedArity = 3;
      G__39303.cljs$lang$applyTo = function(arglist__39305) {
        var x = cljs.core.first(arglist__39305);
        arglist__39305 = cljs.core.next(arglist__39305);
        var y = cljs.core.first(arglist__39305);
        arglist__39305 = cljs.core.next(arglist__39305);
        var z = cljs.core.first(arglist__39305);
        var args = cljs.core.rest(arglist__39305);
        return G__39303__delegate(x, y, z, args);
      };
      G__39303.cljs$core$IFn$_invoke$arity$variadic = G__39303__delegate;
      return G__39303;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__39306 = null;
          if (arguments.length > 3) {
            var G__39307__i = 0, G__39307__a = new Array(arguments.length - 3);
            while (G__39307__i < G__39307__a.length) {
              G__39307__a[G__39307__i] = arguments[G__39307__i + 3];
              ++G__39307__i;
            }
            G__39306 = new cljs.core.IndexedSeq(G__39307__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39306);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              var and__26228__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__26228__auto____$3)) {
                var and__26228__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__26228__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__26228__auto____$4;
                }
              } else {
                return and__26228__auto____$3;
              }
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__26228__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__26228__auto__)) {
          var and__26228__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__26228__auto____$1)) {
            var and__26228__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__26228__auto____$2)) {
              var and__26228__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__26228__auto____$3)) {
                var and__26228__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__26228__auto____$4)) {
                  var and__26228__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__26228__auto____$5)) {
                    var and__26228__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__26228__auto____$6)) {
                      var and__26228__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__26228__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__26228__auto____$7;
                      }
                    } else {
                      return and__26228__auto____$6;
                    }
                  } else {
                    return and__26228__auto____$5;
                  }
                } else {
                  return and__26228__auto____$4;
                }
              } else {
                return and__26228__auto____$3;
              }
            } else {
              return and__26228__auto____$2;
            }
          } else {
            return and__26228__auto____$1;
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__39308__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__26228__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__26228__auto__)) {
            return cljs.core.every_QMARK_(function(and__26228__auto__) {
              return function(p1__39282_SHARP_) {
                var and__26228__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__39282_SHARP_) : p1.call(null, p1__39282_SHARP_);
                if (cljs.core.truth_(and__26228__auto____$1)) {
                  var and__26228__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__39282_SHARP_) : p2.call(null, p1__39282_SHARP_);
                  if (cljs.core.truth_(and__26228__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__39282_SHARP_) : p3.call(null, p1__39282_SHARP_);
                  } else {
                    return and__26228__auto____$2;
                  }
                } else {
                  return and__26228__auto____$1;
                }
              };
            }(and__26228__auto__), args);
          } else {
            return and__26228__auto__;
          }
        }());
      };
      var G__39308 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39309__i = 0, G__39309__a = new Array(arguments.length - 3);
          while (G__39309__i < G__39309__a.length) {
            G__39309__a[G__39309__i] = arguments[G__39309__i + 3];
            ++G__39309__i;
          }
          args = new cljs.core.IndexedSeq(G__39309__a, 0);
        }
        return G__39308__delegate.call(this, x, y, z, args);
      };
      G__39308.cljs$lang$maxFixedArity = 3;
      G__39308.cljs$lang$applyTo = function(arglist__39310) {
        var x = cljs.core.first(arglist__39310);
        arglist__39310 = cljs.core.next(arglist__39310);
        var y = cljs.core.first(arglist__39310);
        arglist__39310 = cljs.core.next(arglist__39310);
        var z = cljs.core.first(arglist__39310);
        var args = cljs.core.rest(arglist__39310);
        return G__39308__delegate(x, y, z, args);
      };
      G__39308.cljs$core$IFn$_invoke$arity$variadic = G__39308__delegate;
      return G__39308;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__39311 = null;
          if (arguments.length > 3) {
            var G__39312__i = 0, G__39312__a = new Array(arguments.length - 3);
            while (G__39312__i < G__39312__a.length) {
              G__39312__a[G__39312__i] = arguments[G__39312__i + 3];
              ++G__39312__i;
            }
            G__39311 = new cljs.core.IndexedSeq(G__39312__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39311);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__39283_SHARP_) {
            return p1__39283_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39283_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__39283_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__39284_SHARP_) {
            var and__26228__auto__ = p1__39284_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39284_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__39284_SHARP_.call(null, x);
            if (cljs.core.truth_(and__26228__auto__)) {
              return p1__39284_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39284_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__39284_SHARP_.call(null, y);
            } else {
              return and__26228__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__39285_SHARP_) {
            var and__26228__auto__ = p1__39285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39285_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__39285_SHARP_.call(null, x);
            if (cljs.core.truth_(and__26228__auto__)) {
              var and__26228__auto____$1 = p1__39285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39285_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__39285_SHARP_.call(null, y);
              if (cljs.core.truth_(and__26228__auto____$1)) {
                return p1__39285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39285_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__39285_SHARP_.call(null, z);
              } else {
                return and__26228__auto____$1;
              }
            } else {
              return and__26228__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__39313__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__26228__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__26228__auto__)) {
              return cljs.core.every_QMARK_(function(and__26228__auto__, ps__$1) {
                return function(p1__39286_SHARP_) {
                  return cljs.core.every_QMARK_(p1__39286_SHARP_, args);
                };
              }(and__26228__auto__, ps__$1), ps__$1);
            } else {
              return and__26228__auto__;
            }
          }());
        };
        var G__39313 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__39314__i = 0, G__39314__a = new Array(arguments.length - 3);
            while (G__39314__i < G__39314__a.length) {
              G__39314__a[G__39314__i] = arguments[G__39314__i + 3];
              ++G__39314__i;
            }
            args = new cljs.core.IndexedSeq(G__39314__a, 0);
          }
          return G__39313__delegate.call(this, x, y, z, args);
        };
        G__39313.cljs$lang$maxFixedArity = 3;
        G__39313.cljs$lang$applyTo = function(arglist__39315) {
          var x = cljs.core.first(arglist__39315);
          arglist__39315 = cljs.core.next(arglist__39315);
          var y = cljs.core.first(arglist__39315);
          arglist__39315 = cljs.core.next(arglist__39315);
          var z = cljs.core.first(arglist__39315);
          var args = cljs.core.rest(arglist__39315);
          return G__39313__delegate(x, y, z, args);
        };
        G__39313.cljs$core$IFn$_invoke$arity$variadic = G__39313__delegate;
        return G__39313;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__39316 = null;
            if (arguments.length > 3) {
              var G__39317__i = 0, G__39317__a = new Array(arguments.length - 3);
              while (G__39317__i < G__39317__a.length) {
                G__39317__a[G__39317__i] = arguments[G__39317__i + 3];
                ++G__39317__i;
              }
              G__39316 = new cljs.core.IndexedSeq(G__39317__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39316);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq39288) {
  var G__39289 = cljs.core.first(seq39288);
  var seq39288__$1 = cljs.core.next(seq39288);
  var G__39290 = cljs.core.first(seq39288__$1);
  var seq39288__$2 = cljs.core.next(seq39288__$1);
  var G__39291 = cljs.core.first(seq39288__$2);
  var seq39288__$3 = cljs.core.next(seq39288__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__39289, G__39290, G__39291, seq39288__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args39324 = [];
  var len__27315__auto___39331 = arguments.length;
  var i__27316__auto___39332 = 0;
  while (true) {
    if (i__27316__auto___39332 < len__27315__auto___39331) {
      args39324.push(arguments[i__27316__auto___39332]);
      var G__39333 = i__27316__auto___39332 + 1;
      i__27316__auto___39332 = G__39333;
      continue;
    } else {
    }
    break;
  }
  var G__39330 = args39324.length;
  switch(G__39330) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39324.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__26240__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__26240__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__39335__delegate = function(x, y, z, args) {
        var or__26240__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__39335 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39336__i = 0, G__39336__a = new Array(arguments.length - 3);
          while (G__39336__i < G__39336__a.length) {
            G__39336__a[G__39336__i] = arguments[G__39336__i + 3];
            ++G__39336__i;
          }
          args = new cljs.core.IndexedSeq(G__39336__a, 0);
        }
        return G__39335__delegate.call(this, x, y, z, args);
      };
      G__39335.cljs$lang$maxFixedArity = 3;
      G__39335.cljs$lang$applyTo = function(arglist__39337) {
        var x = cljs.core.first(arglist__39337);
        arglist__39337 = cljs.core.next(arglist__39337);
        var y = cljs.core.first(arglist__39337);
        arglist__39337 = cljs.core.next(arglist__39337);
        var z = cljs.core.first(arglist__39337);
        var args = cljs.core.rest(arglist__39337);
        return G__39335__delegate(x, y, z, args);
      };
      G__39335.cljs$core$IFn$_invoke$arity$variadic = G__39335__delegate;
      return G__39335;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__39338 = null;
          if (arguments.length > 3) {
            var G__39339__i = 0, G__39339__a = new Array(arguments.length - 3);
            while (G__39339__i < G__39339__a.length) {
              G__39339__a[G__39339__i] = arguments[G__39339__i + 3];
              ++G__39339__i;
            }
            G__39338 = new cljs.core.IndexedSeq(G__39339__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39338);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            var or__26240__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__26240__auto____$3)) {
              return or__26240__auto____$3;
            } else {
              var or__26240__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$4)) {
                return or__26240__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__39340__delegate = function(x, y, z, args) {
        var or__26240__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.some(function(or__26240__auto__) {
            return function(p1__39318_SHARP_) {
              var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__39318_SHARP_) : p1.call(null, p1__39318_SHARP_);
              if (cljs.core.truth_(or__26240__auto____$1)) {
                return or__26240__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__39318_SHARP_) : p2.call(null, p1__39318_SHARP_);
              }
            };
          }(or__26240__auto__), args);
        }
      };
      var G__39340 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39341__i = 0, G__39341__a = new Array(arguments.length - 3);
          while (G__39341__i < G__39341__a.length) {
            G__39341__a[G__39341__i] = arguments[G__39341__i + 3];
            ++G__39341__i;
          }
          args = new cljs.core.IndexedSeq(G__39341__a, 0);
        }
        return G__39340__delegate.call(this, x, y, z, args);
      };
      G__39340.cljs$lang$maxFixedArity = 3;
      G__39340.cljs$lang$applyTo = function(arglist__39342) {
        var x = cljs.core.first(arglist__39342);
        arglist__39342 = cljs.core.next(arglist__39342);
        var y = cljs.core.first(arglist__39342);
        arglist__39342 = cljs.core.next(arglist__39342);
        var z = cljs.core.first(arglist__39342);
        var args = cljs.core.rest(arglist__39342);
        return G__39340__delegate(x, y, z, args);
      };
      G__39340.cljs$core$IFn$_invoke$arity$variadic = G__39340__delegate;
      return G__39340;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__39343 = null;
          if (arguments.length > 3) {
            var G__39344__i = 0, G__39344__a = new Array(arguments.length - 3);
            while (G__39344__i < G__39344__a.length) {
              G__39344__a[G__39344__i] = arguments[G__39344__i + 3];
              ++G__39344__i;
            }
            G__39343 = new cljs.core.IndexedSeq(G__39344__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39343);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            var or__26240__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__26240__auto____$3)) {
              return or__26240__auto____$3;
            } else {
              var or__26240__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$4)) {
                return or__26240__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__26240__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        var or__26240__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__26240__auto____$1)) {
          return or__26240__auto____$1;
        } else {
          var or__26240__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__26240__auto____$2)) {
            return or__26240__auto____$2;
          } else {
            var or__26240__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__26240__auto____$3)) {
              return or__26240__auto____$3;
            } else {
              var or__26240__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$4)) {
                return or__26240__auto____$4;
              } else {
                var or__26240__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__26240__auto____$5)) {
                  return or__26240__auto____$5;
                } else {
                  var or__26240__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__26240__auto____$6)) {
                    return or__26240__auto____$6;
                  } else {
                    var or__26240__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__26240__auto____$7)) {
                      return or__26240__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__39345__delegate = function(x, y, z, args) {
        var or__26240__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.some(function(or__26240__auto__) {
            return function(p1__39319_SHARP_) {
              var or__26240__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__39319_SHARP_) : p1.call(null, p1__39319_SHARP_);
              if (cljs.core.truth_(or__26240__auto____$1)) {
                return or__26240__auto____$1;
              } else {
                var or__26240__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__39319_SHARP_) : p2.call(null, p1__39319_SHARP_);
                if (cljs.core.truth_(or__26240__auto____$2)) {
                  return or__26240__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__39319_SHARP_) : p3.call(null, p1__39319_SHARP_);
                }
              }
            };
          }(or__26240__auto__), args);
        }
      };
      var G__39345 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__39346__i = 0, G__39346__a = new Array(arguments.length - 3);
          while (G__39346__i < G__39346__a.length) {
            G__39346__a[G__39346__i] = arguments[G__39346__i + 3];
            ++G__39346__i;
          }
          args = new cljs.core.IndexedSeq(G__39346__a, 0);
        }
        return G__39345__delegate.call(this, x, y, z, args);
      };
      G__39345.cljs$lang$maxFixedArity = 3;
      G__39345.cljs$lang$applyTo = function(arglist__39347) {
        var x = cljs.core.first(arglist__39347);
        arglist__39347 = cljs.core.next(arglist__39347);
        var y = cljs.core.first(arglist__39347);
        arglist__39347 = cljs.core.next(arglist__39347);
        var z = cljs.core.first(arglist__39347);
        var args = cljs.core.rest(arglist__39347);
        return G__39345__delegate(x, y, z, args);
      };
      G__39345.cljs$core$IFn$_invoke$arity$variadic = G__39345__delegate;
      return G__39345;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__39348 = null;
          if (arguments.length > 3) {
            var G__39349__i = 0, G__39349__a = new Array(arguments.length - 3);
            while (G__39349__i < G__39349__a.length) {
              G__39349__a[G__39349__i] = arguments[G__39349__i + 3];
              ++G__39349__i;
            }
            G__39348 = new cljs.core.IndexedSeq(G__39349__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39348);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__39320_SHARP_) {
            return p1__39320_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39320_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__39320_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__39321_SHARP_) {
            var or__26240__auto__ = p1__39321_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39321_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__39321_SHARP_.call(null, x);
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return p1__39321_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39321_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__39321_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__39322_SHARP_) {
            var or__26240__auto__ = p1__39322_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39322_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__39322_SHARP_.call(null, x);
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              var or__26240__auto____$1 = p1__39322_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39322_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__39322_SHARP_.call(null, y);
              if (cljs.core.truth_(or__26240__auto____$1)) {
                return or__26240__auto____$1;
              } else {
                return p1__39322_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__39322_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__39322_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__39350__delegate = function(x, y, z, args) {
          var or__26240__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__26240__auto__)) {
            return or__26240__auto__;
          } else {
            return cljs.core.some(function(or__26240__auto__, ps__$1) {
              return function(p1__39323_SHARP_) {
                return cljs.core.some(p1__39323_SHARP_, args);
              };
            }(or__26240__auto__, ps__$1), ps__$1);
          }
        };
        var G__39350 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__39351__i = 0, G__39351__a = new Array(arguments.length - 3);
            while (G__39351__i < G__39351__a.length) {
              G__39351__a[G__39351__i] = arguments[G__39351__i + 3];
              ++G__39351__i;
            }
            args = new cljs.core.IndexedSeq(G__39351__a, 0);
          }
          return G__39350__delegate.call(this, x, y, z, args);
        };
        G__39350.cljs$lang$maxFixedArity = 3;
        G__39350.cljs$lang$applyTo = function(arglist__39352) {
          var x = cljs.core.first(arglist__39352);
          arglist__39352 = cljs.core.next(arglist__39352);
          var y = cljs.core.first(arglist__39352);
          arglist__39352 = cljs.core.next(arglist__39352);
          var z = cljs.core.first(arglist__39352);
          var args = cljs.core.rest(arglist__39352);
          return G__39350__delegate(x, y, z, args);
        };
        G__39350.cljs$core$IFn$_invoke$arity$variadic = G__39350__delegate;
        return G__39350;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__39353 = null;
            if (arguments.length > 3) {
              var G__39354__i = 0, G__39354__a = new Array(arguments.length - 3);
              while (G__39354__i < G__39354__a.length) {
                G__39354__a[G__39354__i] = arguments[G__39354__i + 3];
                ++G__39354__i;
              }
              G__39353 = new cljs.core.IndexedSeq(G__39354__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__39353);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq39325) {
  var G__39326 = cljs.core.first(seq39325);
  var seq39325__$1 = cljs.core.next(seq39325);
  var G__39327 = cljs.core.first(seq39325__$1);
  var seq39325__$2 = cljs.core.next(seq39325__$1);
  var G__39328 = cljs.core.first(seq39325__$2);
  var seq39325__$3 = cljs.core.next(seq39325__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__39326, G__39327, G__39328, seq39325__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args39356 = [];
  var len__27315__auto___39376 = arguments.length;
  var i__27316__auto___39377 = 0;
  while (true) {
    if (i__27316__auto___39377 < len__27315__auto___39376) {
      args39356.push(arguments[i__27316__auto___39377]);
      var G__39378 = i__27316__auto___39377 + 1;
      i__27316__auto___39377 = G__39378;
      continue;
    } else {
    }
    break;
  }
  var G__39363 = args39356.length;
  switch(G__39363) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39356.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__39380 = null;
      var G__39380__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__39380__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__39380__2 = function(result, input) {
        var G__39364 = result;
        var G__39365 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__39364, G__39365) : rf.call(null, G__39364, G__39365);
      };
      var G__39380__3 = function() {
        var G__39381__delegate = function(result, input, inputs) {
          var G__39366 = result;
          var G__39367 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__39366, G__39367) : rf.call(null, G__39366, G__39367);
        };
        var G__39381 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__39382__i = 0, G__39382__a = new Array(arguments.length - 2);
            while (G__39382__i < G__39382__a.length) {
              G__39382__a[G__39382__i] = arguments[G__39382__i + 2];
              ++G__39382__i;
            }
            inputs = new cljs.core.IndexedSeq(G__39382__a, 0);
          }
          return G__39381__delegate.call(this, result, input, inputs);
        };
        G__39381.cljs$lang$maxFixedArity = 2;
        G__39381.cljs$lang$applyTo = function(arglist__39383) {
          var result = cljs.core.first(arglist__39383);
          arglist__39383 = cljs.core.next(arglist__39383);
          var input = cljs.core.first(arglist__39383);
          var inputs = cljs.core.rest(arglist__39383);
          return G__39381__delegate(result, input, inputs);
        };
        G__39381.cljs$core$IFn$_invoke$arity$variadic = G__39381__delegate;
        return G__39381;
      }();
      G__39380 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__39380__0.call(this);
          case 1:
            return G__39380__1.call(this, result);
          case 2:
            return G__39380__2.call(this, result, input);
          default:
            var G__39384 = null;
            if (arguments.length > 2) {
              var G__39385__i = 0, G__39385__a = new Array(arguments.length - 2);
              while (G__39385__i < G__39385__a.length) {
                G__39385__a[G__39385__i] = arguments[G__39385__i + 2];
                ++G__39385__i;
              }
              G__39384 = new cljs.core.IndexedSeq(G__39385__a, 0);
            }
            return G__39380__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__39384);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39380.cljs$lang$maxFixedArity = 2;
      G__39380.cljs$lang$applyTo = G__39380__3.cljs$lang$applyTo;
      G__39380.cljs$core$IFn$_invoke$arity$0 = G__39380__0;
      G__39380.cljs$core$IFn$_invoke$arity$1 = G__39380__1;
      G__39380.cljs$core$IFn$_invoke$arity$2 = G__39380__2;
      G__39380.cljs$core$IFn$_invoke$arity$variadic = G__39380__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__39380;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__27155__auto___39386 = size;
        var i_39387 = 0;
        while (true) {
          if (i_39387 < n__27155__auto___39386) {
            cljs.core.chunk_append(b, function() {
              var G__39368 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_39387);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39368) : f.call(null, G__39368);
            }());
            var G__39388 = i_39387 + 1;
            i_39387 = G__39388;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__39369 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39369) : f.call(null, G__39369);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__39370 = cljs.core.first(s1);
        var G__39371 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39370, G__39371) : f.call(null, G__39370, G__39371);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__39372 = cljs.core.first(s1);
        var G__39373 = cljs.core.first(s2);
        var G__39374 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39372, G__39373, G__39374) : f.call(null, G__39372, G__39373, G__39374);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__39355_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__39355_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq39357) {
  var G__39358 = cljs.core.first(seq39357);
  var seq39357__$1 = cljs.core.next(seq39357);
  var G__39359 = cljs.core.first(seq39357__$1);
  var seq39357__$2 = cljs.core.next(seq39357__$1);
  var G__39360 = cljs.core.first(seq39357__$2);
  var seq39357__$3 = cljs.core.next(seq39357__$2);
  var G__39361 = cljs.core.first(seq39357__$3);
  var seq39357__$4 = cljs.core.next(seq39357__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__39358, G__39359, G__39360, G__39361, seq39357__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args39389 = [];
  var len__27315__auto___39392 = arguments.length;
  var i__27316__auto___39393 = 0;
  while (true) {
    if (i__27316__auto___39393 < len__27315__auto___39392) {
      args39389.push(arguments[i__27316__auto___39393]);
      var G__39394 = i__27316__auto___39393 + 1;
      i__27316__auto___39393 = G__39394;
      continue;
    } else {
    }
    break;
  }
  var G__39391 = args39389.length;
  switch(G__39391) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39389.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__39396 = null;
        var G__39396__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__39396__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__39396__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__39396 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39396__0.call(this);
            case 1:
              return G__39396__1.call(this, result);
            case 2:
              return G__39396__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39396.cljs$core$IFn$_invoke$arity$0 = G__39396__0;
        G__39396.cljs$core$IFn$_invoke$arity$1 = G__39396__1;
        G__39396.cljs$core$IFn$_invoke$arity$2 = G__39396__2;
        return G__39396;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args39397 = [];
  var len__27315__auto___39400 = arguments.length;
  var i__27316__auto___39401 = 0;
  while (true) {
    if (i__27316__auto___39401 < len__27315__auto___39400) {
      args39397.push(arguments[i__27316__auto___39401]);
      var G__39402 = i__27316__auto___39401 + 1;
      i__27316__auto___39401 = G__39402;
      continue;
    } else {
    }
    break;
  }
  var G__39399 = args39397.length;
  switch(G__39399) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39397.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__39404 = null;
        var G__39404__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__39404__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__39404__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__39404 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39404__0.call(this);
            case 1:
              return G__39404__1.call(this, result);
            case 2:
              return G__39404__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39404.cljs$core$IFn$_invoke$arity$0 = G__39404__0;
        G__39404.cljs$core$IFn$_invoke$arity$1 = G__39404__1;
        G__39404.cljs$core$IFn$_invoke$arity$2 = G__39404__2;
        return G__39404;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__39405 = n__$1 - 1;
        var G__39406 = cljs.core.rest(s);
        n__$1 = G__39405;
        coll__$1 = G__39406;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args39407 = [];
  var len__27315__auto___39410 = arguments.length;
  var i__27316__auto___39411 = 0;
  while (true) {
    if (i__27316__auto___39411 < len__27315__auto___39410) {
      args39407.push(arguments[i__27316__auto___39411]);
      var G__39412 = i__27316__auto___39411 + 1;
      i__27316__auto___39411 = G__39412;
      continue;
    } else {
    }
    break;
  }
  var G__39409 = args39407.length;
  switch(G__39409) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39407.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__39414 = cljs.core.next(s);
      var G__39415 = cljs.core.next(lead);
      s = G__39414;
      lead = G__39415;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args39416 = [];
  var len__27315__auto___39421 = arguments.length;
  var i__27316__auto___39422 = 0;
  while (true) {
    if (i__27316__auto___39422 < len__27315__auto___39421) {
      args39416.push(arguments[i__27316__auto___39422]);
      var G__39423 = i__27316__auto___39422 + 1;
      i__27316__auto___39422 = G__39423;
      continue;
    } else {
    }
    break;
  }
  var G__39418 = args39416.length;
  switch(G__39418) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39416.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__39425 = null;
        var G__39425__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__39425__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__39425__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__26228__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__26228__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__26228__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__39425 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39425__0.call(this);
            case 1:
              return G__39425__1.call(this, result);
            case 2:
              return G__39425__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39425.cljs$core$IFn$_invoke$arity$0 = G__39425__0;
        G__39425.cljs$core$IFn$_invoke$arity$1 = G__39425__1;
        G__39425.cljs$core$IFn$_invoke$arity$2 = G__39425__2;
        return G__39425;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__26228__auto__ = s;
        if (and__26228__auto__) {
          var G__39420 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__39420) : pred__$1.call(null, G__39420);
        } else {
          return and__26228__auto__;
        }
      }())) {
        var G__39426 = pred__$1;
        var G__39427 = cljs.core.rest(s);
        pred__$1 = G__39426;
        coll__$1 = G__39427;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args39428 = [];
  var len__27315__auto___39431 = arguments.length;
  var i__27316__auto___39432 = 0;
  while (true) {
    if (i__27316__auto___39432 < len__27315__auto___39431) {
      args39428.push(arguments[i__27316__auto___39432]);
      var G__39433 = i__27316__auto___39432 + 1;
      i__27316__auto___39432 = G__39433;
      continue;
    } else {
    }
    break;
  }
  var G__39430 = args39428.length;
  switch(G__39430) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39428.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args39435 = [];
  var len__27315__auto___39438 = arguments.length;
  var i__27316__auto___39439 = 0;
  while (true) {
    if (i__27316__auto___39439 < len__27315__auto___39438) {
      args39435.push(arguments[i__27316__auto___39439]);
      var G__39440 = i__27316__auto___39439 + 1;
      i__27316__auto___39439 = G__39440;
      continue;
    } else {
    }
    break;
  }
  var G__39437 = args39435.length;
  switch(G__39437) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39435.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args39444 = [];
  var len__27315__auto___39450 = arguments.length;
  var i__27316__auto___39451 = 0;
  while (true) {
    if (i__27316__auto___39451 < len__27315__auto___39450) {
      args39444.push(arguments[i__27316__auto___39451]);
      var G__39452 = i__27316__auto___39451 + 1;
      i__27316__auto___39451 = G__39452;
      continue;
    } else {
    }
    break;
  }
  var G__39449 = args39444.length;
  switch(G__39449) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39444.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27334__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq39445) {
  var G__39446 = cljs.core.first(seq39445);
  var seq39445__$1 = cljs.core.next(seq39445);
  var G__39447 = cljs.core.first(seq39445__$1);
  var seq39445__$2 = cljs.core.next(seq39445__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__39446, G__39447, seq39445__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args39454 = [];
  var len__27315__auto___39457 = arguments.length;
  var i__27316__auto___39458 = 0;
  while (true) {
    if (i__27316__auto___39458 < len__27315__auto___39457) {
      args39454.push(arguments[i__27316__auto___39458]);
      var G__39459 = i__27316__auto___39458 + 1;
      i__27316__auto___39458 = G__39459;
      continue;
    } else {
    }
    break;
  }
  var G__39456 = args39454.length;
  switch(G__39456) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39454.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__39461 = null;
        var G__39461__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__39461__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__39461__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__39461 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__39461__0.call(this);
            case 1:
              return G__39461__1.call(this, result);
            case 2:
              return G__39461__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__39461.cljs$core$IFn$_invoke$arity$0 = G__39461__0;
        G__39461.cljs$core$IFn$_invoke$arity$1 = G__39461__1;
        G__39461.cljs$core$IFn$_invoke$arity$2 = G__39461__2;
        return G__39461;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args39470 = [];
  var len__27315__auto___39475 = arguments.length;
  var i__27316__auto___39476 = 0;
  while (true) {
    if (i__27316__auto___39476 < len__27315__auto___39475) {
      args39470.push(arguments[i__27316__auto___39476]);
      var G__39477 = i__27316__auto___39476 + 1;
      i__27316__auto___39476 = G__39477;
      continue;
    } else {
    }
    break;
  }
  var G__39474 = args39470.length;
  switch(G__39474) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39470.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq39471) {
  var G__39472 = cljs.core.first(seq39471);
  var seq39471__$1 = cljs.core.next(seq39471);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__39472, seq39471__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args39479 = [];
  var len__27315__auto___39483 = arguments.length;
  var i__27316__auto___39484 = 0;
  while (true) {
    if (i__27316__auto___39484 < len__27315__auto___39483) {
      args39479.push(arguments[i__27316__auto___39484]);
      var G__39485 = i__27316__auto___39484 + 1;
      i__27316__auto___39484 = G__39485;
      continue;
    } else {
    }
    break;
  }
  var G__39481 = args39479.length;
  switch(G__39481) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39479.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__39487 = null;
      var G__39487__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__39487__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__39487__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__39487 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__39487__0.call(this);
          case 1:
            return G__39487__1.call(this, result);
          case 2:
            return G__39487__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__39487.cljs$core$IFn$_invoke$arity$0 = G__39487__0;
      G__39487.cljs$core$IFn$_invoke$arity$1 = G__39487__1;
      G__39487.cljs$core$IFn$_invoke$arity$2 = G__39487__2;
      return G__39487;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__27155__auto___39488 = size;
        var i_39489 = 0;
        while (true) {
          if (i_39489 < n__27155__auto___39488) {
            if (cljs.core.truth_(function() {
              var G__39482 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_39489);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__39482) : pred.call(null, G__39482);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_39489));
            } else {
            }
            var G__39490 = i_39489 + 1;
            i_39489 = G__39490;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args39491 = [];
  var len__27315__auto___39494 = arguments.length;
  var i__27316__auto___39495 = 0;
  while (true) {
    if (i__27316__auto___39495 < len__27315__auto___39494) {
      args39491.push(arguments[i__27316__auto___39495]);
      var G__39496 = i__27316__auto___39495 + 1;
      i__27316__auto___39495 = G__39496;
      continue;
    } else {
    }
    break;
  }
  var G__39493 = args39491.length;
  switch(G__39493) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39491.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__39498_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__39498_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args39499 = [];
  var len__27315__auto___39504 = arguments.length;
  var i__27316__auto___39505 = 0;
  while (true) {
    if (i__27316__auto___39505 < len__27315__auto___39504) {
      args39499.push(arguments[i__27316__auto___39505]);
      var G__39506 = i__27316__auto___39505 + 1;
      i__27316__auto___39505 = G__39506;
      continue;
    } else {
    }
    break;
  }
  var G__39501 = args39499.length;
  switch(G__39501) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39499.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args39508 = [];
  var len__27315__auto___39516 = arguments.length;
  var i__27316__auto___39517 = 0;
  while (true) {
    if (i__27316__auto___39517 < len__27315__auto___39516) {
      args39508.push(arguments[i__27316__auto___39517]);
      var G__39518 = i__27316__auto___39517 + 1;
      i__27316__auto___39517 = G__39518;
      continue;
    } else {
    }
    break;
  }
  var G__39515 = args39508.length;
  switch(G__39515) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39508.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27334__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq39509) {
  var G__39510 = cljs.core.first(seq39509);
  var seq39509__$1 = cljs.core.next(seq39509);
  var G__39511 = cljs.core.first(seq39509__$1);
  var seq39509__$2 = cljs.core.next(seq39509__$1);
  var G__39512 = cljs.core.first(seq39509__$2);
  var seq39509__$3 = cljs.core.next(seq39509__$2);
  var G__39513 = cljs.core.first(seq39509__$3);
  var seq39509__$4 = cljs.core.next(seq39509__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__39510, G__39511, G__39512, G__39513, seq39509__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args39520 = [];
  var len__27315__auto___39523 = arguments.length;
  var i__27316__auto___39524 = 0;
  while (true) {
    if (i__27316__auto___39524 < len__27315__auto___39523) {
      args39520.push(arguments[i__27316__auto___39524]);
      var G__39525 = i__27316__auto___39524 + 1;
      i__27316__auto___39524 = G__39525;
      continue;
    } else {
    }
    break;
  }
  var G__39522 = args39520.length;
  switch(G__39522) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39520.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        var x__27074__auto__ = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad));
        return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args39527 = [];
  var len__27315__auto___39530 = arguments.length;
  var i__27316__auto___39531 = 0;
  while (true) {
    if (i__27316__auto___39531 < len__27315__auto___39530) {
      args39527.push(arguments[i__27316__auto___39531]);
      var G__39532 = i__27316__auto___39531 + 1;
      i__27316__auto___39531 = G__39532;
      continue;
    } else {
    }
    break;
  }
  var G__39529 = args39527.length;
  switch(G__39529) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39527.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__39534 = sentinel;
        var G__39535 = m__$2;
        var G__39536 = cljs.core.next(ks__$1);
        sentinel = G__39534;
        m__$1 = G__39535;
        ks__$1 = G__39536;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__39537, v) {
  var vec__39544 = p__39537;
  var seq__39545 = cljs.core.seq(vec__39544);
  var first__39546 = cljs.core.first(seq__39545);
  var seq__39545__$1 = cljs.core.next(seq__39545);
  var k = first__39546;
  var ks = seq__39545__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args39547 = [];
  var len__27315__auto___39587 = arguments.length;
  var i__27316__auto___39588 = 0;
  while (true) {
    if (i__27316__auto___39588 < len__27315__auto___39587) {
      args39547.push(arguments[i__27316__auto___39588]);
      var G__39589 = i__27316__auto___39588 + 1;
      i__27316__auto___39588 = G__39589;
      continue;
    } else {
    }
    break;
  }
  var G__39556 = args39547.length;
  switch(G__39556) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39547.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__27334__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__39557, f) {
  var vec__39558 = p__39557;
  var seq__39559 = cljs.core.seq(vec__39558);
  var first__39560 = cljs.core.first(seq__39559);
  var seq__39559__$1 = cljs.core.next(seq__39559);
  var k = first__39560;
  var ks = seq__39559__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__39561 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39561) : f.call(null, G__39561);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__39562, f, a) {
  var vec__39563 = p__39562;
  var seq__39564 = cljs.core.seq(vec__39563);
  var first__39565 = cljs.core.first(seq__39564);
  var seq__39564__$1 = cljs.core.next(seq__39564);
  var k = first__39565;
  var ks = seq__39564__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__39566 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__39567 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39566, G__39567) : f.call(null, G__39566, G__39567);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__39568, f, a, b) {
  var vec__39569 = p__39568;
  var seq__39570 = cljs.core.seq(vec__39569);
  var first__39571 = cljs.core.first(seq__39570);
  var seq__39570__$1 = cljs.core.next(seq__39570);
  var k = first__39571;
  var ks = seq__39570__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__39572 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__39573 = a;
      var G__39574 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39572, G__39573, G__39574) : f.call(null, G__39572, G__39573, G__39574);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__39575, f, a, b, c) {
  var vec__39576 = p__39575;
  var seq__39577 = cljs.core.seq(vec__39576);
  var first__39578 = cljs.core.first(seq__39577);
  var seq__39577__$1 = cljs.core.next(seq__39577);
  var k = first__39578;
  var ks = seq__39577__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__39579 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__39580 = a;
      var G__39581 = b;
      var G__39582 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39579, G__39580, G__39581, G__39582) : f.call(null, G__39579, G__39580, G__39581, G__39582);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__39583, f, a, b, c, args) {
  var vec__39584 = p__39583;
  var seq__39585 = cljs.core.seq(vec__39584);
  var first__39586 = cljs.core.first(seq__39585);
  var seq__39585__$1 = cljs.core.next(seq__39585);
  var k = first__39586;
  var ks = seq__39585__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq39548) {
  var G__39549 = cljs.core.first(seq39548);
  var seq39548__$1 = cljs.core.next(seq39548);
  var G__39550 = cljs.core.first(seq39548__$1);
  var seq39548__$2 = cljs.core.next(seq39548__$1);
  var G__39551 = cljs.core.first(seq39548__$2);
  var seq39548__$3 = cljs.core.next(seq39548__$2);
  var G__39552 = cljs.core.first(seq39548__$3);
  var seq39548__$4 = cljs.core.next(seq39548__$3);
  var G__39553 = cljs.core.first(seq39548__$4);
  var seq39548__$5 = cljs.core.next(seq39548__$4);
  var G__39554 = cljs.core.first(seq39548__$5);
  var seq39548__$6 = cljs.core.next(seq39548__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__39549, G__39550, G__39551, G__39552, G__39553, G__39554, seq39548__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args39591 = [];
  var len__27315__auto___39611 = arguments.length;
  var i__27316__auto___39612 = 0;
  while (true) {
    if (i__27316__auto___39612 < len__27315__auto___39611) {
      args39591.push(arguments[i__27316__auto___39612]);
      var G__39613 = i__27316__auto___39612 + 1;
      i__27316__auto___39612 = G__39613;
      continue;
    } else {
    }
    break;
  }
  var G__39600 = args39591.length;
  switch(G__39600) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args39591.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__27334__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__39601 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39601) : f.call(null, G__39601);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__39602 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__39603 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39602, G__39603) : f.call(null, G__39602, G__39603);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__39604 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__39605 = x;
    var G__39606 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39604, G__39605, G__39606) : f.call(null, G__39604, G__39605, G__39606);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__39607 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__39608 = x;
    var G__39609 = y;
    var G__39610 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__39607, G__39608, G__39609, G__39610) : f.call(null, G__39607, G__39608, G__39609, G__39610);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq39592) {
  var G__39593 = cljs.core.first(seq39592);
  var seq39592__$1 = cljs.core.next(seq39592);
  var G__39594 = cljs.core.first(seq39592__$1);
  var seq39592__$2 = cljs.core.next(seq39592__$1);
  var G__39595 = cljs.core.first(seq39592__$2);
  var seq39592__$3 = cljs.core.next(seq39592__$2);
  var G__39596 = cljs.core.first(seq39592__$3);
  var seq39592__$4 = cljs.core.next(seq39592__$3);
  var G__39597 = cljs.core.first(seq39592__$4);
  var seq39592__$5 = cljs.core.next(seq39592__$4);
  var G__39598 = cljs.core.first(seq39592__$5);
  var seq39592__$6 = cljs.core.next(seq39592__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__39593, G__39594, G__39595, G__39596, G__39597, G__39598, seq39592__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__39615 = ll - 5;
      var G__39616 = r;
      ll = G__39615;
      ret = G__39616;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__39621 = cljs.core.pv_aget(node, 0);
      var G__39622 = level - 5;
      node = G__39621;
      level = G__39622;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__39623 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__39624 = level - 5;
        node = G__39623;
        level = G__39624;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__39643 = null;
  var G__39643__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39643__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39643 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39643__1.call(this, x);
      case 2:
        return G__39643__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39643.cljs$core$IFn$_invoke$arity$1 = G__39643__1;
  G__39643.cljs$core$IFn$_invoke$arity$2 = G__39643__2;
  return G__39643;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__39644 = null;
  var G__39644__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39644__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39644 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39644__1.call(this, x);
      case 2:
        return G__39644__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39644.cljs$core$IFn$_invoke$arity$1 = G__39644__1;
  G__39644.cljs$core$IFn$_invoke$arity$2 = G__39644__2;
  return G__39644;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__39634 = init__$2;
              var G__39635 = j + i;
              var G__39636 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39634, G__39635, G__39636) : f.call(null, G__39634, G__39635, G__39636);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__39645 = j + 1;
              var G__39646 = init__$3;
              j = G__39645;
              init__$2 = G__39646;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__39647 = i + len;
        var G__39648 = init__$2;
        i = G__39647;
        init__$1 = G__39648;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__39637 = init__$2;
              var G__39638 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__39637, G__39638) : f.call(null, G__39637, G__39638);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__39649 = j + 1;
              var G__39650 = init__$3;
              j = G__39649;
              init__$2 = G__39650;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__39651 = i + len;
        var G__39652 = init__$2;
        i = G__39651;
        init__$1 = G__39652;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__39639 = coll__$1;
      var G__39640 = cljs.core.first_array_for_longvec(coll__$1);
      var G__39641 = 0;
      var G__39642 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__39639, G__39640, G__39641, G__39642) : cljs.core.chunked_seq.call(null, G__39639, G__39640, G__39641, G__39642);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__27155__auto___39653 = len;
    var i_39654 = 0;
    while (true) {
      if (i_39654 < n__27155__auto___39653) {
        new_tail[i_39654] = self__.tail[i_39654];
        var G__39655 = i_39654 + 1;
        i_39654 = G__39655;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__39656 = null;
  var G__39656__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__39656__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__39656 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39656__2.call(this, self__, k);
      case 3:
        return G__39656__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39656.cljs$core$IFn$_invoke$arity$2 = G__39656__2;
  G__39656.cljs$core$IFn$_invoke$arity$3 = G__39656__3;
  return G__39656;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args39633) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39633)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__39657 = i + 1;
        var G__39658 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__39657;
        out = G__39658;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___39660 = arguments.length;
  var i__27316__auto___39661 = 0;
  while (true) {
    if (i__27316__auto___39661 < len__27315__auto___39660) {
      args__27322__auto__.push(arguments[i__27316__auto___39661]);
      var G__39662 = i__27316__auto___39661 + 1;
      i__27316__auto___39661 = G__39662;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq39659) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq39659));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__39685 = null;
  var G__39685__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39685__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39685 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39685__1.call(this, x);
      case 2:
        return G__39685__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39685.cljs$core$IFn$_invoke$arity$1 = G__39685__1;
  G__39685.cljs$core$IFn$_invoke$arity$2 = G__39685__2;
  return G__39685;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__39686 = null;
  var G__39686__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39686__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39686 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39686__1.call(this, x);
      case 2:
        return G__39686__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39686.cljs$core$IFn$_invoke$arity$1 = G__39686__1;
  G__39686.cljs$core$IFn$_invoke$arity$2 = G__39686__2;
  return G__39686;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__39663 = self__.vec;
      var G__39664 = self__.node;
      var G__39665 = self__.i;
      var G__39666 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__39663, G__39664, G__39665, G__39666) : cljs.core.chunked_seq.call(null, G__39663, G__39664, G__39665, G__39666);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__39667 = self__.vec;
    var G__39668 = self__.i + self__.off;
    var G__39669 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__39667, G__39668, G__39669) : cljs.core.subvec.call(null, G__39667, G__39668, G__39669);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__39670 = self__.vec;
    var G__39671 = self__.i + self__.off;
    var G__39672 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__39670, G__39671, G__39672) : cljs.core.subvec.call(null, G__39670, G__39671, G__39672);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__39673 = self__.vec;
      var G__39674 = self__.node;
      var G__39675 = self__.i;
      var G__39676 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__39673, G__39674, G__39675, G__39676) : cljs.core.chunked_seq.call(null, G__39673, G__39674, G__39675, G__39676);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__39677 = self__.vec;
    var G__39678 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__39679 = end;
    var G__39680 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__39677, G__39678, G__39679, G__39680) : cljs.core.chunked_seq.call(null, G__39677, G__39678, G__39679, G__39680);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__39681 = self__.vec;
    var G__39682 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__39683 = end;
    var G__39684 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__39681, G__39682, G__39683, G__39684) : cljs.core.chunked_seq.call(null, G__39681, G__39682, G__39683, G__39684);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args39687 = [];
  var len__27315__auto___39690 = arguments.length;
  var i__27316__auto___39691 = 0;
  while (true) {
    if (i__27316__auto___39691 < len__27315__auto___39690) {
      args39687.push(arguments[i__27316__auto___39691]);
      var G__39692 = i__27316__auto___39691 + 1;
      i__27316__auto___39691 = G__39692;
      continue;
    } else {
    }
    break;
  }
  var G__39689 = args39687.length;
  switch(G__39689) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39687.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__39714 = null;
  var G__39714__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39714__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__39714 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__39714__1.call(this, x);
      case 2:
        return G__39714__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39714.cljs$core$IFn$_invoke$arity$1 = G__39714__1;
  G__39714.cljs$core$IFn$_invoke$arity$2 = G__39714__2;
  return G__39714;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__39715 = null;
  var G__39715__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39715__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__39715 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__39715__1.call(this, x);
      case 2:
        return G__39715__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39715.cljs$core$IFn$_invoke$arity$1 = G__39715__1;
  G__39715.cljs$core$IFn$_invoke$arity$2 = G__39715__2;
  return G__39715;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__39695 = init__$1;
        var G__39696 = j;
        var G__39697 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39695, G__39696, G__39697) : f.call(null, G__39695, G__39696, G__39697);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__39716 = i + 1;
        var G__39717 = j + 1;
        var G__39718 = init__$2;
        i = G__39716;
        j = G__39717;
        init__$1 = G__39718;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__39698 = self__.meta;
  var G__39699 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__39700 = self__.start;
  var G__39701 = function() {
    var x__26571__auto__ = self__.end;
    var y__26572__auto__ = v_pos + 1;
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var G__39702 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__39698, G__39699, G__39700, G__39701, G__39702) : cljs.core.build_subvec.call(null, G__39698, G__39699, G__39700, G__39701, G__39702);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__39703 = self__.meta;
    var G__39704 = self__.v;
    var G__39705 = self__.start;
    var G__39706 = self__.end - 1;
    var G__39707 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__39703, G__39704, G__39705, G__39706, G__39707) : cljs.core.build_subvec.call(null, G__39703, G__39704, G__39705, G__39706, G__39707);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__39709 = self__.meta;
  var G__39710 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__39711 = self__.start;
  var G__39712 = self__.end + 1;
  var G__39713 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__39709, G__39710, G__39711, G__39712, G__39713) : cljs.core.build_subvec.call(null, G__39709, G__39710, G__39711, G__39712, G__39713);
};
cljs.core.Subvec.prototype.call = function() {
  var G__39719 = null;
  var G__39719__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__39719__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__39719 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39719__2.call(this, self__, k);
      case 3:
        return G__39719__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39719.cljs$core$IFn$_invoke$arity$2 = G__39719__2;
  G__39719.cljs$core$IFn$_invoke$arity$3 = G__39719__3;
  return G__39719;
}();
cljs.core.Subvec.prototype.apply = function(self__, args39694) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39694)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__39720 = meta;
      var G__39721 = v.v;
      var G__39722 = v.start + start;
      var G__39723 = v.start + end;
      var G__39724 = __hash;
      meta = G__39720;
      v = G__39721;
      start = G__39722;
      end = G__39723;
      __hash = G__39724;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args39725 = [];
  var len__27315__auto___39728 = arguments.length;
  var i__27316__auto___39729 = 0;
  while (true) {
    if (i__27316__auto___39729 < len__27315__auto___39728) {
      args39725.push(arguments[i__27316__auto___39729]);
      var G__39730 = i__27316__auto___39729 + 1;
      i__27316__auto___39729 = G__39730;
      continue;
    } else {
    }
    break;
  }
  var G__39727 = args39725.length;
  switch(G__39727) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39725.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__39743 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__39744 = level - 5;
        node = G__39743;
        level = G__39744;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__39748 = null;
  var G__39748__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39748__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39748 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39748__2.call(this, self__, k);
      case 3:
        return G__39748__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39748.cljs$core$IFn$_invoke$arity$2 = G__39748__2;
  G__39748.cljs$core$IFn$_invoke$arity$3 = G__39748__3;
  return G__39748;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args39745) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39745)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__26240__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    var and__26228__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__26228__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__26228__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__39749 = null;
  var G__39749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39749__1.call(this, x);
      case 2:
        return G__39749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39749.cljs$core$IFn$_invoke$arity$1 = G__39749__1;
  G__39749.cljs$core$IFn$_invoke$arity$2 = G__39749__2;
  return G__39749;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__39750 = null;
  var G__39750__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39750__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39750 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39750__1.call(this, x);
      case 2:
        return G__39750__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39750.cljs$core$IFn$_invoke$arity$1 = G__39750__1;
  G__39750.cljs$core$IFn$_invoke$arity$2 = G__39750__2;
  return G__39750;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__39751 = null;
  var G__39751__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39751__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39751 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39751__1.call(this, x);
      case 2:
        return G__39751__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39751.cljs$core$IFn$_invoke$arity$1 = G__39751__1;
  G__39751.cljs$core$IFn$_invoke$arity$2 = G__39751__2;
  return G__39751;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__39752 = null;
  var G__39752__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__39752__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39752 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39752__1.call(this, x);
      case 2:
        return G__39752__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39752.cljs$core$IFn$_invoke$arity$1 = G__39752__1;
  G__39752.cljs$core$IFn$_invoke$arity$2 = G__39752__2;
  return G__39752;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = self__.front;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__26240__auto__ = self__.rear;
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__39753 = i + incr;
        i = G__39753;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__39754 = i + 1;
      var G__39755 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__39754;
      out = G__39755;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_39760 = 0;
  while (true) {
    if (i_39760 < l) {
      var k_39761 = ks[i_39760];
      new_obj[k_39761] = obj[k_39761];
      var G__39762 = i_39760 + 1;
      i_39760 = G__39762;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__39765 = init__$1;
        var G__39766 = k;
        var G__39767 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39765, G__39766, G__39767) : f.call(null, G__39765, G__39766, G__39767);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__39768 = cljs.core.rest(keys__$1);
        var G__39769 = init__$2;
        keys__$1 = G__39768;
        init__$1 = G__39769;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__39763_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__39763_SHARP_, self__.strobj[p1__39763_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__39770 = null;
  var G__39770__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39770__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39770 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39770__2.call(this, self__, k);
      case 3:
        return G__39770__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39770.cljs$core$IFn$_invoke$arity$2 = G__39770__2;
  G__39770.cljs$core$IFn$_invoke$arity$3 = G__39770__3;
  return G__39770;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args39764) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39764)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__26240__auto__ = self__.i < self__.base_count;
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__39773 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39773, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39773, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__39776 = i + 2;
        i = G__39776;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__39777 = i + 2;
        i = G__39777;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__39778 = i + 2;
        i = G__39778;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__39779 = i + 2;
        i = G__39779;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__39780 = i + 2;
        i = G__39780;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_39781 = 0;
  while (true) {
    if (i_39781 < l) {
      narr[i_39781] = arr[i_39781];
      var G__39782 = i_39781 + 1;
      i_39781 = G__39782;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__39783 = null;
  var G__39783__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39783__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39783 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39783__1.call(this, x);
      case 2:
        return G__39783__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39783.cljs$core$IFn$_invoke$arity$1 = G__39783__1;
  G__39783.cljs$core$IFn$_invoke$arity$2 = G__39783__2;
  return G__39783;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__39784 = null;
  var G__39784__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39784__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39784 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39784__1.call(this, x);
      case 2:
        return G__39784__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39784.cljs$core$IFn$_invoke$arity$1 = G__39784__1;
  G__39784.cljs$core$IFn$_invoke$arity$2 = G__39784__2;
  return G__39784;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__39786 = cljs.core.seq(coll);
  var chunk__39787 = null;
  var count__39788 = 0;
  var i__39789 = 0;
  while (true) {
    if (i__39789 < count__39788) {
      var vec__39790 = chunk__39787.cljs$core$IIndexed$_nth$arity$2(null, i__39789);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39790, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39790, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__39803 = seq__39786;
      var G__39804 = chunk__39787;
      var G__39805 = count__39788;
      var G__39806 = i__39789 + 1;
      seq__39786 = G__39803;
      chunk__39787 = G__39804;
      count__39788 = G__39805;
      i__39789 = G__39806;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__39786);
      if (temp__4657__auto__) {
        var seq__39786__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__39786__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__39786__$1);
          var G__39807 = cljs.core.chunk_rest(seq__39786__$1);
          var G__39808 = c__27051__auto__;
          var G__39809 = cljs.core.count(c__27051__auto__);
          var G__39810 = 0;
          seq__39786 = G__39807;
          chunk__39787 = G__39808;
          count__39788 = G__39809;
          i__39789 = G__39810;
          continue;
        } else {
          var vec__39793 = cljs.core.first(seq__39786__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39793, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39793, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__39811 = cljs.core.next(seq__39786__$1);
          var G__39812 = null;
          var G__39813 = 0;
          var G__39814 = 0;
          seq__39786 = G__39811;
          chunk__39787 = G__39812;
          count__39788 = G__39813;
          i__39789 = G__39814;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__39796 = init__$1;
        var G__39797 = self__.arr[i];
        var G__39798 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39796, G__39797, G__39798) : f.call(null, G__39796, G__39797, G__39798);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__39815 = i + 2;
        var G__39816 = init__$2;
        i = G__39815;
        init__$1 = G__39816;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__39817 = i + 2;
              i = G__39817;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__39818 = s + 2;
            var G__39819 = d;
            s = G__39818;
            d = G__39819;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__39820 = s + 2;
            var G__39821 = d + 2;
            s = G__39820;
            d = G__39821;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__39802 = cljs.core.aclone(self__.arr);
        G__39802[idx + 1] = v;
        return G__39802;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__39822 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__39823 = cljs.core.next(es);
          ret = G__39822;
          es = G__39823;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__39824 = null;
  var G__39824__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39824__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39824 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39824__2.call(this, self__, k);
      case 3:
        return G__39824__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39824.cljs$core$IFn$_invoke$arity$2 = G__39824__2;
  G__39824.cljs$core$IFn$_invoke$arity$3 = G__39824__3;
  return G__39824;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args39785) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39785)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_39825 = 0;
    while (true) {
      if (i_39825 < arr__$1.length) {
        var k_39826 = arr__$1[i_39825];
        var v_39827 = arr__$1[i_39825 + 1];
        var idx_39828 = cljs.core.array_index_of(ret, k_39826);
        if (idx_39828 === -1) {
          ret.push(k_39826);
          ret.push(v_39827);
        } else {
        }
        var G__39829 = i_39825 + 2;
        i_39825 = G__39829;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__39832 = cljs.core.next(es);
          var G__39833 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__39832;
          tcoll__$2 = G__39833;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__39831_39834 = self__.arr;
      G__39831_39834.pop();
      G__39831_39834.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__39835 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__39836 = i + 2;
      out = G__39835;
      i = G__39836;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args39837 = [];
  var len__27315__auto___39842 = arguments.length;
  var i__27316__auto___39843 = 0;
  while (true) {
    if (i__27316__auto___39843 < len__27315__auto___39842) {
      args39837.push(arguments[i__27316__auto___39843]);
      var G__39844 = i__27316__auto___39843 + 1;
      i__27316__auto___39843 = G__39844;
      continue;
    } else {
    }
    break;
  }
  var G__39839 = args39837.length;
  switch(G__39839) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39837.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__39840 = cljs.core.aclone(arr);
  G__39840[i] = a;
  return G__39840;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__39841 = cljs.core.aclone(arr);
  G__39841[i] = a;
  G__39841[j] = b;
  return G__39841;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args39846 = [];
  var len__27315__auto___39849 = arguments.length;
  var i__27316__auto___39850 = 0;
  while (true) {
    if (i__27316__auto___39850 < len__27315__auto___39849) {
      args39846.push(arguments[i__27316__auto___39850]);
      var G__39851 = i__27316__auto___39850 + 1;
      i__27316__auto___39850 = G__39851;
      continue;
    } else {
    }
    break;
  }
  var G__39848 = args39846.length;
  switch(G__39848) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39846.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__39856 = init__$1;
          var G__39857 = k;
          var G__39858 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39856, G__39857, G__39858) : f.call(null, G__39856, G__39857, G__39858);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__39859 = i + 2;
        var G__39860 = init__$2;
        i = G__39859;
        init__$1 = G__39860;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__26240__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__26240__auto____$1) {
      return or__26240__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_39874 = 0;
        var j_39875 = 0;
        while (true) {
          if (i_39874 < 32) {
            if ((self__.bitmap >>> i_39874 & 1) === 0) {
              var G__39876 = i_39874 + 1;
              var G__39877 = j_39875;
              i_39874 = G__39876;
              j_39875 = G__39877;
              continue;
            } else {
              nodes[i_39874] = !(self__.arr[j_39875] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_39875]), self__.arr[j_39875], self__.arr[j_39875 + 1], added_leaf_QMARK_) : self__.arr[j_39875 + 1];
              var G__39878 = i_39874 + 1;
              var G__39879 = j_39875 + 2;
              i_39874 = G__39878;
              j_39875 = G__39879;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__39861 = edit__$1;
          var G__39862 = shift + 5;
          var G__39863 = key_or_nil;
          var G__39864 = val_or_node;
          var G__39865 = hash;
          var G__39866 = key;
          var G__39867 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__39861, G__39862, G__39863, G__39864, G__39865, G__39866, G__39867) : cljs.core.create_node.call(null, G__39861, G__39862, G__39863, G__39864, G__39865, G__39866, G__39867);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_39880 = 0;
      var j_39881 = 0;
      while (true) {
        if (i_39880 < 32) {
          if ((self__.bitmap >>> i_39880 & 1) === 0) {
            var G__39882 = i_39880 + 1;
            var G__39883 = j_39881;
            i_39880 = G__39882;
            j_39881 = G__39883;
            continue;
          } else {
            nodes[i_39880] = !(self__.arr[j_39881] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_39881]), self__.arr[j_39881], self__.arr[j_39881 + 1], added_leaf_QMARK_) : self__.arr[j_39881 + 1];
            var G__39884 = i_39880 + 1;
            var G__39885 = j_39881 + 2;
            i_39880 = G__39884;
            j_39881 = G__39885;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__39868 = shift + 5;
          var G__39869 = key_or_nil;
          var G__39870 = val_or_node;
          var G__39871 = hash;
          var G__39872 = key;
          var G__39873 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__39868, G__39869, G__39870, G__39871, G__39872, G__39873) : cljs.core.create_node.call(null, G__39868, G__39869, G__39870, G__39871, G__39872, G__39873);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__39886 = i + 1;
        var G__39887 = j + 2;
        var G__39888 = bitmap | 1 << i;
        i = G__39886;
        j = G__39887;
        bitmap = G__39888;
        continue;
      } else {
        var G__39889 = i + 1;
        var G__39890 = j;
        var G__39891 = bitmap;
        i = G__39889;
        j = G__39890;
        bitmap = G__39891;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__39892 = i + 1;
          var G__39893 = init__$2;
          i = G__39892;
          init__$1 = G__39893;
          continue;
        }
      } else {
        var G__39894 = i + 1;
        var G__39895 = init__$1;
        i = G__39894;
        init__$1 = G__39895;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__39896 = i + 2;
        i = G__39896;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args39897 = [];
  var len__27315__auto___39900 = arguments.length;
  var i__27316__auto___39901 = 0;
  while (true) {
    if (i__27316__auto___39901 < len__27315__auto___39900) {
      args39897.push(arguments[i__27316__auto___39901]);
      var G__39902 = i__27316__auto___39901 + 1;
      i__27316__auto___39901 = G__39902;
      continue;
    } else {
    }
    break;
  }
  var G__39899 = args39897.length;
  switch(G__39899) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39897.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__39910 = null;
  var G__39910__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39910__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39910 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39910__1.call(this, x);
      case 2:
        return G__39910__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39910.cljs$core$IFn$_invoke$arity$1 = G__39910__1;
  G__39910.cljs$core$IFn$_invoke$arity$2 = G__39910__2;
  return G__39910;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__39911 = null;
  var G__39911__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39911__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39911 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39911__1.call(this, x);
      case 2:
        return G__39911__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39911.cljs$core$IFn$_invoke$arity$1 = G__39911__1;
  G__39911.cljs$core$IFn$_invoke$arity$2 = G__39911__2;
  return G__39911;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? function() {
    var G__39904 = self__.nodes;
    var G__39905 = self__.i + 2;
    var G__39906 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__39904, G__39905, G__39906) : cljs.core.create_inode_seq.call(null, G__39904, G__39905, G__39906);
  }() : function() {
    var G__39907 = self__.nodes;
    var G__39908 = self__.i;
    var G__39909 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__39907, G__39908, G__39909) : cljs.core.create_inode_seq.call(null, G__39907, G__39908, G__39909);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args39912 = [];
  var len__27315__auto___39915 = arguments.length;
  var i__27316__auto___39916 = 0;
  while (true) {
    if (i__27316__auto___39916 < len__27315__auto___39915) {
      args39912.push(arguments[i__27316__auto___39916]);
      var G__39917 = i__27316__auto___39916 + 1;
      i__27316__auto___39916 = G__39917;
      continue;
    } else {
    }
    break;
  }
  var G__39914 = args39912.length;
  switch(G__39914) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39912.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__39919 = j + 2;
              j = G__39919;
              continue;
            }
          } else {
            var G__39920 = j + 2;
            j = G__39920;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__39925 = null;
  var G__39925__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39925__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39925 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39925__1.call(this, x);
      case 2:
        return G__39925__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39925.cljs$core$IFn$_invoke$arity$1 = G__39925__1;
  G__39925.cljs$core$IFn$_invoke$arity$2 = G__39925__2;
  return G__39925;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__39926 = null;
  var G__39926__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39926__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39926 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39926__1.call(this, x);
      case 2:
        return G__39926__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39926.cljs$core$IFn$_invoke$arity$1 = G__39926__1;
  G__39926.cljs$core$IFn$_invoke$arity$2 = G__39926__2;
  return G__39926;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = function() {
    var G__39921 = null;
    var G__39922 = self__.nodes;
    var G__39923 = self__.i;
    var G__39924 = cljs.core.next(self__.s);
    return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__39921, G__39922, G__39923, G__39924) : cljs.core.create_array_node_seq.call(null, G__39921, G__39922, G__39923, G__39924);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args39927 = [];
  var len__27315__auto___39930 = arguments.length;
  var i__27316__auto___39931 = 0;
  while (true) {
    if (i__27316__auto___39931 < len__27315__auto___39930) {
      args39927.push(arguments[i__27316__auto___39931]);
      var G__39932 = i__27316__auto___39931 + 1;
      i__27316__auto___39931 = G__39932;
      continue;
    } else {
    }
    break;
  }
  var G__39929 = args39927.length;
  switch(G__39929) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39927.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__39934 = j + 1;
            j = G__39934;
            continue;
          }
        } else {
          var G__39935 = j + 1;
          j = G__39935;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__39937 = cljs.core.seq(coll);
  var chunk__39938 = null;
  var count__39939 = 0;
  var i__39940 = 0;
  while (true) {
    if (i__39940 < count__39939) {
      var vec__39941 = chunk__39938.cljs$core$IIndexed$_nth$arity$2(null, i__39940);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39941, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39941, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__39949 = seq__39937;
      var G__39950 = chunk__39938;
      var G__39951 = count__39939;
      var G__39952 = i__39940 + 1;
      seq__39937 = G__39949;
      chunk__39938 = G__39950;
      count__39939 = G__39951;
      i__39940 = G__39952;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__39937);
      if (temp__4657__auto__) {
        var seq__39937__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__39937__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__39937__$1);
          var G__39953 = cljs.core.chunk_rest(seq__39937__$1);
          var G__39954 = c__27051__auto__;
          var G__39955 = cljs.core.count(c__27051__auto__);
          var G__39956 = 0;
          seq__39937 = G__39953;
          chunk__39938 = G__39954;
          count__39939 = G__39955;
          i__39940 = G__39956;
          continue;
        } else {
          var vec__39944 = cljs.core.first(seq__39937__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39944, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39944, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__39957 = cljs.core.next(seq__39937__$1);
          var G__39958 = null;
          var G__39959 = 0;
          var G__39960 = 0;
          seq__39937 = G__39957;
          chunk__39938 = G__39958;
          count__39939 = G__39959;
          i__39940 = G__39960;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__39961 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__39962 = cljs.core.next(es);
          ret = G__39961;
          es = G__39962;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__39963 = null;
  var G__39963__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39963__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39963 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39963__2.call(this, self__, k);
      case 3:
        return G__39963__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39963.cljs$core$IFn$_invoke$arity$2 = G__39963__2;
  G__39963.cljs$core$IFn$_invoke$arity$3 = G__39963__3;
  return G__39963;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args39936) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39936)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__39964 = i + 2;
      var G__39965 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__39964;
      ret = G__39965;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__39966 = i + 1;
      var G__39967 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__39966;
      out = G__39967;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__39969 = cljs.core.next(es);
          var G__39970 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__39969;
          tcoll__$1 = G__39970;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__39971 = ascending_QMARK_ ? t.left : t.right;
      var G__39972 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__39971;
      stack__$1 = G__39972;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__39973 = null;
  var G__39973__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39973__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39973 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39973__1.call(this, x);
      case 2:
        return G__39973__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39973.cljs$core$IFn$_invoke$arity$1 = G__39973__1;
  G__39973.cljs$core$IFn$_invoke$arity$2 = G__39973__2;
  return G__39973;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__39974 = null;
  var G__39974__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39974__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39974 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39974__1.call(this, x);
      case 2:
        return G__39974__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39974.cljs$core$IFn$_invoke$arity$1 = G__39974__1;
  G__39974.cljs$core$IFn$_invoke$arity$2 = G__39974__2;
  return G__39974;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__39984 = init__$1;
      var G__39985 = node.key;
      var G__39986 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__39984, G__39985, G__39986) : f.call(null, G__39984, G__39985, G__39986);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__39988 = null;
  var G__39988__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39988__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39988 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39988__1.call(this, x);
      case 2:
        return G__39988__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39988.cljs$core$IFn$_invoke$arity$1 = G__39988__1;
  G__39988.cljs$core$IFn$_invoke$arity$2 = G__39988__2;
  return G__39988;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__39989 = null;
  var G__39989__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39989__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39989 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39989__1.call(this, x);
      case 2:
        return G__39989__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39989.cljs$core$IFn$_invoke$arity$1 = G__39989__1;
  G__39989.cljs$core$IFn$_invoke$arity$2 = G__39989__2;
  return G__39989;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__27074__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__27074__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto____$1);
  }(), x__27074__auto__);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__39990 = null;
  var G__39990__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39990__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39990 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39990__2.call(this, self__, k);
      case 3:
        return G__39990__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39990.cljs$core$IFn$_invoke$arity$2 = G__39990__2;
  G__39990.cljs$core$IFn$_invoke$arity$3 = G__39990__3;
  return G__39990;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args39987) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39987)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__39992 = null;
  var G__39992__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__39992__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39992 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39992__1.call(this, x);
      case 2:
        return G__39992__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39992.cljs$core$IFn$_invoke$arity$1 = G__39992__1;
  G__39992.cljs$core$IFn$_invoke$arity$2 = G__39992__2;
  return G__39992;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__39993 = null;
  var G__39993__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__39993__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__39993 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__39993__1.call(this, x);
      case 2:
        return G__39993__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39993.cljs$core$IFn$_invoke$arity$1 = G__39993__1;
  G__39993.cljs$core$IFn$_invoke$arity$2 = G__39993__2;
  return G__39993;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__27074__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__27074__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto____$1);
  }(), x__27074__auto__);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__39994 = null;
  var G__39994__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__39994__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__39994 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__39994__2.call(this, self__, k);
      case 3:
        return G__39994__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__39994.cljs$core$IFn$_invoke$arity$2 = G__39994__2;
  G__39994.cljs$core$IFn$_invoke$arity$3 = G__39994__3;
  return G__39994;
}();
cljs.core.RedNode.prototype.apply = function(self__, args39991) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args39991)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__40007 = k;
      var G__40008 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__40007, G__40008) : comp.call(null, G__40007, G__40008);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__40027 = k;
      var G__40028 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__40027, G__40028) : comp.call(null, G__40027, G__40028);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__40038 = cljs.core.seq(coll);
  var chunk__40039 = null;
  var count__40040 = 0;
  var i__40041 = 0;
  while (true) {
    if (i__40041 < count__40040) {
      var vec__40042 = chunk__40039.cljs$core$IIndexed$_nth$arity$2(null, i__40041);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40042, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40042, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__40052 = seq__40038;
      var G__40053 = chunk__40039;
      var G__40054 = count__40040;
      var G__40055 = i__40041 + 1;
      seq__40038 = G__40052;
      chunk__40039 = G__40053;
      count__40040 = G__40054;
      i__40041 = G__40055;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__40038);
      if (temp__4657__auto__) {
        var seq__40038__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__40038__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__40038__$1);
          var G__40056 = cljs.core.chunk_rest(seq__40038__$1);
          var G__40057 = c__27051__auto__;
          var G__40058 = cljs.core.count(c__27051__auto__);
          var G__40059 = 0;
          seq__40038 = G__40056;
          chunk__40039 = G__40057;
          count__40040 = G__40058;
          i__40041 = G__40059;
          continue;
        } else {
          var vec__40045 = cljs.core.first(seq__40038__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40045, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40045, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__40060 = cljs.core.next(seq__40038__$1);
          var G__40061 = null;
          var G__40062 = 0;
          var G__40063 = 0;
          seq__40038 = G__40060;
          chunk__40039 = G__40061;
          count__40040 = G__40062;
          i__40041 = G__40063;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__40048 = k;
        var G__40049 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__40048, G__40049) : self__.comp.call(null, G__40048, G__40049);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__40064 = t.left;
          t = G__40064;
          continue;
        } else {
          var G__40065 = t.right;
          t = G__40065;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__40066 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__40067 = cljs.core.next(es);
          ret = G__40066;
          es = G__40067;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__40068 = null;
  var G__40068__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__40068__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__40068 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__40068__2.call(this, self__, k);
      case 3:
        return G__40068__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40068.cljs$core$IFn$_invoke$arity$2 = G__40068__2;
  G__40068.cljs$core$IFn$_invoke$arity$3 = G__40068__3;
  return G__40068;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args40037) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args40037)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__40050 = k;
          var G__40051 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__40050, G__40051) : self__.comp.call(null, G__40050, G__40051);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__40069 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__40070 = t.left;
              stack = G__40069;
              t = G__40070;
              continue;
            } else {
              var G__40071 = stack;
              var G__40072 = t.right;
              stack = G__40071;
              t = G__40072;
              continue;
            }
          } else {
            if (c > 0) {
              var G__40073 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__40074 = t.right;
              stack = G__40073;
              t = G__40074;
              continue;
            } else {
              var G__40075 = stack;
              var G__40076 = t.left;
              stack = G__40075;
              t = G__40076;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40078 = arguments.length;
  var i__27316__auto___40079 = 0;
  while (true) {
    if (i__27316__auto___40079 < len__27315__auto___40078) {
      args__27322__auto__.push(arguments[i__27316__auto___40079]);
      var G__40080 = i__27316__auto___40079 + 1;
      i__27316__auto___40079 = G__40080;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__40081 = cljs.core.nnext(in$);
      var G__40082 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__40081;
      out = G__40082;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq40077) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40077));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40084 = arguments.length;
  var i__27316__auto___40085 = 0;
  while (true) {
    if (i__27316__auto___40085 < len__27315__auto___40084) {
      args__27322__auto__.push(arguments[i__27316__auto___40085]);
      var G__40086 = i__27316__auto___40085 + 1;
      i__27316__auto___40085 = G__40086;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq40083) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40083));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40090 = arguments.length;
  var i__27316__auto___40091 = 0;
  while (true) {
    if (i__27316__auto___40091 < len__27315__auto___40090) {
      args__27322__auto__.push(arguments[i__27316__auto___40091]);
      var G__40092 = i__27316__auto___40091 + 1;
      i__27316__auto___40091 = G__40092;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__40093 = cljs.core.nnext(kvs);
      kvs = G__40093;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq40087) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40087));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40095 = arguments.length;
  var i__27316__auto___40096 = 0;
  while (true) {
    if (i__27316__auto___40096 < len__27315__auto___40095) {
      args__27322__auto__.push(arguments[i__27316__auto___40096]);
      var G__40097 = i__27316__auto___40096 + 1;
      i__27316__auto___40096 = G__40097;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__40098 = cljs.core.nnext(in$);
      var G__40099 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__40098;
      out = G__40099;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq40094) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40094));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40102 = arguments.length;
  var i__27316__auto___40103 = 0;
  while (true) {
    if (i__27316__auto___40103 < len__27315__auto___40102) {
      args__27322__auto__.push(arguments[i__27316__auto___40103]);
      var G__40104 = i__27316__auto___40103 + 1;
      i__27316__auto___40103 = G__40104;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__40105 = cljs.core.nnext(in$);
      var G__40106 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__40105;
      out = G__40106;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq40100) {
  var G__40101 = cljs.core.first(seq40100);
  var seq40100__$1 = cljs.core.next(seq40100);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__40101, seq40100__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__40109 = null;
  var G__40109__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__40109__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__40109 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__40109__1.call(this, x);
      case 2:
        return G__40109__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40109.cljs$core$IFn$_invoke$arity$1 = G__40109__1;
  G__40109.cljs$core$IFn$_invoke$arity$2 = G__40109__2;
  return G__40109;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__40110 = null;
  var G__40110__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__40110__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__40110 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__40110__1.call(this, x);
      case 2:
        return G__40110__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40110.cljs$core$IFn$_invoke$arity$1 = G__40110__1;
  G__40110.cljs$core$IFn$_invoke$arity$2 = G__40110__2;
  return G__40110;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__40113 = null;
  var G__40113__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__40113__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__40113 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__40113__1.call(this, x);
      case 2:
        return G__40113__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40113.cljs$core$IFn$_invoke$arity$1 = G__40113__1;
  G__40113.cljs$core$IFn$_invoke$arity$2 = G__40113__2;
  return G__40113;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__40114 = null;
  var G__40114__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__40114__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__40114 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__40114__1.call(this, x);
      case 2:
        return G__40114__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40114.cljs$core$IFn$_invoke$arity$1 = G__40114__1;
  G__40114.cljs$core$IFn$_invoke$arity$2 = G__40114__2;
  return G__40114;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40118 = arguments.length;
  var i__27316__auto___40119 = 0;
  while (true) {
    if (i__27316__auto___40119 < len__27315__auto___40118) {
      args__27322__auto__.push(arguments[i__27316__auto___40119]);
      var G__40120 = i__27316__auto___40119 + 1;
      i__27316__auto___40119 = G__40120;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__40115_SHARP_, p2__40116_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__26240__auto__ = p1__40115_SHARP_;
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__40116_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq40117) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40117));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40125 = arguments.length;
  var i__27316__auto___40126 = 0;
  while (true) {
    if (i__27316__auto___40126 < len__27315__auto___40125) {
      args__27322__auto__.push(arguments[i__27316__auto___40126]);
      var G__40127 = i__27316__auto___40126 + 1;
      i__27316__auto___40126 = G__40127;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__40123 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__40124 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40123, G__40124) : f.call(null, G__40123, G__40124);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__26240__auto__ = m1;
          if (cljs.core.truth_(or__26240__auto__)) {
            return or__26240__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq40121) {
  var G__40122 = cljs.core.first(seq40121);
  var seq40121__$1 = cljs.core.next(seq40121);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__40122, seq40121__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__40128 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__40129 = cljs.core.next(keys);
      ret = G__40128;
      keys = G__40129;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__40132 = cljs.core.seq(coll);
  var chunk__40133 = null;
  var count__40134 = 0;
  var i__40135 = 0;
  while (true) {
    if (i__40135 < count__40134) {
      var vec__40136 = chunk__40133.cljs$core$IIndexed$_nth$arity$2(null, i__40135);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40136, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40136, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__40142 = seq__40132;
      var G__40143 = chunk__40133;
      var G__40144 = count__40134;
      var G__40145 = i__40135 + 1;
      seq__40132 = G__40142;
      chunk__40133 = G__40143;
      count__40134 = G__40144;
      i__40135 = G__40145;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__40132);
      if (temp__4657__auto__) {
        var seq__40132__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__40132__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__40132__$1);
          var G__40146 = cljs.core.chunk_rest(seq__40132__$1);
          var G__40147 = c__27051__auto__;
          var G__40148 = cljs.core.count(c__27051__auto__);
          var G__40149 = 0;
          seq__40132 = G__40146;
          chunk__40133 = G__40147;
          count__40134 = G__40148;
          i__40135 = G__40149;
          continue;
        } else {
          var vec__40139 = cljs.core.first(seq__40132__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40139, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40139, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__40150 = cljs.core.next(seq__40132__$1);
          var G__40151 = null;
          var G__40152 = 0;
          var G__40153 = 0;
          seq__40132 = G__40150;
          chunk__40133 = G__40151;
          count__40134 = G__40152;
          i__40135 = G__40153;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__40130_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__40130_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__40154 = null;
  var G__40154__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__40154__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__40154 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__40154__2.call(this, self__, k);
      case 3:
        return G__40154__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40154.cljs$core$IFn$_invoke$arity$2 = G__40154__2;
  G__40154.cljs$core$IFn$_invoke$arity$3 = G__40154__3;
  return G__40154;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args40131) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args40131)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__40155 = i + 1;
        var G__40156 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__40155;
        out = G__40156;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__40157 = i + 1;
        var G__40158 = cljs.core._conj_BANG_(out, items[i]);
        i = G__40157;
        out = G__40158;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__40160 = null;
  var G__40160__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__40160__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__40160 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__40160__2.call(this, self__, k);
      case 3:
        return G__40160__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40160.cljs$core$IFn$_invoke$arity$2 = G__40160__2;
  G__40160.cljs$core$IFn$_invoke$arity$3 = G__40160__3;
  return G__40160;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args40159) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args40159)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__40163 = cljs.core.seq(coll);
  var chunk__40164 = null;
  var count__40165 = 0;
  var i__40166 = 0;
  while (true) {
    if (i__40166 < count__40165) {
      var vec__40167 = chunk__40164.cljs$core$IIndexed$_nth$arity$2(null, i__40166);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40167, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40167, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__40173 = seq__40163;
      var G__40174 = chunk__40164;
      var G__40175 = count__40165;
      var G__40176 = i__40166 + 1;
      seq__40163 = G__40173;
      chunk__40164 = G__40174;
      count__40165 = G__40175;
      i__40166 = G__40176;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__40163);
      if (temp__4657__auto__) {
        var seq__40163__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__40163__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__40163__$1);
          var G__40177 = cljs.core.chunk_rest(seq__40163__$1);
          var G__40178 = c__27051__auto__;
          var G__40179 = cljs.core.count(c__27051__auto__);
          var G__40180 = 0;
          seq__40163 = G__40177;
          chunk__40164 = G__40178;
          count__40165 = G__40179;
          i__40166 = G__40180;
          continue;
        } else {
          var vec__40170 = cljs.core.first(seq__40163__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40170, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40170, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__40181 = cljs.core.next(seq__40163__$1);
          var G__40182 = null;
          var G__40183 = 0;
          var G__40184 = 0;
          seq__40163 = G__40181;
          chunk__40164 = G__40182;
          count__40165 = G__40183;
          i__40166 = G__40184;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__40161_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__40161_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__40185 = null;
  var G__40185__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__40185__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__40185 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__40185__2.call(this, self__, k);
      case 3:
        return G__40185__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40185.cljs$core$IFn$_invoke$arity$2 = G__40185__2;
  G__40185.cljs$core$IFn$_invoke$arity$3 = G__40185__3;
  return G__40185;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args40162) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args40162)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__27149__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__27149__auto__.length) {
        var G__40186 = i + 1;
        var G__40187 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__40186;
        res = G__40187;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__40188 = cljs.core.next(in$__$1);
          var G__40189 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__40188;
          out = G__40189;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args40190 = [];
  var len__27315__auto___40194 = arguments.length;
  var i__27316__auto___40195 = 0;
  while (true) {
    if (i__27316__auto___40195 < len__27315__auto___40194) {
      args40190.push(arguments[i__27316__auto___40195]);
      var G__40196 = i__27316__auto___40195 + 1;
      i__27316__auto___40195 = G__40196;
      continue;
    } else {
    }
    break;
  }
  var G__40193 = args40190.length;
  switch(G__40193) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args40190.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__27334__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq40191) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40191));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40199 = arguments.length;
  var i__27316__auto___40200 = 0;
  while (true) {
    if (i__27316__auto___40200 < len__27315__auto___40199) {
      args__27322__auto__.push(arguments[i__27316__auto___40200]);
      var G__40201 = i__27316__auto___40200 + 1;
      i__27316__auto___40200 = G__40201;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq40198) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40198));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40204 = arguments.length;
  var i__27316__auto___40205 = 0;
  while (true) {
    if (i__27316__auto___40205 < len__27315__auto___40204) {
      args__27322__auto__.push(arguments[i__27316__auto___40205]);
      var G__40206 = i__27316__auto___40205 + 1;
      i__27316__auto___40205 = G__40206;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq40202) {
  var G__40203 = cljs.core.first(seq40202);
  var seq40202__$1 = cljs.core.next(seq40202);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__40203, seq40202__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args40209 = [];
  var len__27315__auto___40212 = arguments.length;
  var i__27316__auto___40213 = 0;
  while (true) {
    if (i__27316__auto___40213 < len__27315__auto___40212) {
      args40209.push(arguments[i__27316__auto___40213]);
      var G__40214 = i__27316__auto___40213 + 1;
      i__27316__auto___40213 = G__40214;
      continue;
    } else {
    }
    break;
  }
  var G__40211 = args40209.length;
  switch(G__40211) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40209.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__40207_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__40207_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__40207_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__40208_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__40208_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__40208_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args40216 = [];
  var len__27315__auto___40229 = arguments.length;
  var i__27316__auto___40230 = 0;
  while (true) {
    if (i__27316__auto___40230 < len__27315__auto___40229) {
      args40216.push(arguments[i__27316__auto___40230]);
      var G__40231 = i__27316__auto___40230 + 1;
      i__27316__auto___40230 = G__40231;
      continue;
    } else {
    }
    break;
  }
  var G__40218 = args40216.length;
  switch(G__40218) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40216.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__40233 = null;
        var G__40233__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__40233__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__40233__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__40233 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__40233__0.call(this);
            case 1:
              return G__40233__1.call(this, result);
            case 2:
              return G__40233__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__40233.cljs$core$IFn$_invoke$arity$0 = G__40233__0;
        G__40233.cljs$core$IFn$_invoke$arity$1 = G__40233__1;
        G__40233.cljs$core$IFn$_invoke$arity$2 = G__40233__2;
        return G__40233;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__40225, seen__$1) {
        while (true) {
          var vec__40226 = p__40225;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40226, 0, null);
          var xs__$1 = vec__40226;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__40234 = cljs.core.rest(s);
              var G__40235 = seen__$1;
              p__40225 = G__40234;
              seen__$1 = G__40235;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__40236 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__40237 = cljs.core.next(s__$1);
      ret = G__40236;
      s__$1 = G__40237;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__40240 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__40241 = cljs.core.next(ks);
      var G__40242 = cljs.core.next(vs);
      map = G__40240;
      ks = G__40241;
      vs = G__40242;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args40245 = [];
  var len__27315__auto___40252 = arguments.length;
  var i__27316__auto___40253 = 0;
  while (true) {
    if (i__27316__auto___40253 < len__27315__auto___40252) {
      args40245.push(arguments[i__27316__auto___40253]);
      var G__40254 = i__27316__auto___40253 + 1;
      i__27316__auto___40253 = G__40254;
      continue;
    } else {
    }
    break;
  }
  var G__40251 = args40245.length;
  switch(G__40251) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args40245.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__40243_SHARP_, p2__40244_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__40243_SHARP_, p2__40244_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq40246) {
  var G__40247 = cljs.core.first(seq40246);
  var seq40246__$1 = cljs.core.next(seq40246);
  var G__40248 = cljs.core.first(seq40246__$1);
  var seq40246__$2 = cljs.core.next(seq40246__$1);
  var G__40249 = cljs.core.first(seq40246__$2);
  var seq40246__$3 = cljs.core.next(seq40246__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__40247, G__40248, G__40249, seq40246__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args40258 = [];
  var len__27315__auto___40265 = arguments.length;
  var i__27316__auto___40266 = 0;
  while (true) {
    if (i__27316__auto___40266 < len__27315__auto___40265) {
      args40258.push(arguments[i__27316__auto___40266]);
      var G__40267 = i__27316__auto___40266 + 1;
      i__27316__auto___40266 = G__40267;
      continue;
    } else {
    }
    break;
  }
  var G__40264 = args40258.length;
  switch(G__40264) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args40258.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__40256_SHARP_, p2__40257_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__40256_SHARP_, p2__40257_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq40259) {
  var G__40260 = cljs.core.first(seq40259);
  var seq40259__$1 = cljs.core.next(seq40259);
  var G__40261 = cljs.core.first(seq40259__$1);
  var seq40259__$2 = cljs.core.next(seq40259__$1);
  var G__40262 = cljs.core.first(seq40259__$2);
  var seq40259__$3 = cljs.core.next(seq40259__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__40260, G__40261, G__40262, seq40259__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args40269 = [];
  var len__27315__auto___40272 = arguments.length;
  var i__27316__auto___40273 = 0;
  while (true) {
    if (i__27316__auto___40273 < len__27315__auto___40272) {
      args40269.push(arguments[i__27316__auto___40273]);
      var G__40274 = i__27316__auto___40273 + 1;
      i__27316__auto___40273 = G__40274;
      continue;
    } else {
    }
    break;
  }
  var G__40271 = args40269.length;
  switch(G__40271) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40269.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__40276 = null;
        var G__40276__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__40276__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__40276__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__40276 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__40276__0.call(this);
            case 1:
              return G__40276__1.call(this, result);
            case 2:
              return G__40276__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__40276.cljs$core$IFn$_invoke$arity$0 = G__40276__0;
        G__40276.cljs$core$IFn$_invoke$arity$1 = G__40276__1;
        G__40276.cljs$core$IFn$_invoke$arity$2 = G__40276__2;
        return G__40276;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args40277 = [];
  var len__27315__auto___40281 = arguments.length;
  var i__27316__auto___40282 = 0;
  while (true) {
    if (i__27316__auto___40282 < len__27315__auto___40281) {
      args40277.push(arguments[i__27316__auto___40282]);
      var G__40283 = i__27316__auto___40282 + 1;
      i__27316__auto___40282 = G__40283;
      continue;
    } else {
    }
    break;
  }
  var G__40279 = args40277.length;
  switch(G__40279) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40277.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__40285 = null;
      var G__40285__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__40285__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__40285__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__40285 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__40285__0.call(this);
          case 1:
            return G__40285__1.call(this, result);
          case 2:
            return G__40285__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__40285.cljs$core$IFn$_invoke$arity$0 = G__40285__0;
      G__40285.cljs$core$IFn$_invoke$arity$1 = G__40285__1;
      G__40285.cljs$core$IFn$_invoke$arity$2 = G__40285__2;
      return G__40285;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__40280 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__40280) : pred.call(null, G__40280);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__40290 = function() {
      var G__40292 = cljs.core._entry_key(sc, e);
      var G__40293 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__40292, G__40293) : comp.call(null, G__40292, G__40293);
    }();
    var G__40291 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__40290, G__40291) : test.call(null, G__40290, G__40291);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args40294 = [];
  var len__27315__auto___40303 = arguments.length;
  var i__27316__auto___40304 = 0;
  while (true) {
    if (i__27316__auto___40304 < len__27315__auto___40303) {
      args40294.push(arguments[i__27316__auto___40304]);
      var G__40305 = i__27316__auto___40304 + 1;
      i__27316__auto___40304 = G__40305;
      continue;
    } else {
    }
    break;
  }
  var G__40296 = args40294.length;
  switch(G__40296) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40294.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__40297 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40297, 0, null);
      var s = vec__40297;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__40300 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40300, 0, null);
    var s = vec__40300;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args40307 = [];
  var len__27315__auto___40316 = arguments.length;
  var i__27316__auto___40317 = 0;
  while (true) {
    if (i__27316__auto___40317 < len__27315__auto___40316) {
      args40307.push(arguments[i__27316__auto___40317]);
      var G__40318 = i__27316__auto___40317 + 1;
      i__27316__auto___40317 = G__40318;
      continue;
    } else {
    }
    break;
  }
  var G__40309 = args40307.length;
  switch(G__40309) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40307.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__40310 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40310, 0, null);
      var s = vec__40310;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__40313 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40313, 0, null);
    var s = vec__40313;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__40321 = null;
  var G__40321__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__40321__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__40321 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__40321__1.call(this, x);
      case 2:
        return G__40321__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40321.cljs$core$IFn$_invoke$arity$1 = G__40321__1;
  G__40321.cljs$core$IFn$_invoke$arity$2 = G__40321__2;
  return G__40321;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__40322 = null;
  var G__40322__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__40322__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__40322 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__40322__1.call(this, x);
      case 2:
        return G__40322__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40322.cljs$core$IFn$_invoke$arity$1 = G__40322__1;
  G__40322.cljs$core$IFn$_invoke$arity$2 = G__40322__2;
  return G__40322;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__40320 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__40320);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__40323 = i + self__.step;
        var G__40324 = ret__$1;
        i = G__40323;
        ret = G__40324;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args40325 = [];
  var len__27315__auto___40328 = arguments.length;
  var i__27316__auto___40329 = 0;
  while (true) {
    if (i__27316__auto___40329 < len__27315__auto___40328) {
      args40325.push(arguments[i__27316__auto___40329]);
      var G__40330 = i__27316__auto___40329 + 1;
      i__27316__auto___40329 = G__40330;
      continue;
    } else {
    }
    break;
  }
  var G__40327 = args40325.length;
  switch(G__40327) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40325.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args40332 = [];
  var len__27315__auto___40335 = arguments.length;
  var i__27316__auto___40336 = 0;
  while (true) {
    if (i__27316__auto___40336 < len__27315__auto___40335) {
      args40332.push(arguments[i__27316__auto___40336]);
      var G__40337 = i__27316__auto___40336 + 1;
      i__27316__auto___40336 = G__40337;
      continue;
    } else {
    }
    break;
  }
  var G__40334 = args40332.length;
  switch(G__40334) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40332.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__40339 = null;
        var G__40339__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__40339__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__40339__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__40339 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__40339__0.call(this);
            case 1:
              return G__40339__1.call(this, result);
            case 2:
              return G__40339__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__40339.cljs$core$IFn$_invoke$arity$0 = G__40339__0;
        G__40339.cljs$core$IFn$_invoke$arity$1 = G__40339__1;
        G__40339.cljs$core$IFn$_invoke$arity$2 = G__40339__2;
        return G__40339;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args40341 = [];
  var len__27315__auto___40344 = arguments.length;
  var i__27316__auto___40345 = 0;
  while (true) {
    if (i__27316__auto___40345 < len__27315__auto___40344) {
      args40341.push(arguments[i__27316__auto___40345]);
      var G__40346 = i__27316__auto___40345 + 1;
      i__27316__auto___40345 = G__40346;
      continue;
    } else {
    }
    break;
  }
  var G__40343 = args40341.length;
  switch(G__40343) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40341.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__40348 = null;
        var G__40348__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__40348__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__40348__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__40348 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__40348__0.call(this);
            case 1:
              return G__40348__1.call(this, result);
            case 2:
              return G__40348__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__40348.cljs$core$IFn$_invoke$arity$0 = G__40348__0;
        G__40348.cljs$core$IFn$_invoke$arity$1 = G__40348__1;
        G__40348.cljs$core$IFn$_invoke$arity$2 = G__40348__2;
        return G__40348;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__40340_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__40340_SHARP_) : f.call(null, p1__40340_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args40349 = [];
  var len__27315__auto___40354 = arguments.length;
  var i__27316__auto___40355 = 0;
  while (true) {
    if (i__27316__auto___40355 < len__27315__auto___40354) {
      args40349.push(arguments[i__27316__auto___40355]);
      var G__40356 = i__27316__auto___40355 + 1;
      i__27316__auto___40355 = G__40356;
      continue;
    } else {
    }
    break;
  }
  var G__40351 = args40349.length;
  switch(G__40351) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40349.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      var x__27074__auto__ = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    var x__27074__auto__ = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init) : cljs.core.deref.call(null, init);
    return cljs.core._conj(cljs.core.List.EMPTY, x__27074__auto__);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__40352 = init;
          var G__40353 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__40352, G__40353) : f.call(null, G__40352, G__40353);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args40368 = [];
  var len__27315__auto___40375 = arguments.length;
  var i__27316__auto___40376 = 0;
  while (true) {
    if (i__27316__auto___40376 < len__27315__auto___40375) {
      args40368.push(arguments[i__27316__auto___40376]);
      var G__40377 = i__27316__auto___40376 + 1;
      i__27316__auto___40376 = G__40377;
      continue;
    } else {
    }
    break;
  }
  var G__40374 = args40368.length;
  switch(G__40374) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args40368.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__27334__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__40379 = null;
    var G__40379__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__40379__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__40379__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__40379__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__40379__4 = function() {
      var G__40380__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__40380 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__40381__i = 0, G__40381__a = new Array(arguments.length - 3);
          while (G__40381__i < G__40381__a.length) {
            G__40381__a[G__40381__i] = arguments[G__40381__i + 3];
            ++G__40381__i;
          }
          args = new cljs.core.IndexedSeq(G__40381__a, 0);
        }
        return G__40380__delegate.call(this, x, y, z, args);
      };
      G__40380.cljs$lang$maxFixedArity = 3;
      G__40380.cljs$lang$applyTo = function(arglist__40382) {
        var x = cljs.core.first(arglist__40382);
        arglist__40382 = cljs.core.next(arglist__40382);
        var y = cljs.core.first(arglist__40382);
        arglist__40382 = cljs.core.next(arglist__40382);
        var z = cljs.core.first(arglist__40382);
        var args = cljs.core.rest(arglist__40382);
        return G__40380__delegate(x, y, z, args);
      };
      G__40380.cljs$core$IFn$_invoke$arity$variadic = G__40380__delegate;
      return G__40380;
    }();
    G__40379 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__40379__0.call(this);
        case 1:
          return G__40379__1.call(this, x);
        case 2:
          return G__40379__2.call(this, x, y);
        case 3:
          return G__40379__3.call(this, x, y, z);
        default:
          var G__40383 = null;
          if (arguments.length > 3) {
            var G__40384__i = 0, G__40384__a = new Array(arguments.length - 3);
            while (G__40384__i < G__40384__a.length) {
              G__40384__a[G__40384__i] = arguments[G__40384__i + 3];
              ++G__40384__i;
            }
            G__40383 = new cljs.core.IndexedSeq(G__40384__a, 0);
          }
          return G__40379__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__40383);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__40379.cljs$lang$maxFixedArity = 3;
    G__40379.cljs$lang$applyTo = G__40379__4.cljs$lang$applyTo;
    G__40379.cljs$core$IFn$_invoke$arity$0 = G__40379__0;
    G__40379.cljs$core$IFn$_invoke$arity$1 = G__40379__1;
    G__40379.cljs$core$IFn$_invoke$arity$2 = G__40379__2;
    G__40379.cljs$core$IFn$_invoke$arity$3 = G__40379__3;
    G__40379.cljs$core$IFn$_invoke$arity$variadic = G__40379__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__40379;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__40385 = null;
    var G__40385__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__40385__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__40385__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__40385__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__40385__4 = function() {
      var G__40386__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__40386 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__40387__i = 0, G__40387__a = new Array(arguments.length - 3);
          while (G__40387__i < G__40387__a.length) {
            G__40387__a[G__40387__i] = arguments[G__40387__i + 3];
            ++G__40387__i;
          }
          args = new cljs.core.IndexedSeq(G__40387__a, 0);
        }
        return G__40386__delegate.call(this, x, y, z, args);
      };
      G__40386.cljs$lang$maxFixedArity = 3;
      G__40386.cljs$lang$applyTo = function(arglist__40388) {
        var x = cljs.core.first(arglist__40388);
        arglist__40388 = cljs.core.next(arglist__40388);
        var y = cljs.core.first(arglist__40388);
        arglist__40388 = cljs.core.next(arglist__40388);
        var z = cljs.core.first(arglist__40388);
        var args = cljs.core.rest(arglist__40388);
        return G__40386__delegate(x, y, z, args);
      };
      G__40386.cljs$core$IFn$_invoke$arity$variadic = G__40386__delegate;
      return G__40386;
    }();
    G__40385 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__40385__0.call(this);
        case 1:
          return G__40385__1.call(this, x);
        case 2:
          return G__40385__2.call(this, x, y);
        case 3:
          return G__40385__3.call(this, x, y, z);
        default:
          var G__40389 = null;
          if (arguments.length > 3) {
            var G__40390__i = 0, G__40390__a = new Array(arguments.length - 3);
            while (G__40390__i < G__40390__a.length) {
              G__40390__a[G__40390__i] = arguments[G__40390__i + 3];
              ++G__40390__i;
            }
            G__40389 = new cljs.core.IndexedSeq(G__40390__a, 0);
          }
          return G__40385__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__40389);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__40385.cljs$lang$maxFixedArity = 3;
    G__40385.cljs$lang$applyTo = G__40385__4.cljs$lang$applyTo;
    G__40385.cljs$core$IFn$_invoke$arity$0 = G__40385__0;
    G__40385.cljs$core$IFn$_invoke$arity$1 = G__40385__1;
    G__40385.cljs$core$IFn$_invoke$arity$2 = G__40385__2;
    G__40385.cljs$core$IFn$_invoke$arity$3 = G__40385__3;
    G__40385.cljs$core$IFn$_invoke$arity$variadic = G__40385__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__40385;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__40391 = null;
    var G__40391__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__40391__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__40391__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__40391__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__40391__4 = function() {
      var G__40392__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__40392 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__40393__i = 0, G__40393__a = new Array(arguments.length - 3);
          while (G__40393__i < G__40393__a.length) {
            G__40393__a[G__40393__i] = arguments[G__40393__i + 3];
            ++G__40393__i;
          }
          args = new cljs.core.IndexedSeq(G__40393__a, 0);
        }
        return G__40392__delegate.call(this, x, y, z, args);
      };
      G__40392.cljs$lang$maxFixedArity = 3;
      G__40392.cljs$lang$applyTo = function(arglist__40394) {
        var x = cljs.core.first(arglist__40394);
        arglist__40394 = cljs.core.next(arglist__40394);
        var y = cljs.core.first(arglist__40394);
        arglist__40394 = cljs.core.next(arglist__40394);
        var z = cljs.core.first(arglist__40394);
        var args = cljs.core.rest(arglist__40394);
        return G__40392__delegate(x, y, z, args);
      };
      G__40392.cljs$core$IFn$_invoke$arity$variadic = G__40392__delegate;
      return G__40392;
    }();
    G__40391 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__40391__0.call(this);
        case 1:
          return G__40391__1.call(this, x);
        case 2:
          return G__40391__2.call(this, x, y);
        case 3:
          return G__40391__3.call(this, x, y, z);
        default:
          var G__40395 = null;
          if (arguments.length > 3) {
            var G__40396__i = 0, G__40396__a = new Array(arguments.length - 3);
            while (G__40396__i < G__40396__a.length) {
              G__40396__a[G__40396__i] = arguments[G__40396__i + 3];
              ++G__40396__i;
            }
            G__40395 = new cljs.core.IndexedSeq(G__40396__a, 0);
          }
          return G__40391__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__40395);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__40391.cljs$lang$maxFixedArity = 3;
    G__40391.cljs$lang$applyTo = G__40391__4.cljs$lang$applyTo;
    G__40391.cljs$core$IFn$_invoke$arity$0 = G__40391__0;
    G__40391.cljs$core$IFn$_invoke$arity$1 = G__40391__1;
    G__40391.cljs$core$IFn$_invoke$arity$2 = G__40391__2;
    G__40391.cljs$core$IFn$_invoke$arity$3 = G__40391__3;
    G__40391.cljs$core$IFn$_invoke$arity$variadic = G__40391__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__40391;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__40397 = null;
      var G__40397__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__40358_SHARP_, p2__40359_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__40358_SHARP_, p2__40359_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__40359_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__40359_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__40397__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__40360_SHARP_, p2__40361_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__40360_SHARP_, p2__40361_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__40361_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__40361_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__40397__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__40362_SHARP_, p2__40363_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__40362_SHARP_, p2__40363_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__40363_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__40363_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__40397__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__40364_SHARP_, p2__40365_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__40364_SHARP_, p2__40365_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__40365_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__40365_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__40397__4 = function() {
        var G__40398__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__40366_SHARP_, p2__40367_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__40366_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__40367_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__40398 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__40399__i = 0, G__40399__a = new Array(arguments.length - 3);
            while (G__40399__i < G__40399__a.length) {
              G__40399__a[G__40399__i] = arguments[G__40399__i + 3];
              ++G__40399__i;
            }
            args = new cljs.core.IndexedSeq(G__40399__a, 0);
          }
          return G__40398__delegate.call(this, x, y, z, args);
        };
        G__40398.cljs$lang$maxFixedArity = 3;
        G__40398.cljs$lang$applyTo = function(arglist__40400) {
          var x = cljs.core.first(arglist__40400);
          arglist__40400 = cljs.core.next(arglist__40400);
          var y = cljs.core.first(arglist__40400);
          arglist__40400 = cljs.core.next(arglist__40400);
          var z = cljs.core.first(arglist__40400);
          var args = cljs.core.rest(arglist__40400);
          return G__40398__delegate(x, y, z, args);
        };
        G__40398.cljs$core$IFn$_invoke$arity$variadic = G__40398__delegate;
        return G__40398;
      }();
      G__40397 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__40397__0.call(this);
          case 1:
            return G__40397__1.call(this, x);
          case 2:
            return G__40397__2.call(this, x, y);
          case 3:
            return G__40397__3.call(this, x, y, z);
          default:
            var G__40401 = null;
            if (arguments.length > 3) {
              var G__40402__i = 0, G__40402__a = new Array(arguments.length - 3);
              while (G__40402__i < G__40402__a.length) {
                G__40402__a[G__40402__i] = arguments[G__40402__i + 3];
                ++G__40402__i;
              }
              G__40401 = new cljs.core.IndexedSeq(G__40402__a, 0);
            }
            return G__40397__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__40401);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__40397.cljs$lang$maxFixedArity = 3;
      G__40397.cljs$lang$applyTo = G__40397__4.cljs$lang$applyTo;
      G__40397.cljs$core$IFn$_invoke$arity$0 = G__40397__0;
      G__40397.cljs$core$IFn$_invoke$arity$1 = G__40397__1;
      G__40397.cljs$core$IFn$_invoke$arity$2 = G__40397__2;
      G__40397.cljs$core$IFn$_invoke$arity$3 = G__40397__3;
      G__40397.cljs$core$IFn$_invoke$arity$variadic = G__40397__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__40397;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq40369) {
  var G__40370 = cljs.core.first(seq40369);
  var seq40369__$1 = cljs.core.next(seq40369);
  var G__40371 = cljs.core.first(seq40369__$1);
  var seq40369__$2 = cljs.core.next(seq40369__$1);
  var G__40372 = cljs.core.first(seq40369__$2);
  var seq40369__$3 = cljs.core.next(seq40369__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__40370, G__40371, G__40372, seq40369__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args40403 = [];
  var len__27315__auto___40406 = arguments.length;
  var i__27316__auto___40407 = 0;
  while (true) {
    if (i__27316__auto___40407 < len__27315__auto___40406) {
      args40403.push(arguments[i__27316__auto___40407]);
      var G__40408 = i__27316__auto___40407 + 1;
      i__27316__auto___40407 = G__40408;
      continue;
    } else {
    }
    break;
  }
  var G__40405 = args40403.length;
  switch(G__40405) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40403.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__40410 = cljs.core.next(coll);
      coll = G__40410;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__40411 = n - 1;
      var G__40412 = cljs.core.next(coll);
      n = G__40411;
      coll = G__40412;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args40413 = [];
  var len__27315__auto___40416 = arguments.length;
  var i__27316__auto___40417 = 0;
  while (true) {
    if (i__27316__auto___40417 < len__27315__auto___40416) {
      args40413.push(arguments[i__27316__auto___40417]);
      var G__40418 = i__27316__auto___40417 + 1;
      i__27316__auto___40417 = G__40418;
      continue;
    } else {
    }
    break;
  }
  var G__40415 = args40413.length;
  switch(G__40415) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40413.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__40423 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40423, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40423, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__26240__auto__ = flags;
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_40433 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__26240__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__40434_40440 = cljs.core.first(coll);
          var G__40435_40441 = writer;
          var G__40436_40442 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__40434_40440, G__40435_40441, G__40436_40442) : print_one.call(null, G__40434_40440, G__40435_40441, G__40436_40442);
        } else {
        }
        var coll_40443__$1 = cljs.core.next(coll);
        var n_40444 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_40443__$1 && (n_40444 == null || !(n_40444 === 0))) {
            cljs.core._write(writer, sep);
            var G__40437_40445 = cljs.core.first(coll_40443__$1);
            var G__40438_40446 = writer;
            var G__40439_40447 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__40437_40445, G__40438_40446, G__40439_40447) : print_one.call(null, G__40437_40445, G__40438_40446, G__40439_40447);
            var G__40448 = cljs.core.next(coll_40443__$1);
            var G__40449 = n_40444 - 1;
            coll_40443__$1 = G__40448;
            n_40444 = G__40449;
            continue;
          } else {
            if (cljs.core.seq(coll_40443__$1) && n_40444 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__26240__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__26240__auto__)) {
                  return or__26240__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_40433;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40456 = arguments.length;
  var i__27316__auto___40457 = 0;
  while (true) {
    if (i__27316__auto___40457 < len__27315__auto___40456) {
      args__27322__auto__.push(arguments[i__27316__auto___40457]);
      var G__40458 = i__27316__auto___40457 + 1;
      i__27316__auto___40457 = G__40458;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__40452 = cljs.core.seq(ss);
  var chunk__40453 = null;
  var count__40454 = 0;
  var i__40455 = 0;
  while (true) {
    if (i__40455 < count__40454) {
      var s = chunk__40453.cljs$core$IIndexed$_nth$arity$2(null, i__40455);
      cljs.core._write(writer, s);
      var G__40459 = seq__40452;
      var G__40460 = chunk__40453;
      var G__40461 = count__40454;
      var G__40462 = i__40455 + 1;
      seq__40452 = G__40459;
      chunk__40453 = G__40460;
      count__40454 = G__40461;
      i__40455 = G__40462;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__40452);
      if (temp__4657__auto__) {
        var seq__40452__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__40452__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__40452__$1);
          var G__40463 = cljs.core.chunk_rest(seq__40452__$1);
          var G__40464 = c__27051__auto__;
          var G__40465 = cljs.core.count(c__27051__auto__);
          var G__40466 = 0;
          seq__40452 = G__40463;
          chunk__40453 = G__40464;
          count__40454 = G__40465;
          i__40455 = G__40466;
          continue;
        } else {
          var s = cljs.core.first(seq__40452__$1);
          cljs.core._write(writer, s);
          var G__40467 = cljs.core.next(seq__40452__$1);
          var G__40468 = null;
          var G__40469 = 0;
          var G__40470 = 0;
          seq__40452 = G__40467;
          chunk__40453 = G__40468;
          count__40454 = G__40469;
          i__40455 = G__40470;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq40450) {
  var G__40451 = cljs.core.first(seq40450);
  var seq40450__$1 = cljs.core.next(seq40450);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__40451, seq40450__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj40472 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj40472;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__26228__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__26228__auto__) {
    var and__26228__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__26228__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__40487_40495 = cljs.core.meta(obj);
      var G__40488_40496 = writer;
      var G__40489_40497 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__40487_40495, G__40488_40496, G__40489_40497) : cljs.core.pr_writer.call(null, G__40487_40495, G__40488_40496, G__40489_40497);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__40491 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__40492 = cljs.core.pr_writer;
            var G__40493 = writer;
            var G__40494 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__40491, G__40492, G__40493, G__40494) : cljs.core.print_map.call(null, G__40491, G__40492, G__40493, G__40494);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__26240__auto__ = name == null;
                    if (or__26240__auto__) {
                      return or__26240__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__40498 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__40498;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__26240__auto__ = name == null;
                          if (or__26240__auto__) {
                            return or__26240__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__40502 = obj;
    var G__40503 = writer;
    var G__40504 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__40502, G__40503, G__40504) : alt_impl.call(null, G__40502, G__40503, G__40504);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__40509 = cljs.core.seq(cljs.core.next(objs));
  var chunk__40510 = null;
  var count__40511 = 0;
  var i__40512 = 0;
  while (true) {
    if (i__40512 < count__40511) {
      var obj = chunk__40510.cljs$core$IIndexed$_nth$arity$2(null, i__40512);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__40513 = seq__40509;
      var G__40514 = chunk__40510;
      var G__40515 = count__40511;
      var G__40516 = i__40512 + 1;
      seq__40509 = G__40513;
      chunk__40510 = G__40514;
      count__40511 = G__40515;
      i__40512 = G__40516;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__40509);
      if (temp__4657__auto__) {
        var seq__40509__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__40509__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first(seq__40509__$1);
          var G__40517 = cljs.core.chunk_rest(seq__40509__$1);
          var G__40518 = c__27051__auto__;
          var G__40519 = cljs.core.count(c__27051__auto__);
          var G__40520 = 0;
          seq__40509 = G__40517;
          chunk__40510 = G__40518;
          count__40511 = G__40519;
          i__40512 = G__40520;
          continue;
        } else {
          var obj = cljs.core.first(seq__40509__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__40521 = cljs.core.next(seq__40509__$1);
          var G__40522 = null;
          var G__40523 = 0;
          var G__40524 = 0;
          seq__40509 = G__40521;
          chunk__40510 = G__40522;
          count__40511 = G__40523;
          i__40512 = G__40524;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args40525 = [];
  var len__27315__auto___40528 = arguments.length;
  var i__27316__auto___40529 = 0;
  while (true) {
    if (i__27316__auto___40529 < len__27315__auto___40528) {
      args40525.push(arguments[i__27316__auto___40529]);
      var G__40530 = i__27316__auto___40529 + 1;
      i__27316__auto___40529 = G__40530;
      continue;
    } else {
    }
    break;
  }
  var G__40527 = args40525.length;
  switch(G__40527) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40525.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40533 = arguments.length;
  var i__27316__auto___40534 = 0;
  while (true) {
    if (i__27316__auto___40534 < len__27315__auto___40533) {
      args__27322__auto__.push(arguments[i__27316__auto___40534]);
      var G__40535 = i__27316__auto___40534 + 1;
      i__27316__auto___40534 = G__40535;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq40532) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40532));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40537 = arguments.length;
  var i__27316__auto___40538 = 0;
  while (true) {
    if (i__27316__auto___40538 < len__27315__auto___40537) {
      args__27322__auto__.push(arguments[i__27316__auto___40538]);
      var G__40539 = i__27316__auto___40538 + 1;
      i__27316__auto___40538 = G__40539;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq40536) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40536));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40541 = arguments.length;
  var i__27316__auto___40542 = 0;
  while (true) {
    if (i__27316__auto___40542 < len__27315__auto___40541) {
      args__27322__auto__.push(arguments[i__27316__auto___40542]);
      var G__40543 = i__27316__auto___40542 + 1;
      i__27316__auto___40542 = G__40543;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq40540) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40540));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__40544__i = 0, G__40544__a = new Array(arguments.length - 0);
      while (G__40544__i < G__40544__a.length) {
        G__40544__a[G__40544__i] = arguments[G__40544__i + 0];
        ++G__40544__i;
      }
      objs = new cljs.core.IndexedSeq(G__40544__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__40545) {
    var objs = cljs.core.seq(arglist__40545);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40547 = arguments.length;
  var i__27316__auto___40548 = 0;
  while (true) {
    if (i__27316__auto___40548 < len__27315__auto___40547) {
      args__27322__auto__.push(arguments[i__27316__auto___40548]);
      var G__40549 = i__27316__auto___40548 + 1;
      i__27316__auto___40548 = G__40549;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq40546) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40546));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40551 = arguments.length;
  var i__27316__auto___40552 = 0;
  while (true) {
    if (i__27316__auto___40552 < len__27315__auto___40551) {
      args__27322__auto__.push(arguments[i__27316__auto___40552]);
      var G__40553 = i__27316__auto___40552 + 1;
      i__27316__auto___40552 = G__40553;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq40550) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40550));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40555 = arguments.length;
  var i__27316__auto___40556 = 0;
  while (true) {
    if (i__27316__auto___40556 < len__27315__auto___40555) {
      args__27322__auto__.push(arguments[i__27316__auto___40556]);
      var G__40557 = i__27316__auto___40556 + 1;
      i__27316__auto___40556 = G__40557;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq40554) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40554));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40559 = arguments.length;
  var i__27316__auto___40560 = 0;
  while (true) {
    if (i__27316__auto___40560 < len__27315__auto___40559) {
      args__27322__auto__.push(arguments[i__27316__auto___40560]);
      var G__40561 = i__27316__auto___40560 + 1;
      i__27316__auto___40560 = G__40561;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq40558) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40558));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__40568_40574 = cljs.core.key(e);
    var G__40569_40575 = w;
    var G__40570_40576 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__40568_40574, G__40569_40575, G__40570_40576) : print_one.call(null, G__40568_40574, G__40569_40575, G__40570_40576);
    cljs.core._write(w, " ");
    var G__40571 = cljs.core.val(e);
    var G__40572 = w;
    var G__40573 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__40571, G__40572, G__40573) : print_one.call(null, G__40571, G__40572, G__40573);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40580 = arguments.length;
  var i__27316__auto___40581 = 0;
  while (true) {
    if (i__27316__auto___40581 < len__27315__auto___40580) {
      args__27322__auto__.push(arguments[i__27316__auto___40581]);
      var G__40582 = i__27316__auto___40581 + 1;
      i__27316__auto___40581 = G__40582;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq40577) {
  var G__40578 = cljs.core.first(seq40577);
  var seq40577__$1 = cljs.core.next(seq40577);
  var G__40579 = cljs.core.first(seq40577__$1);
  var seq40577__$2 = cljs.core.next(seq40577__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__40578, G__40579, seq40577__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args40583 = [];
  var len__27315__auto___40586 = arguments.length;
  var i__27316__auto___40587 = 0;
  while (true) {
    if (i__27316__auto___40587 < len__27315__auto___40586) {
      args40583.push(arguments[i__27316__auto___40587]);
      var G__40588 = i__27316__auto___40587 + 1;
      i__27316__auto___40587 = G__40588;
      continue;
    } else {
    }
    break;
  }
  var G__40585 = args40583.length;
  switch(G__40585) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40583.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__40590_SHARP_, p2__40591_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__40590_SHARP_, p2__40591_SHARP_) : rf.call(null, p1__40590_SHARP_, p2__40591_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__40592 = null;
      var G__40592__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__40592__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__40592__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__40592 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__40592__0.call(this);
          case 1:
            return G__40592__1.call(this, result);
          case 2:
            return G__40592__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__40592.cljs$core$IFn$_invoke$arity$0 = G__40592__0;
      G__40592.cljs$core$IFn$_invoke$arity$1 = G__40592__1;
      G__40592.cljs$core$IFn$_invoke$arity$2 = G__40592__2;
      return G__40592;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args40593 = [];
  var len__27315__auto___40596 = arguments.length;
  var i__27316__auto___40597 = 0;
  while (true) {
    if (i__27316__auto___40597 < len__27315__auto___40596) {
      args40593.push(arguments[i__27316__auto___40597]);
      var G__40598 = i__27316__auto___40597 + 1;
      i__27316__auto___40597 = G__40598;
      continue;
    } else {
    }
    break;
  }
  var G__40595 = args40593.length;
  switch(G__40595) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40593.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__40600 = null;
        var G__40600__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__40600__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__40600__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__40600 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__40600__0.call(this);
            case 1:
              return G__40600__1.call(this, result);
            case 2:
              return G__40600__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__40600.cljs$core$IFn$_invoke$arity$0 = G__40600__0;
        G__40600.cljs$core$IFn$_invoke$arity$1 = G__40600__1;
        G__40600.cljs$core$IFn$_invoke$arity$2 = G__40600__2;
        return G__40600;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args40601 = [];
  var len__27315__auto___40604 = arguments.length;
  var i__27316__auto___40605 = 0;
  while (true) {
    if (i__27316__auto___40605 < len__27315__auto___40604) {
      args40601.push(arguments[i__27316__auto___40605]);
      var G__40606 = i__27316__auto___40605 + 1;
      i__27316__auto___40605 = G__40606;
      continue;
    } else {
    }
    break;
  }
  var G__40603 = args40601.length;
  switch(G__40603) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40601.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__40608 = null;
  var G__40608__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__40608__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__40608 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__40608__1.call(this, x);
      case 2:
        return G__40608__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40608.cljs$core$IFn$_invoke$arity$1 = G__40608__1;
  G__40608.cljs$core$IFn$_invoke$arity$2 = G__40608__2;
  return G__40608;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__40609 = null;
  var G__40609__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__40609__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__40609 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__40609__1.call(this, x);
      case 2:
        return G__40609__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40609.cljs$core$IFn$_invoke$arity$1 = G__40609__1;
  G__40609.cljs$core$IFn$_invoke$arity$2 = G__40609__2;
  return G__40609;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__27246__auto__ = this;
  return cljs.core.es6_iterator(this__27246__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40611 = arguments.length;
  var i__27316__auto___40612 = 0;
  while (true) {
    if (i__27316__auto___40612 < len__27315__auto___40611) {
      args__27322__auto__.push(arguments[i__27316__auto___40612]);
      var G__40613 = i__27316__auto___40612 + 1;
      i__27316__auto___40612 = G__40613;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq40610) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq40610));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__40615_SHARP_, p2__40614_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__40614_SHARP_) : proc.call(null, p2__40614_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._key__GT_js[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto__.call(null, x);
    } else {
      var m__26904__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__26904__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__40638_40652 = cljs.core.seq(x);
            var chunk__40639_40653 = null;
            var count__40640_40654 = 0;
            var i__40641_40655 = 0;
            while (true) {
              if (i__40641_40655 < count__40640_40654) {
                var vec__40642_40656 = chunk__40639_40653.cljs$core$IIndexed$_nth$arity$2(null, i__40641_40655);
                var k_40657 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40642_40656, 0, null);
                var v_40658 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40642_40656, 1, null);
                m[cljs.core.key__GT_js(k_40657)] = cljs$core$clj__GT_js(v_40658);
                var G__40659 = seq__40638_40652;
                var G__40660 = chunk__40639_40653;
                var G__40661 = count__40640_40654;
                var G__40662 = i__40641_40655 + 1;
                seq__40638_40652 = G__40659;
                chunk__40639_40653 = G__40660;
                count__40640_40654 = G__40661;
                i__40641_40655 = G__40662;
                continue;
              } else {
                var temp__4657__auto___40663 = cljs.core.seq(seq__40638_40652);
                if (temp__4657__auto___40663) {
                  var seq__40638_40664__$1 = temp__4657__auto___40663;
                  if (cljs.core.chunked_seq_QMARK_(seq__40638_40664__$1)) {
                    var c__27051__auto___40665 = cljs.core.chunk_first(seq__40638_40664__$1);
                    var G__40666 = cljs.core.chunk_rest(seq__40638_40664__$1);
                    var G__40667 = c__27051__auto___40665;
                    var G__40668 = cljs.core.count(c__27051__auto___40665);
                    var G__40669 = 0;
                    seq__40638_40652 = G__40666;
                    chunk__40639_40653 = G__40667;
                    count__40640_40654 = G__40668;
                    i__40641_40655 = G__40669;
                    continue;
                  } else {
                    var vec__40645_40670 = cljs.core.first(seq__40638_40664__$1);
                    var k_40671 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40645_40670, 0, null);
                    var v_40672 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40645_40670, 1, null);
                    m[cljs.core.key__GT_js(k_40671)] = cljs$core$clj__GT_js(v_40672);
                    var G__40673 = cljs.core.next(seq__40638_40664__$1);
                    var G__40674 = null;
                    var G__40675 = 0;
                    var G__40676 = 0;
                    seq__40638_40652 = G__40673;
                    chunk__40639_40653 = G__40674;
                    count__40640_40654 = G__40675;
                    i__40641_40655 = G__40676;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__40648_40677 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__40649_40678 = null;
              var count__40650_40679 = 0;
              var i__40651_40680 = 0;
              while (true) {
                if (i__40651_40680 < count__40650_40679) {
                  var x_40681__$1 = chunk__40649_40678.cljs$core$IIndexed$_nth$arity$2(null, i__40651_40680);
                  arr.push(x_40681__$1);
                  var G__40682 = seq__40648_40677;
                  var G__40683 = chunk__40649_40678;
                  var G__40684 = count__40650_40679;
                  var G__40685 = i__40651_40680 + 1;
                  seq__40648_40677 = G__40682;
                  chunk__40649_40678 = G__40683;
                  count__40650_40679 = G__40684;
                  i__40651_40680 = G__40685;
                  continue;
                } else {
                  var temp__4657__auto___40686 = cljs.core.seq(seq__40648_40677);
                  if (temp__4657__auto___40686) {
                    var seq__40648_40687__$1 = temp__4657__auto___40686;
                    if (cljs.core.chunked_seq_QMARK_(seq__40648_40687__$1)) {
                      var c__27051__auto___40688 = cljs.core.chunk_first(seq__40648_40687__$1);
                      var G__40689 = cljs.core.chunk_rest(seq__40648_40687__$1);
                      var G__40690 = c__27051__auto___40688;
                      var G__40691 = cljs.core.count(c__27051__auto___40688);
                      var G__40692 = 0;
                      seq__40648_40677 = G__40689;
                      chunk__40649_40678 = G__40690;
                      count__40650_40679 = G__40691;
                      i__40651_40680 = G__40692;
                      continue;
                    } else {
                      var x_40693__$1 = cljs.core.first(seq__40648_40687__$1);
                      arr.push(x_40693__$1);
                      var G__40694 = cljs.core.next(seq__40648_40687__$1);
                      var G__40695 = null;
                      var G__40696 = 0;
                      var G__40697 = 0;
                      seq__40648_40677 = G__40694;
                      chunk__40649_40678 = G__40695;
                      count__40650_40679 = G__40696;
                      i__40651_40680 = G__40697;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__26903__auto__ = x == null ? null : x;
    var m__26904__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__26904__auto__.call(null, x, options);
    } else {
      var m__26904__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__26904__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args40698 = [];
  var len__27315__auto___40723 = arguments.length;
  var i__27316__auto___40724 = 0;
  while (true) {
    if (i__27316__auto___40724 < len__27315__auto___40723) {
      args40698.push(arguments[i__27316__auto___40724]);
      var G__40725 = i__27316__auto___40724 + 1;
      i__27316__auto___40724 = G__40725;
      continue;
    } else {
    }
    break;
  }
  var G__40702 = args40698.length;
  switch(G__40702) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args40698.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__40703 = opts;
  var map__40703__$1 = (!(map__40703 == null) ? map__40703.cljs$lang$protocol_mask$partition0$ & 64 || map__40703.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__40703) : map__40703;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40703__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__40703, map__40703__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__27020__auto__ = function(map__40703, map__40703__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__40717(s__40718) {
                      return new cljs.core.LazySeq(null, function(map__40703, map__40703__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__40718__$1 = s__40718;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__40718__$1);
                            if (temp__4657__auto__) {
                              var s__40718__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__40718__$2)) {
                                var c__27018__auto__ = cljs.core.chunk_first(s__40718__$2);
                                var size__27019__auto__ = cljs.core.count(c__27018__auto__);
                                var b__40720 = cljs.core.chunk_buffer(size__27019__auto__);
                                if (function() {
                                  var i__40719 = 0;
                                  while (true) {
                                    if (i__40719 < size__27019__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__27018__auto__, i__40719);
                                      cljs.core.chunk_append(b__40720, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__40727 = i__40719 + 1;
                                      i__40719 = G__40727;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__40720), cljs$core$thisfn_$_iter__40717(cljs.core.chunk_rest(s__40718__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__40720), null);
                                }
                              } else {
                                var k = cljs.core.first(s__40718__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__40717(cljs.core.rest(s__40718__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__40703, map__40703__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__40703, map__40703__$1, keywordize_keys, keyfn);
                  return iter__27020__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__40703, map__40703__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq40699) {
  var G__40700 = cljs.core.first(seq40699);
  var seq40699__$1 = cljs.core.next(seq40699);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__40700, seq40699__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__40729 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__40729) : cljs.core.atom.call(null, G__40729);
  }();
  return function(mem) {
    return function() {
      var G__40730__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__40730 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__40731__i = 0, G__40731__a = new Array(arguments.length - 0);
          while (G__40731__i < G__40731__a.length) {
            G__40731__a[G__40731__i] = arguments[G__40731__i + 0];
            ++G__40731__i;
          }
          args = new cljs.core.IndexedSeq(G__40731__a, 0);
        }
        return G__40730__delegate.call(this, args);
      };
      G__40730.cljs$lang$maxFixedArity = 0;
      G__40730.cljs$lang$applyTo = function(arglist__40732) {
        var args = cljs.core.seq(arglist__40732);
        return G__40730__delegate(args);
      };
      G__40730.cljs$core$IFn$_invoke$arity$variadic = G__40730__delegate;
      return G__40730;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args40733 = [];
  var len__27315__auto___40738 = arguments.length;
  var i__27316__auto___40739 = 0;
  while (true) {
    if (i__27316__auto___40739 < len__27315__auto___40738) {
      args40733.push(arguments[i__27316__auto___40739]);
      var G__40740 = i__27316__auto___40739 + 1;
      i__27316__auto___40739 = G__40740;
      continue;
    } else {
    }
    break;
  }
  var G__40737 = args40733.length;
  switch(G__40737) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__27334__auto__ = new cljs.core.IndexedSeq(args40733.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27334__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__40742 = ret;
      f = G__40742;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq40734) {
  var G__40735 = cljs.core.first(seq40734);
  var seq40734__$1 = cljs.core.next(seq40734);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__40735, seq40734__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args40743 = [];
  var len__27315__auto___40746 = arguments.length;
  var i__27316__auto___40747 = 0;
  while (true) {
    if (i__27316__auto___40747 < len__27315__auto___40746) {
      args40743.push(arguments[i__27316__auto___40747]);
      var G__40748 = i__27316__auto___40747 + 1;
      i__27316__auto___40747 = G__40748;
      continue;
    } else {
    }
    break;
  }
  var G__40745 = args40743.length;
  switch(G__40745) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40743.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__40751 = Math.random() * n;
  return Math.floor(G__40751);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__40753 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__40753) : cljs.core.atom.call(null, G__40753);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40756 = arguments.length;
  var i__27316__auto___40757 = 0;
  while (true) {
    if (i__27316__auto___40757 < len__27315__auto___40756) {
      args__27322__auto__.push(arguments[i__27316__auto___40757]);
      var G__40758 = i__27316__auto___40757 + 1;
      i__27316__auto___40757 = G__40758;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq40754) {
  var G__40755 = cljs.core.first(seq40754);
  var seq40754__$1 = cljs.core.next(seq40754);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__40755, seq40754__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args40759 = [];
  var len__27315__auto___40763 = arguments.length;
  var i__27316__auto___40764 = 0;
  while (true) {
    if (i__27316__auto___40764 < len__27315__auto___40763) {
      args40759.push(arguments[i__27316__auto___40764]);
      var G__40765 = i__27316__auto___40764 + 1;
      i__27316__auto___40764 = G__40765;
      continue;
    } else {
    }
    break;
  }
  var G__40761 = args40759.length;
  switch(G__40761) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40759.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__40762 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40762) : cljs.core.deref.call(null, G__40762);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__26240__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__26240__auto__) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__26240__auto____$1) {
      return or__26240__auto____$1;
    } else {
      var and__26228__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__26228__auto__) {
        var and__26228__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__26228__auto____$1) {
          var and__26228__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__26228__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__40767 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__40768 = i + 1;
                ret = G__40767;
                i = G__40768;
                continue;
              }
              break;
            }
          } else {
            return and__26228__auto____$2;
          }
        } else {
          return and__26228__auto____$1;
        }
      } else {
        return and__26228__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args40769 = [];
  var len__27315__auto___40773 = arguments.length;
  var i__27316__auto___40774 = 0;
  while (true) {
    if (i__27316__auto___40774 < len__27315__auto___40773) {
      args40769.push(arguments[i__27316__auto___40774]);
      var G__40775 = i__27316__auto___40774 + 1;
      i__27316__auto___40774 = G__40775;
      continue;
    } else {
    }
    break;
  }
  var G__40771 = args40769.length;
  switch(G__40771) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40769.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__40772 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40772) : cljs.core.deref.call(null, G__40772);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args40777 = [];
  var len__27315__auto___40781 = arguments.length;
  var i__27316__auto___40782 = 0;
  while (true) {
    if (i__27316__auto___40782 < len__27315__auto___40781) {
      args40777.push(arguments[i__27316__auto___40782]);
      var G__40783 = i__27316__auto___40782 + 1;
      i__27316__auto___40782 = G__40783;
      continue;
    } else {
    }
    break;
  }
  var G__40779 = args40777.length;
  switch(G__40779) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40777.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__40780 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40780) : cljs.core.deref.call(null, G__40780);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args40785 = [];
  var len__27315__auto___40789 = arguments.length;
  var i__27316__auto___40790 = 0;
  while (true) {
    if (i__27316__auto___40790 < len__27315__auto___40789) {
      args40785.push(arguments[i__27316__auto___40790]);
      var G__40791 = i__27316__auto___40790 + 1;
      i__27316__auto___40790 = G__40791;
      continue;
    } else {
    }
    break;
  }
  var G__40787 = args40785.length;
  switch(G__40787) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40785.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__40788 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__40788) : cljs.core.deref.call(null, G__40788);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args40793 = [];
  var len__27315__auto___40796 = arguments.length;
  var i__27316__auto___40797 = 0;
  while (true) {
    if (i__27316__auto___40797 < len__27315__auto___40796) {
      args40793.push(arguments[i__27316__auto___40797]);
      var G__40798 = i__27316__auto___40797 + 1;
      i__27316__auto___40797 = G__40798;
      continue;
    } else {
    }
    break;
  }
  var G__40795 = args40793.length;
  switch(G__40795) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40793.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__26240__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args40803 = [];
  var len__27315__auto___40806 = arguments.length;
  var i__27316__auto___40807 = 0;
  while (true) {
    if (i__27316__auto___40807 < len__27315__auto___40806) {
      args40803.push(arguments[i__27316__auto___40807]);
      var G__40808 = i__27316__auto___40807 + 1;
      i__27316__auto___40807 = G__40808;
      continue;
    } else {
    }
    break;
  }
  var G__40805 = args40803.length;
  switch(G__40805) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40803.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__40800_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__40800_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__40800_SHARP_), cljs.core.second(p1__40800_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__40801_SHARP_, p2__40802_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__40801_SHARP_, p2__40802_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__26240__auto__ = cljs.core.truth_(function() {
    var and__26228__auto__ = xprefs;
    if (cljs.core.truth_(and__26228__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__26228__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__40822 = cljs.core.rest(ps);
          ps = G__40822;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__26240__auto____$1)) {
      return or__26240__auto____$1;
    } else {
      var or__26240__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__40823 = cljs.core.rest(ps);
            ps = G__40823;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__26240__auto____$2)) {
        return or__26240__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__26240__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__40828) {
    var vec__40829 = p__40828;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40829, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40829, 1, null);
    var e = vec__40829;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__26240__auto__ = be == null;
        if (or__26240__auto__) {
          return or__26240__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._reset[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._reset["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._add_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__26904__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__26904__auto____$1 = cljs.core._add_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__26904__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._remove_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto__.call(null, mf, dispatch_val);
    } else {
      var m__26904__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._prefer_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__26904__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__26904__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__26904__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._get_method[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto__.call(null, mf, dispatch_val);
    } else {
      var m__26904__auto____$1 = cljs.core._get_method["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__26904__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._methods[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._methods["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._prefers[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._prefers["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__26903__auto__ = mf == null ? null : mf;
    var m__26904__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto__.call(null, mf);
    } else {
      var m__26904__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__26904__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__26904__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__40833 = null;
  var G__40833__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__40833__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__40833__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__40833__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__40833__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__40833__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__40833__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__40833__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__40833__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__40833__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__40833__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__40833__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__40833__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__40833__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__40833__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__40833__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__40833__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__40833__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__40833__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__40833__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__40833__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__40833__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__40833 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__40833__1.call(this, self__);
      case 2:
        return G__40833__2.call(this, self__, a);
      case 3:
        return G__40833__3.call(this, self__, a, b);
      case 4:
        return G__40833__4.call(this, self__, a, b, c);
      case 5:
        return G__40833__5.call(this, self__, a, b, c, d);
      case 6:
        return G__40833__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__40833__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__40833__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__40833__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__40833__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__40833__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__40833__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__40833__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__40833__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__40833__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__40833__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__40833__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__40833__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__40833__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__40833__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__40833__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__40833__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__40833.cljs$core$IFn$_invoke$arity$1 = G__40833__1;
  G__40833.cljs$core$IFn$_invoke$arity$2 = G__40833__2;
  G__40833.cljs$core$IFn$_invoke$arity$3 = G__40833__3;
  G__40833.cljs$core$IFn$_invoke$arity$4 = G__40833__4;
  G__40833.cljs$core$IFn$_invoke$arity$5 = G__40833__5;
  G__40833.cljs$core$IFn$_invoke$arity$6 = G__40833__6;
  G__40833.cljs$core$IFn$_invoke$arity$7 = G__40833__7;
  G__40833.cljs$core$IFn$_invoke$arity$8 = G__40833__8;
  G__40833.cljs$core$IFn$_invoke$arity$9 = G__40833__9;
  G__40833.cljs$core$IFn$_invoke$arity$10 = G__40833__10;
  G__40833.cljs$core$IFn$_invoke$arity$11 = G__40833__11;
  G__40833.cljs$core$IFn$_invoke$arity$12 = G__40833__12;
  G__40833.cljs$core$IFn$_invoke$arity$13 = G__40833__13;
  G__40833.cljs$core$IFn$_invoke$arity$14 = G__40833__14;
  G__40833.cljs$core$IFn$_invoke$arity$15 = G__40833__15;
  G__40833.cljs$core$IFn$_invoke$arity$16 = G__40833__16;
  G__40833.cljs$core$IFn$_invoke$arity$17 = G__40833__17;
  G__40833.cljs$core$IFn$_invoke$arity$18 = G__40833__18;
  G__40833.cljs$core$IFn$_invoke$arity$19 = G__40833__19;
  G__40833.cljs$core$IFn$_invoke$arity$20 = G__40833__20;
  G__40833.cljs$core$IFn$_invoke$arity$21 = G__40833__21;
  G__40833.cljs$core$IFn$_invoke$arity$22 = G__40833__22;
  return G__40833;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args40832) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args40832)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = true;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__40834 = self__.uuid;
  var G__40835 = other.uuid;
  return goog.array.defaultCompare(G__40834, G__40835);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args40838 = [];
  var len__27315__auto___40841 = arguments.length;
  var i__27316__auto___40842 = 0;
  while (true) {
    if (i__27316__auto___40842 < len__27315__auto___40841) {
      args40838.push(arguments[i__27316__auto___40842]);
      var G__40843 = i__27316__auto___40842 + 1;
      i__27316__auto___40842 = G__40843;
      continue;
    } else {
    }
    break;
  }
  var G__40840 = args40838.length;
  switch(G__40840) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40838.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, 
  "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, 
  null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, 
  "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__40845 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__40845) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__40847_SHARP_, p2__40848_SHARP_) {
      goog.object.set(p1__40847_SHARP_, p2__40848_SHARP_, true);
      return p1__40847_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__40851 = cljs.core.next(ks__$1);
          var G__40852 = [cljs.core.str(function() {
            var G__40850 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__40850), cljs.core.str("|")].join("");
            } else {
              return G__40850;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__40851;
          ret = G__40852;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_40853 = 0;
  while (true) {
    if (i_40853 < name.length) {
      var c_40854 = name.charAt(i_40853);
      var sub_40855 = goog.object.get(cljs.core.CHAR_MAP, c_40854);
      if (!(sub_40855 == null)) {
        sb.append(sub_40855);
      } else {
        sb.append(c_40854);
      }
      var G__40856 = i_40853 + 1;
      i_40853 = G__40856;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__40860 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40860, 0, null);
      var G__40863 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__40864 = r.lastIndex;
      ret = G__40863;
      last_match_end = G__40864;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write(writer__26847__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__40869 = function() {
          var G__40867 = ctxt;
          var G__40868 = cljs.core.first(xs);
          return goog.object.get(G__40867, G__40868);
        }();
        var G__40870 = cljs.core.next(xs);
        ctxt = G__40869;
        xs = G__40870;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__40874 = cljs.core._STAR_target_STAR_;
  switch(G__40874) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__40876 = cljs.core.first(segs);
            return eval(G__40876);
          } catch (e40875) {
            if (e40875 instanceof ReferenceError) {
              var e = e40875;
              return null;
            } else {
              throw e40875;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args40878 = [];
  var len__27315__auto___40881 = arguments.length;
  var i__27316__auto___40882 = 0;
  while (true) {
    if (i__27316__auto___40882 < len__27315__auto___40881) {
      args40878.push(arguments[i__27316__auto___40882]);
      var G__40883 = i__27316__auto___40882 + 1;
      i__27316__auto___40882 = G__40883;
      continue;
    } else {
    }
    break;
  }
  var G__40880 = args40878.length;
  switch(G__40880) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40878.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__40886 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__40886) : cljs.core.atom.call(null, G__40886);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__40888 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__40888) : cljs.core.atom.call(null, G__40888);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__40891__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__40891 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__40892__i = 0, G__40892__a = new Array(arguments.length - 0);
        while (G__40892__i < G__40892__a.length) {
          G__40892__a[G__40892__i] = arguments[G__40892__i + 0];
          ++G__40892__i;
        }
        args = new cljs.core.IndexedSeq(G__40892__a, 0);
      }
      return G__40891__delegate.call(this, args);
    };
    G__40891.cljs$lang$maxFixedArity = 0;
    G__40891.cljs$lang$applyTo = function(arglist__40893) {
      var args = cljs.core.seq(arglist__40893);
      return G__40891__delegate(args);
    };
    G__40891.cljs$core$IFn$_invoke$arity$variadic = G__40891__delegate;
    return G__40891;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args40894 = [];
  var len__27315__auto___40897 = arguments.length;
  var i__27316__auto___40898 = 0;
  while (true) {
    if (i__27316__auto___40898 < len__27315__auto___40897) {
      args40894.push(arguments[i__27316__auto___40898]);
      var G__40899 = i__27316__auto___40898 + 1;
      i__27316__auto___40898 = G__40899;
      continue;
    } else {
    }
    break;
  }
  var G__40896 = args40894.length;
  switch(G__40896) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40894.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__40901 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__40902 = cljs.core.next.call(null, coll__$1);
      sb = G__40901;
      coll__$1 = G__40902;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__40903 = sb;
      var G__40904 = coll__$2;
      sb = G__40903;
      coll__$1 = G__40904;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__40905 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__40905;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__40909 = cljs.core._EQ__EQ_;
    var expr__40910 = limit;
    if (cljs.core.truth_(pred__40909.call(null, 1, expr__40910))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__40909.call(null, 2, expr__40910))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args40912 = [];
  var len__27315__auto___40915 = arguments.length;
  var i__27316__auto___40916 = 0;
  while (true) {
    if (i__27316__auto___40916 < len__27315__auto___40915) {
      args40912.push(arguments[i__27316__auto___40916]);
      var G__40917 = i__27316__auto___40916 + 1;
      i__27316__auto___40916 = G__40917;
      continue;
    } else {
    }
    break;
  }
  var G__40914 = args40912.length;
  switch(G__40914) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40912.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__40919 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__40920 = limit__$1 - 1;
          var G__40921 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__40919;
          limit__$1 = G__40920;
          parts = G__40921;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__40922 = index - 1;
        index = G__40922;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__40923 = index + 1;
      index = G__40923;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args40924 = [];
  var len__27315__auto___40927 = arguments.length;
  var i__27316__auto___40928 = 0;
  while (true) {
    if (i__27316__auto___40928 < len__27315__auto___40927) {
      args40924.push(arguments[i__27316__auto___40928]);
      var G__40929 = i__27316__auto___40928 + 1;
      i__27316__auto___40928 = G__40929;
      continue;
    } else {
    }
    break;
  }
  var G__40926 = args40924.length;
  switch(G__40926) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40924.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args40931 = [];
  var len__27315__auto___40934 = arguments.length;
  var i__27316__auto___40935 = 0;
  while (true) {
    if (i__27316__auto___40935 < len__27315__auto___40934) {
      args40931.push(arguments[i__27316__auto___40935]);
      var G__40936 = i__27316__auto___40935 + 1;
      i__27316__auto___40935 = G__40936;
      continue;
    } else {
    }
    break;
  }
  var G__40933 = args40931.length;
  switch(G__40933) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40931.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40941 = arguments.length;
  var i__27316__auto___40942 = 0;
  while (true) {
    if (i__27316__auto___40942 < len__27315__auto___40941) {
      args__27322__auto__.push(arguments[i__27316__auto___40942]);
      var G__40943 = i__27316__auto___40942 + 1;
      i__27316__auto___40942 = G__40943;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq40940) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq40940));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40945 = arguments.length;
  var i__27316__auto___40946 = 0;
  while (true) {
    if (i__27316__auto___40946 < len__27315__auto___40945) {
      args__27322__auto__.push(arguments[i__27316__auto___40946]);
      var G__40947 = i__27316__auto___40946 + 1;
      i__27316__auto___40946 = G__40947;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq40944) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq40944));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__40951 = cljs.core._EQ_;
    var expr__40952 = c;
    if (cljs.core.truth_(pred__40951.call(null, "\b", expr__40952))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__40951.call(null, "\t", expr__40952))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__40951.call(null, "\n", expr__40952))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__40951.call(null, "\f", expr__40952))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__40951.call(null, "\r", expr__40952))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__40951.call(null, '"', expr__40952))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__40951.call(null, "\\", expr__40952))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40955 = arguments.length;
  var i__27316__auto___40956 = 0;
  while (true) {
    if (i__27316__auto___40956 < len__27315__auto___40955) {
      args__27322__auto__.push(arguments[i__27316__auto___40956]);
      var G__40957 = i__27316__auto___40956 + 1;
      i__27316__auto___40956 = G__40957;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq40954) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq40954));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___40959 = arguments.length;
  var i__27316__auto___40960 = 0;
  while (true) {
    if (i__27316__auto___40960 < len__27315__auto___40959) {
      args__27322__auto__.push(arguments[i__27316__auto___40960]);
      var G__40961 = i__27316__auto___40960 + 1;
      i__27316__auto___40960 = G__40961;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 0 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__27323__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq40958) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq40958));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__40965 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__40965, 0, null);
      var new_context = cljs.core.nth.call(null, vec__40965, 1, null);
      var G__40968 = new_context;
      var G__40969 = remainder;
      var G__40970 = cljs.core.conj.call(null, acc, result);
      context = G__40968;
      lis__$1 = G__40969;
      acc = G__40970;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__40974 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__40974, 0, null);
    var new_context = cljs.core.nth.call(null, vec__40974, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__40977 = new_context;
      var G__40978 = cljs.core.conj.call(null, acc, result);
      context = G__40977;
      acc = G__40978;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__40982 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__40982, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__40982, 1, null);
    var new_context = cljs.core.nth.call(null, vec__40982, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__40985 = new_context;
      var G__40986 = cljs.core.conj.call(null, acc, result);
      context = G__40985;
      acc = G__40986;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function cljs$pprint$unzip_map_$_iter__41043(s__41044) {
      return new cljs.core.LazySeq(null, function() {
        var s__41044__$1 = s__41044;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__41044__$1);
          if (temp__4657__auto__) {
            var s__41044__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__41044__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__41044__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__41046 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__41045 = 0;
                while (true) {
                  if (i__41045 < size__27019__auto__) {
                    var vec__41059 = cljs.core._nth.call(null, c__27018__auto__, i__41045);
                    var k = cljs.core.nth.call(null, vec__41059, 0, null);
                    var vec__41062 = cljs.core.nth.call(null, vec__41059, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__41062, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__41062, 1, null);
                    cljs.core.chunk_append.call(null, b__41046, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__41099 = i__41045 + 1;
                    i__41045 = G__41099;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41046), cljs$pprint$unzip_map_$_iter__41043.call(null, cljs.core.chunk_rest.call(null, s__41044__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41046), null);
              }
            } else {
              var vec__41065 = cljs.core.first.call(null, s__41044__$2);
              var k = cljs.core.nth.call(null, vec__41065, 0, null);
              var vec__41068 = cljs.core.nth.call(null, vec__41065, 1, null);
              var v1 = cljs.core.nth.call(null, vec__41068, 0, null);
              var v2 = cljs.core.nth.call(null, vec__41068, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__41043.call(null, cljs.core.rest.call(null, s__41044__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function cljs$pprint$unzip_map_$_iter__41071(s__41072) {
      return new cljs.core.LazySeq(null, function() {
        var s__41072__$1 = s__41072;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__41072__$1);
          if (temp__4657__auto__) {
            var s__41072__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__41072__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__41072__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__41074 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__41073 = 0;
                while (true) {
                  if (i__41073 < size__27019__auto__) {
                    var vec__41087 = cljs.core._nth.call(null, c__27018__auto__, i__41073);
                    var k = cljs.core.nth.call(null, vec__41087, 0, null);
                    var vec__41090 = cljs.core.nth.call(null, vec__41087, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__41090, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__41090, 1, null);
                    cljs.core.chunk_append.call(null, b__41074, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__41100 = i__41073 + 1;
                    i__41073 = G__41100;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41074), cljs$pprint$unzip_map_$_iter__41071.call(null, cljs.core.chunk_rest.call(null, s__41072__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41074), null);
              }
            } else {
              var vec__41093 = cljs.core.first.call(null, s__41072__$2);
              var k = cljs.core.nth.call(null, vec__41093, 0, null);
              var vec__41096 = cljs.core.nth.call(null, vec__41093, 1, null);
              var v1 = cljs.core.nth.call(null, vec__41096, 0, null);
              var v2 = cljs.core.nth.call(null, vec__41096, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__41071.call(null, cljs.core.rest.call(null, s__41072__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function cljs$pprint$tuple_map_$_iter__41117(s__41118) {
      return new cljs.core.LazySeq(null, function() {
        var s__41118__$1 = s__41118;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__41118__$1);
          if (temp__4657__auto__) {
            var s__41118__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__41118__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__41118__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__41120 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__41119 = 0;
                while (true) {
                  if (i__41119 < size__27019__auto__) {
                    var vec__41127 = cljs.core._nth.call(null, c__27018__auto__, i__41119);
                    var k = cljs.core.nth.call(null, vec__41127, 0, null);
                    var v = cljs.core.nth.call(null, vec__41127, 1, null);
                    cljs.core.chunk_append.call(null, b__41120, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__41133 = i__41119 + 1;
                    i__41119 = G__41133;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41120), cljs$pprint$tuple_map_$_iter__41117.call(null, cljs.core.chunk_rest.call(null, s__41118__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41120), null);
              }
            } else {
              var vec__41130 = cljs.core.first.call(null, s__41118__$2);
              var k = cljs.core.nth.call(null, vec__41130, 0, null);
              var v = cljs.core.nth.call(null, vec__41130, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__41117.call(null, cljs.core.rest.call(null, s__41118__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__41134 = n - 1;
          n = G__41134;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__41135 = n + 1;
        n = G__41135;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__41136 = pos + 1;
      pos = G__41136;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__26903__auto__ = pp == null ? null : pp;
    var m__26904__auto__ = cljs.pprint._ppflush[goog.typeOf(x__26903__auto__)];
    if (!(m__26904__auto__ == null)) {
      return m__26904__auto__.call(null, pp);
    } else {
      var m__26904__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__26904__auto____$1 == null)) {
        return m__26904__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var args41138 = [];
  var len__27315__auto___41147 = arguments.length;
  var i__27316__auto___41148 = 0;
  while (true) {
    if (i__27316__auto___41148 < len__27315__auto___41147) {
      args41138.push(arguments[i__27316__auto___41148]);
      var G__41149 = i__27316__auto___41148 + 1;
      i__27316__auto___41148 = G__41149;
      continue;
    } else {
    }
    break;
  }
  var G__41140 = args41138.length;
  switch(G__41140) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args41138.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t_cljs$pprint41141 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint41141 = function(writer, max_columns, fields, meta41142) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta41142 = meta41142;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint41141.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_41143, meta41142__$1) {
        var self__ = this;
        var _41143__$1 = this;
        return new cljs.pprint.t_cljs$pprint41141(self__.writer, self__.max_columns, self__.fields, meta41142__$1);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint41141.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_41143) {
        var self__ = this;
        var _41143__$1 = this;
        return self__.meta41142;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint41141.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint41141.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint41141.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__41144 = cljs.core._EQ_;
        var expr__41145 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__41144.call(null, String, expr__41145))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__41144, expr__41145, this$__$1, fields) {
              return function(p1__41137_SHARP_) {
                return cljs.core._EQ_.call(null, p1__41137_SHARP_, "\n");
              };
            }(s, nl, pred__41144, expr__41145, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__41144.call(null, Number, expr__41145))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41145)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t_cljs$pprint41141.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta41142", "meta41142", -213875205, null)], null);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint41141.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint41141.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint41141";
    cljs.pprint.t_cljs$pprint41141.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint41141");
      };
    }(fields);
    cljs.pprint.__GT_t_cljs$pprint41141 = function(fields) {
      return function cljs$pprint$__GT_t_cljs$pprint41141(writer__$1, max_columns__$1, fields__$1, meta41142) {
        return new cljs.pprint.t_cljs$pprint41141(writer__$1, max_columns__$1, fields__$1, meta41142);
      };
    }(fields);
  }
  return new cljs.pprint.t_cljs$pprint41141(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41152, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41154 = k41152 instanceof cljs.core.Keyword ? k41152.fqn : null;
  switch(G__41154) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41152, else__26865__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41151) {
  var self__ = this;
  var G__41151__$1 = this;
  return new cljs.core.RecordIter(0, G__41151__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41151) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41155 = cljs.core.keyword_identical_QMARK_;
  var expr__41156 = k__26870__auto__;
  if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__41156))) {
    return new cljs.pprint.logical_block(G__41151, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__41156))) {
      return new cljs.pprint.logical_block(self__.parent, G__41151, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__41156))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__41151, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__41156))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__41151, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__41156))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__41151, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__41156))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__41151, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__41156))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__41151, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__41156))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__41151, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__41156))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__41151, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__41155.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__41156))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__41151, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41151), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41151) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__41151, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__41153) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__41153), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__41153), null, cljs.core.dissoc.call(null, G__41153, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__41159 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__41159;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41161, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41163 = k41161 instanceof cljs.core.Keyword ? k41161.fqn : null;
  switch(G__41163) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41161, else__26865__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41160) {
  var self__ = this;
  var G__41160__$1 = this;
  return new cljs.core.RecordIter(0, G__41160__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41160) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41164 = cljs.core.keyword_identical_QMARK_;
  var expr__41165 = k__26870__auto__;
  if (cljs.core.truth_(pred__41164.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__41165))) {
    return new cljs.pprint.buffer_blob(G__41160, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41164.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__41165))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__41160, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41164.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__41165))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__41160, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__41164.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__41165))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__41160, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__41164.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__41165))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__41160, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41160), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41160) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__41160, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__41162) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__41162), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__41162), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__41162), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__41162), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__41162), null, cljs.core.dissoc.call(null, G__41162, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__28714__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28714__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41169, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41171 = k41169 instanceof cljs.core.Keyword ? k41169.fqn : null;
  switch(G__41171) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41169, else__26865__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41168) {
  var self__ = this;
  var G__41168__$1 = this;
  return new cljs.core.RecordIter(0, G__41168__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41168) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41172 = cljs.core.keyword_identical_QMARK_;
  var expr__41173 = k__26870__auto__;
  if (cljs.core.truth_(pred__41172.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__41173))) {
    return new cljs.pprint.nl_t(G__41168, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41172.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__41173))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__41168, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41172.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__41173))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__41168, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__41172.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__41173))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__41168, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__41172.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__41173))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__41168, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41168), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41168) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__41168, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__41170) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__41170), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__41170), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__41170), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__41170), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__41170), null, cljs.core.dissoc.call(null, G__41170, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__28714__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28714__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41177, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41179 = k41177 instanceof cljs.core.Keyword ? k41177.fqn : null;
  switch(G__41179) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41177, else__26865__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41176) {
  var self__ = this;
  var G__41176__$1 = this;
  return new cljs.core.RecordIter(0, G__41176__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41176) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41180 = cljs.core.keyword_identical_QMARK_;
  var expr__41181 = k__26870__auto__;
  if (cljs.core.truth_(pred__41180.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__41181))) {
    return new cljs.pprint.start_block_t(G__41176, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41180.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__41181))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__41176, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41180.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__41181))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__41176, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__41180.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__41181))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__41176, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41176), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41176) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__41176, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__41178) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__41178), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__41178), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__41178), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__41178), null, cljs.core.dissoc.call(null, 
  G__41178, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__28714__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28714__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41185, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41187 = k41185 instanceof cljs.core.Keyword ? k41185.fqn : null;
  switch(G__41187) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41185, else__26865__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41184) {
  var self__ = this;
  var G__41184__$1 = this;
  return new cljs.core.RecordIter(0, G__41184__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41184) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41188 = cljs.core.keyword_identical_QMARK_;
  var expr__41189 = k__26870__auto__;
  if (cljs.core.truth_(pred__41188.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__41189))) {
    return new cljs.pprint.end_block_t(G__41184, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41188.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__41189))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__41184, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41188.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__41189))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__41184, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__41188.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__41189))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__41184, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41184), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41184) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__41184, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__41186) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__41186), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__41186), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__41186), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__41186), null, cljs.core.dissoc.call(null, 
  G__41186, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__28714__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28714__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41193, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41195 = k41193 instanceof cljs.core.Keyword ? k41193.fqn : null;
  switch(G__41195) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41193, else__26865__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41192) {
  var self__ = this;
  var G__41192__$1 = this;
  return new cljs.core.RecordIter(0, G__41192__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41192) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41196 = cljs.core.keyword_identical_QMARK_;
  var expr__41197 = k__26870__auto__;
  if (cljs.core.truth_(pred__41196.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__41197))) {
    return new cljs.pprint.indent_t(G__41192, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41196.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__41197))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__41192, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41196.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__41197))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__41192, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__41196.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__41197))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__41192, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__41196.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__41197))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__41192, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__41196.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__41197))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__41192, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41192), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41192) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__41192, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__41194) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__41194), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__41194), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__41194), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__41194), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__41194), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__41194), null, cljs.core.dissoc.call(null, G__41194, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__28714__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__28714__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__) {
      return function(p1__41201_SHARP_, p2__41200_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__41200_SHARP_);
      };
    }(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4657__auto___41202 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___41202)) {
    var cb_41203 = temp__4657__auto___41202;
    cb_41203.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4657__auto___41204 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4657__auto___41204)) {
    var prefix_41205 = temp__4657__auto___41204;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_41205);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4657__auto___41206 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___41206)) {
    var cb_41207 = temp__4657__auto___41206;
    cb_41207.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var suffix = temp__4657__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__41208 = cljs.core._EQ_;
    var expr__41209 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__41208.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__41209))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__41208.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__41209))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41209)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__26240__auto__) {
      return or__26240__auto__;
    } else {
      var and__26228__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__26228__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__26228__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4655__auto___41211 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4655__auto___41211)) {
      var tws_41212 = temp__4655__auto___41211;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_41212);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__41217 = cljs.core.seq.call(null, tokens);
  var chunk__41218 = null;
  var count__41219 = 0;
  var i__41220 = 0;
  while (true) {
    if (i__41220 < count__41219) {
      var token = cljs.core._nth.call(null, chunk__41218, i__41220);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4655__auto___41221 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4655__auto___41221)) {
          var tws_41222 = temp__4655__auto___41221;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_41222);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_41223 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__26228__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__26228__auto__)) {
          return tws_41223;
        } else {
          return and__26228__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_41223);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__41224 = seq__41217;
      var G__41225 = chunk__41218;
      var G__41226 = count__41219;
      var G__41227 = i__41220 + 1;
      seq__41217 = G__41224;
      chunk__41218 = G__41225;
      count__41219 = G__41226;
      i__41220 = G__41227;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__41217);
      if (temp__4657__auto__) {
        var seq__41217__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__41217__$1)) {
          var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__41217__$1);
          var G__41228 = cljs.core.chunk_rest.call(null, seq__41217__$1);
          var G__41229 = c__27051__auto__;
          var G__41230 = cljs.core.count.call(null, c__27051__auto__);
          var G__41231 = 0;
          seq__41217 = G__41228;
          chunk__41218 = G__41229;
          count__41219 = G__41230;
          i__41220 = G__41231;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__41217__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4655__auto___41232 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4655__auto___41232)) {
              var tws_41233 = temp__4655__auto___41232;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_41233);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_41234 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__26228__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__26228__auto__)) {
              return tws_41234;
            } else {
              return and__26228__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_41234);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__41235 = cljs.core.next.call(null, seq__41217__$1);
          var G__41236 = null;
          var G__41237 = 0;
          var G__41238 = 0;
          seq__41217 = G__41235;
          chunk__41218 = G__41236;
          count__41219 = G__41237;
          i__41220 = G__41238;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__26240__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__26228__auto__ = miser_width;
  if (cljs.core.truth_(and__26228__auto__)) {
    var and__26228__auto____$1 = maxcol;
    if (cljs.core.truth_(and__26228__auto____$1)) {
      var and__26228__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__26228__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__26228__auto____$2;
      }
    } else {
      return and__26228__auto____$1;
    }
  } else {
    return and__26228__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__26240__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    var or__26240__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__26240__auto____$1) {
      return or__26240__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__41239_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__26228__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__41239_SHARP_);
        if (cljs.core.truth_(and__26228__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__41239_SHARP_), lb);
        } else {
          return and__26228__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__41240_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__41240_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__26228__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__41240_SHARP_);
        if (cljs.core.truth_(and__26228__auto__)) {
          var or__26240__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__26240__auto__) {
            return or__26240__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__26228__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__41241 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__41241;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_41242 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_41242);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__41243_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__41243_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__41250 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__41250, 0, null);
  var b = cljs.core.nth.call(null, vec__41250, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__41253 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__41253, 0, null);
    var remainder = cljs.core.nth.call(null, vec__41253, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__41256 = new_buffer;
        buffer = G__41256;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var buf = temp__4655__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var tws = temp__4657__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_41265 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_41266 = oldpos_41265 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_41266);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_41265, newpos_41266));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__41261_41267 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__41262_41268 = null;
    var count__41263_41269 = 0;
    var i__41264_41270 = 0;
    while (true) {
      if (i__41264_41270 < count__41263_41269) {
        var l_41271__$1 = cljs.core._nth.call(null, chunk__41262_41268, i__41264_41270);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_41271__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__41272 = seq__41261_41267;
        var G__41273 = chunk__41262_41268;
        var G__41274 = count__41263_41269;
        var G__41275 = i__41264_41270 + 1;
        seq__41261_41267 = G__41272;
        chunk__41262_41268 = G__41273;
        count__41263_41269 = G__41274;
        i__41264_41270 = G__41275;
        continue;
      } else {
        var temp__4657__auto___41276 = cljs.core.seq.call(null, seq__41261_41267);
        if (temp__4657__auto___41276) {
          var seq__41261_41277__$1 = temp__4657__auto___41276;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__41261_41277__$1)) {
            var c__27051__auto___41278 = cljs.core.chunk_first.call(null, seq__41261_41277__$1);
            var G__41279 = cljs.core.chunk_rest.call(null, seq__41261_41277__$1);
            var G__41280 = c__27051__auto___41278;
            var G__41281 = cljs.core.count.call(null, c__27051__auto___41278);
            var G__41282 = 0;
            seq__41261_41267 = G__41279;
            chunk__41262_41268 = G__41280;
            count__41263_41269 = G__41281;
            i__41264_41270 = G__41282;
            continue;
          } else {
            var l_41283__$1 = cljs.core.first.call(null, seq__41261_41277__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_41283__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__41284 = cljs.core.next.call(null, seq__41261_41277__$1);
            var G__41285 = null;
            var G__41286 = 0;
            var G__41287 = 0;
            seq__41261_41267 = G__41284;
            chunk__41262_41268 = G__41285;
            count__41263_41269 = G__41286;
            i__41264_41270 = G__41287;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t_cljs$pprint41294 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint41294 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta41295) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta41295 = meta41295;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint41294.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_41296, meta41295__$1) {
        var self__ = this;
        var _41296__$1 = this;
        return new cljs.pprint.t_cljs$pprint41294(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta41295__$1);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint41294.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_41296) {
        var self__ = this;
        var _41296__$1 = this;
        return self__.meta41295;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint41294.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint41294.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__41297 = cljs.core._EQ_;
        var expr__41298 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__41297.call(null, String, expr__41298))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__41297.call(null, Number, expr__41298))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41298)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint41294.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint41294.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t_cljs$pprint41294.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint41294.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta41295", "meta41295", 1781660982, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint41294.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint41294.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint41294";
    cljs.pprint.t_cljs$pprint41294.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint41294");
      };
    }(lb, fields);
    cljs.pprint.__GT_t_cljs$pprint41294 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint41294(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta41295) {
        return new cljs.pprint.t_cljs$pprint41294(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta41295);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t_cljs$pprint41294(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4657__auto___41300 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___41300)) {
      var cb_41301 = temp__4657__auto___41300;
      cb_41301.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4657__auto___41302 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___41302)) {
      var cb_41303 = temp__4657__auto___41302;
      cb_41303.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_41304 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_41305 = oldpos_41304 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_41305);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_41304, newpos_41305));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__41309 = cljs.core._EQ_;
      var expr__41310 = relative_to;
      if (cljs.core.truth_(pred__41309.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__41310))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__41309.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__41310))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41310)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 
1, true, 119, 130, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 83, 89, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 
17, 1, true, 107, 117, cljs.core.List.EMPTY, "*print-length* controls how many items of each collection the\n  printer will print. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  number of items of each collection to print. If a collection contains\n  more items, the printer will print items up to the limit followed by\n  '...' to represent the remaining items. The root binding is nil\n  indicating no limit.", new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "resources/public/js/compiled/worker/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__41312_SHARP_) {
    var temp__4657__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__41312_SHARP_));
    if (cljs.core.truth_(temp__4657__auto__)) {
      var v = temp__4657__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__41312_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__26228__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__26228__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__26228__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__26228__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___41333 = arguments.length;
  var i__27316__auto___41334 = 0;
  while (true) {
    if (i__27316__auto___41334 < len__27315__auto___41333) {
      args__27322__auto__.push(arguments[i__27316__auto___41334]);
      var G__41335 = i__27316__auto___41334 + 1;
      i__27316__auto___41334 = G__41335;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 1 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__27323__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_41319 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_41320 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_41321 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_41322 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_41323 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_41324 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_41325 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_41326 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_41327 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_41328 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_41329 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_41330 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__28697__auto___41336 = base_writer;
        var new_writer__28698__auto___41337 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__28697__auto___41336));
        var _STAR_out_STAR_41331_41338 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__28698__auto___41337 ? cljs.pprint.make_pretty_writer.call(null, base_writer__28697__auto___41336, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__28697__auto___41336;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_41331_41338;
        }
      } else {
        var _STAR_out_STAR_41332_41339 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_41332_41339;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_41330;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_41329;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_41328;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_41327;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_41326;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_41325;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_41324;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_41323;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_41322;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_41321;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_41320;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_41319;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq41317) {
  var G__41318 = cljs.core.first.call(null, seq41317);
  var seq41317__$1 = cljs.core.next.call(null, seq41317);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__41318, seq41317__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var args41340 = [];
  var len__27315__auto___41346 = arguments.length;
  var i__27316__auto___41347 = 0;
  while (true) {
    if (i__27316__auto___41347 < len__27315__auto___41346) {
      args41340.push(arguments[i__27316__auto___41347]);
      var G__41348 = i__27316__auto___41347 + 1;
      i__27316__auto___41347 = G__41348;
      continue;
    } else {
    }
    break;
  }
  var G__41342 = args41340.length;
  switch(G__41342) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args41340.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_41343 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_41343;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__28697__auto__ = writer;
  var new_writer__28698__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__28697__auto__));
  var _STAR_out_STAR_41344 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__28698__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__28697__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__28697__auto__;
  try {
    var _STAR_print_pretty_STAR_41345_41350 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_41345_41350;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_41344;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__26228__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__26228__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__26228__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___41354 = arguments.length;
  var i__27316__auto___41355 = 0;
  while (true) {
    if (i__27316__auto___41355 < len__27315__auto___41354) {
      args__27322__auto__.push(arguments[i__27316__auto___41355]);
      var G__41356 = i__27316__auto___41355 + 1;
      i__27316__auto___41355 = G__41356;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq41351) {
  var G__41352 = cljs.core.first.call(null, seq41351);
  var seq41351__$1 = cljs.core.next.call(null, seq41351);
  var G__41353 = cljs.core.first.call(null, seq41351__$1);
  var seq41351__$2 = cljs.core.next.call(null, seq41351__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__41352, G__41353, seq41351__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41358, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41360 = k41358 instanceof cljs.core.Keyword ? k41358.fqn : null;
  switch(G__41360) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41358, else__26865__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41357) {
  var self__ = this;
  var G__41357__$1 = this;
  return new cljs.core.RecordIter(0, G__41357__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41357) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41361 = cljs.core.keyword_identical_QMARK_;
  var expr__41362 = k__26870__auto__;
  if (cljs.core.truth_(pred__41361.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__41362))) {
    return new cljs.pprint.arg_navigator(G__41357, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41361.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__41362))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__41357, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41361.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__41362))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__41357, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41357), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41357) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__41357, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__41359) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__41359), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__41359), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__41359), null, cljs.core.dissoc.call(null, G__41359, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__41368 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__41368, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41368, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__26862__auto__, k__26863__auto__) {
  var self__ = this;
  var this__26862__auto____$1 = this;
  return cljs.core._lookup.call(null, this__26862__auto____$1, k__26863__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__26864__auto__, k41372, else__26865__auto__) {
  var self__ = this;
  var this__26864__auto____$1 = this;
  var G__41374 = k41372 instanceof cljs.core.Keyword ? k41372.fqn : null;
  switch(G__41374) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k41372, else__26865__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__26876__auto__, writer__26877__auto__, opts__26878__auto__) {
  var self__ = this;
  var this__26876__auto____$1 = this;
  var pr_pair__26879__auto__ = function(this__26876__auto____$1) {
    return function(keyval__26880__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, cljs.core.pr_writer, "", " ", "", opts__26878__auto__, keyval__26880__auto__);
    };
  }(this__26876__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__26877__auto__, pr_pair__26879__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__26878__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__41371) {
  var self__ = this;
  var G__41371__$1 = this;
  return new cljs.core.RecordIter(0, G__41371__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__26860__auto__) {
  var self__ = this;
  var this__26860__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__26856__auto__) {
  var self__ = this;
  var this__26856__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__26866__auto__) {
  var self__ = this;
  var this__26866__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__26857__auto__) {
  var self__ = this;
  var this__26857__auto____$1 = this;
  var h__26675__auto__ = self__.__hash;
  if (!(h__26675__auto__ == null)) {
    return h__26675__auto__;
  } else {
    var h__26675__auto____$1 = cljs.core.hash_imap.call(null, this__26857__auto____$1);
    self__.__hash = h__26675__auto____$1;
    return h__26675__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__26858__auto__, other__26859__auto__) {
  var self__ = this;
  var this__26858__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = other__26859__auto__;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = this__26858__auto____$1.constructor === other__26859__auto__.constructor;
      if (and__26228__auto____$1) {
        return cljs.core.equiv_map.call(null, this__26858__auto____$1, other__26859__auto__);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__26871__auto__, k__26872__auto__) {
  var self__ = this;
  var this__26871__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__26872__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__26871__auto____$1), self__.__meta), k__26872__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__26872__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__26869__auto__, k__26870__auto__, G__41371) {
  var self__ = this;
  var this__26869__auto____$1 = this;
  var pred__41375 = cljs.core.keyword_identical_QMARK_;
  var expr__41376 = k__26870__auto__;
  if (cljs.core.truth_(pred__41375.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__41376))) {
    return new cljs.pprint.compiled_directive(G__41371, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__41375.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__41376))) {
      return new cljs.pprint.compiled_directive(self__.func, G__41371, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__41375.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__41376))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__41371, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__41375.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__41376))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__41371, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__26870__auto__, G__41371), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__26874__auto__) {
  var self__ = this;
  var this__26874__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__26861__auto__, G__41371) {
  var self__ = this;
  var this__26861__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__41371, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__26867__auto__, entry__26868__auto__) {
  var self__ = this;
  var this__26867__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__26868__auto__)) {
    return cljs.core._assoc.call(null, this__26867__auto____$1, cljs.core._nth.call(null, entry__26868__auto__, 0), cljs.core._nth.call(null, entry__26868__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__26867__auto____$1, entry__26868__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__26896__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__26896__auto__, writer__26897__auto__) {
  return cljs.core._write.call(null, writer__26897__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__41373) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__41373), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__41373), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__41373), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__41373), null, cljs.core.dissoc.call(null, G__41373, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__41379, navigator) {
  var vec__41389 = p__41379;
  var param = cljs.core.nth.call(null, vec__41389, 0, null);
  var vec__41392 = cljs.core.nth.call(null, vec__41389, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__41392, 0, null);
  var offset = cljs.core.nth.call(null, vec__41392, 1, null);
  var vec__41395 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__41395, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__41395, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__41401 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__41401, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__41401, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__26240__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__41407 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__41407, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__41407, 1, null);
  var base_output = function() {
    var or__26240__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__41410_SHARP_) {
    if (p1__41410_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__41410_SHARP_, base), cljs.core.quot.call(null, p1__41410_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__41411_SHARP_) {
        if (p1__41411_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__41411_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__41411_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__41416 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__41416, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__41416, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_41419 = arg < 0;
    var pos_arg_41420 = neg_41419 ? -arg : arg;
    var raw_str_41421 = cljs.pprint.opt_base_str.call(null, base, pos_arg_41420);
    var group_str_41422 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_41419, pos_arg_41420, raw_str_41421, vec__41416, arg, arg_navigator__$1) {
        return function(p1__41412_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__41412_SHARP_);
        };
      }(neg_41419, pos_arg_41420, raw_str_41421, vec__41416, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_41421));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_41421;
    var signed_str_41423 = neg_41419 ? [cljs.core.str("-"), cljs.core.str(group_str_41422)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_41422)].join("") : group_str_41422;
    var padded_str_41424 = signed_str_41423.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_41423.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_41423)].join("") : 
    signed_str_41423;
    cljs.pprint.print.call(null, padded_str_41424);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__41425 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__41426 = pos - 1;
      var G__41427 = cljs.core.first.call(null, remainder);
      var G__41428 = cljs.core.next.call(null, remainder);
      acc = G__41425;
      pos = G__41426;
      this$ = G__41427;
      remainder = G__41428;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__41432 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41432, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41432, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_41435 = arg < 0 ? -arg : arg;
    var parts_41436 = cljs.pprint.remainders.call(null, 1E3, abs_arg_41435);
    if (cljs.core.count.call(null, parts_41436) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_41437 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_41436);
      var full_str_41438 = cljs.pprint.add_english_scales.call(null, parts_strs_41437, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_41438)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__41442 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41442, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41442, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_41445 = arg < 0 ? -arg : arg;
    var parts_41446 = cljs.pprint.remainders.call(null, 1E3, abs_arg_41445);
    if (cljs.core.count.call(null, parts_41446) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_41447 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_41446));
      var head_str_41448 = cljs.pprint.add_english_scales.call(null, parts_strs_41447, 1);
      var tail_str_41449 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_41446));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_41448) && !cljs.core.empty_QMARK_.call(null, tail_str_41449) ? [cljs.core.str(head_str_41448), cljs.core.str(", "), cljs.core.str(tail_str_41449)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_41448) ? [cljs.core.str(head_str_41448), cljs.core.str("th")].join("") : tail_str_41449)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_41450 = cljs.core.rem.call(null, arg, 100);
      var not_teens_41451 = 11 < low_two_digits_41450 || 19 > low_two_digits_41450;
      var low_digit_41452 = cljs.core.rem.call(null, low_two_digits_41450, 10);
      cljs.pprint.print.call(null, low_digit_41452 === 1 && not_teens_41451 ? "st" : low_digit_41452 === 2 && not_teens_41451 ? "nd" : low_digit_41452 === 3 && not_teens_41451 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__41456 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41456, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41456, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_41459 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_41460 = cljs.core.PersistentVector.EMPTY;
    var pos_41461 = cljs.core.count.call(null, digits_41459) - 1;
    var digits_41462__$1 = digits_41459;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_41462__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_41460));
      } else {
        var digit_41463 = cljs.core.first.call(null, digits_41462__$1);
        var G__41464 = cljs.core._EQ_.call(null, 0, digit_41463) ? acc_41460 : cljs.core.conj.call(null, acc_41460, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_41461), digit_41463 - 1));
        var G__41465 = pos_41461 - 1;
        var G__41466 = cljs.core.next.call(null, digits_41462__$1);
        acc_41460 = G__41464;
        pos_41461 = G__41465;
        digits_41462__$1 = G__41466;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__41470 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__41470, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41470, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__41479 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__41479, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41479, 1, null);
  var pred__41482_41485 = cljs.core._EQ_;
  var expr__41483_41486 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__41482_41485.call(null, "o", expr__41483_41486))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__41482_41485.call(null, "u", expr__41483_41486))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__41482_41485.call(null, null, expr__41483_41486))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41483_41486)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__41490 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__41490, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41490, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__41499 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__41499, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__41499, 1, null);
      var vec__41502 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__41502, 0, null);
      var offsets = cljs.core.nth.call(null, vec__41502, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__41508 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__41508, 0, null);
  var e = cljs.core.nth.call(null, vec__41508, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__41511 = i - 1;
        i = G__41511;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = d;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__26571__auto__ = 2;
      var y__26572__auto__ = w;
      return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__26571__auto__ = e + 1;
      var y__26572__auto__ = w__$1 - 1;
      return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
    }() : w__$1 + e;
    var vec__41515 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__41515, 0, null);
    var e1 = cljs.core.nth.call(null, vec__41515, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__41515, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__41515, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__41521 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__41521, 0, null);
  var e1 = cljs.core.nth.call(null, vec__41521, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__41536 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41536, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41536, 1, null);
  var vec__41539 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__41539, 0, null);
  var abs = cljs.core.nth.call(null, vec__41539, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__41542 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__41542, 0, null);
  var exp = cljs.core.nth.call(null, vec__41542, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__41545 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__41545, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__41545, 1, null);
  var expanded = cljs.core.nth.call(null, vec__41545, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__26228__auto__ = w;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = d;
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_41548 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_41549 = cljs.core.truth_(add_sign) ? len_41548 + 1 : len_41548;
    var prepend_zero_41550__$1 = prepend_zero && !(signed_len_41549 >= w);
    var append_zero_41551__$1 = append_zero && !(signed_len_41549 >= w);
    var full_len_41552 = prepend_zero_41550__$1 || append_zero_41551__$1 ? signed_len_41549 + 1 : signed_len_41549;
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = full_len_41552 > w;
      if (and__26228__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__26228__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_41552, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_41550__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_41551__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__41569 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41569, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41569, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__41575_41585 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__41576_41586 = G__41575_41585;
  var mantissa_41587 = cljs.core.nth.call(null, vec__41576_41586, 0, null);
  var exp_41588 = cljs.core.nth.call(null, vec__41576_41586, 1, null);
  var G__41575_41589__$1 = G__41575_41585;
  while (true) {
    var vec__41579_41590 = G__41575_41589__$1;
    var mantissa_41591__$1 = cljs.core.nth.call(null, vec__41579_41590, 0, null);
    var exp_41592__$1 = cljs.core.nth.call(null, vec__41579_41590, 1, null);
    var w_41593 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_41594 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_41595 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_41596 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_41597 = function() {
      var or__26240__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_41598 = function() {
      var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__26240__auto__)) {
        return or__26240__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_41599 = k_41596 <= 0;
    var scaled_exp_41600 = exp_41592__$1 - (k_41596 - 1);
    var scaled_exp_str_41601 = [cljs.core.str(Math.abs(scaled_exp_41600))].join("");
    var scaled_exp_str_41602__$1 = [cljs.core.str(expchar_41597), cljs.core.str(scaled_exp_41600 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_41595) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_41595 - cljs.core.count.call(null, scaled_exp_str_41601), "0")) : null), cljs.core.str(scaled_exp_str_41601)].join("");
    var exp_width_41603 = cljs.core.count.call(null, scaled_exp_str_41602__$1);
    var base_mantissa_width_41604 = cljs.core.count.call(null, mantissa_41591__$1);
    var scaled_mantissa_41605 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_41596, "0"))), cljs.core.str(mantissa_41591__$1), cljs.core.str(cljs.core.truth_(d_41594) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_41594 - (base_mantissa_width_41604 - 1) - (k_41596 < 0 ? -k_41596 : 0), "0")) : null)].join("");
    var w_mantissa_41606 = cljs.core.truth_(w_41593) ? w_41593 - exp_width_41603 : null;
    var vec__41582_41607 = cljs.pprint.round_str.call(null, scaled_mantissa_41605, 0, cljs.core._EQ_.call(null, k_41596, 0) ? d_41594 - 1 : k_41596 > 0 ? d_41594 : k_41596 < 0 ? d_41594 - 1 : null, cljs.core.truth_(w_mantissa_41606) ? w_mantissa_41606 - (cljs.core.truth_(add_sign_41598) ? 1 : 0) : null);
    var rounded_mantissa_41608 = cljs.core.nth.call(null, vec__41582_41607, 0, null);
    var __41609 = cljs.core.nth.call(null, vec__41582_41607, 1, null);
    var incr_exp_41610 = cljs.core.nth.call(null, vec__41582_41607, 2, null);
    var full_mantissa_41611 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_41608, k_41596);
    var append_zero_41612 = cljs.core._EQ_.call(null, k_41596, cljs.core.count.call(null, rounded_mantissa_41608)) && d_41594 == null;
    if (cljs.core.not.call(null, incr_exp_41610)) {
      if (cljs.core.truth_(w_41593)) {
        var len_41613 = cljs.core.count.call(null, full_mantissa_41611) + exp_width_41603;
        var signed_len_41614 = cljs.core.truth_(add_sign_41598) ? len_41613 + 1 : len_41613;
        var prepend_zero_41615__$1 = prepend_zero_41599 && !cljs.core._EQ_.call(null, signed_len_41614, w_41593);
        var full_len_41616 = prepend_zero_41615__$1 ? signed_len_41614 + 1 : signed_len_41614;
        var append_zero_41617__$1 = append_zero_41612 && full_len_41616 < w_41593;
        if (cljs.core.truth_(function() {
          var and__26228__auto__ = function() {
            var or__26240__auto__ = full_len_41616 > w_41593;
            if (or__26240__auto__) {
              return or__26240__auto__;
            } else {
              var and__26228__auto__ = e_41595;
              if (cljs.core.truth_(and__26228__auto__)) {
                return exp_width_41603 - 2 > e_41595;
              } else {
                return and__26228__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__26228__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__26228__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_41593, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_41593 - full_len_41616 - (append_zero_41617__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_41598) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_41615__$1 ? "0" : null), cljs.core.str(full_mantissa_41611), cljs.core.str(append_zero_41617__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_41602__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_41598) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_41599 ? "0" : null), cljs.core.str(full_mantissa_41611), cljs.core.str(append_zero_41612 ? "0" : null), cljs.core.str(scaled_exp_str_41602__$1)].join(""));
      }
    } else {
      var G__41618 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_41608, exp_41592__$1 + 1], null);
      G__41575_41589__$1 = G__41618;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__41625 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41625, 0, null);
  var _ = cljs.core.nth.call(null, vec__41625, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__41628 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__41628, 0, null);
  var exp = cljs.core.nth.call(null, vec__41628, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__26571__auto__ = cljs.core.count.call(null, mantissa);
    var y__26572__auto__ = function() {
      var x__26578__auto__ = n;
      var y__26579__auto__ = 7;
      return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
    }();
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__41640 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41640, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41640, 1, null);
  var vec__41643 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__41643, 0, null);
  var exp = cljs.core.nth.call(null, vec__41643, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__41646 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__41646, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__41646, 1, null);
  var expanded = cljs.core.nth.call(null, vec__41646, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__26228__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__26228__auto__)) {
      return add_sign;
    } else {
      return and__26228__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__26228__auto__) {
      return add_sign;
    } else {
      return and__26228__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__41652 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__41652, 0, null);
  var navigator = cljs.core.nth.call(null, vec__41652, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__41658 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__41658, 0, null);
  var navigator = cljs.core.nth.call(null, vec__41658, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__41664 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__41664, 0, null);
  var navigator = cljs.core.nth.call(null, vec__41664, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__41673 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__41673, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41673, 1, null);
  var vec__41676 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__41676, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__41676, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__41679 = count + 1;
        var G__41680 = iter_result;
        var G__41681 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__41679;
        args__$1 = G__41680;
        last_pos = G__41681;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__41688 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__41688, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41688, 1, null);
  var vec__41691 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__41691, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__41691, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__41694 = count + 1;
        var G__41695 = cljs.core.next.call(null, arg_list__$1);
        count = G__41694;
        arg_list__$1 = G__41695;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__41699 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__41699, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41699, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__41702 = count + 1;
        var G__41703 = iter_result;
        var G__41704 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__41702;
        navigator__$2 = G__41703;
        last_pos = G__41704;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__41711 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__41711, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41711, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__26240__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__26240__auto__) {
        return or__26240__auto__;
      } else {
        var and__26228__auto__ = max_count;
        if (cljs.core.truth_(and__26228__auto__)) {
          return count >= max_count;
        } else {
          return and__26228__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__41714 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__41714, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__41714, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__41717 = count + 1;
        var G__41718 = navigator__$3;
        count = G__41717;
        navigator__$2 = G__41718;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__41723 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_41726 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_41726;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__41723, 0, null);
      var result_str = cljs.core.nth.call(null, vec__41723, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__41727 = cljs.core.next.call(null, clauses__$1);
        var G__41728 = cljs.core.conj.call(null, acc, result_str);
        var G__41729 = iter_result;
        clauses__$1 = G__41727;
        acc = G__41728;
        navigator__$1 = G__41729;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__41742 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var else$ = temp__4657__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__41745 = cljs.core.nth.call(null, vec__41742, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__41745, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__41742, 1, null);
  var navigator__$1 = function() {
    var or__26240__auto__ = new_navigator;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__41748 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__41748, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__41748, 1, null);
  var navigator__$2 = function() {
    var or__26240__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__26240__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__26240__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__41751 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__41751, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__41751, 1, null);
  var slots = function() {
    var x__26571__auto__ = 1;
    var y__26572__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__26571__auto__ = minpad;
    var y__26572__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = eol_str;
    if (cljs.core.truth_(and__26228__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_41754__$1 = slots;
  var extra_pad_41755__$1 = extra_pad;
  var strs_41756__$1 = strs;
  var pad_only_41757 = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_41756__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_41756__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_41757) ? cljs.core.first.call(null, strs_41756__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__26240__auto__ = pad_only_41757;
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          var or__26240__auto____$1 = cljs.core.next.call(null, strs_41756__$1);
          if (or__26240__auto____$1) {
            return or__26240__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_41755__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__41758 = slots_41754__$1 - 1;
      var G__41759 = extra_pad_41755__$1 - 1;
      var G__41760 = cljs.core.truth_(pad_only_41757) ? strs_41756__$1 : cljs.core.next.call(null, strs_41756__$1);
      var G__41761 = false;
      slots_41754__$1 = G__41758;
      extra_pad_41755__$1 = G__41759;
      strs_41756__$1 = G__41760;
      pad_only_41757 = G__41761;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint41768 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint41768 = function(downcase_writer, writer, meta41769) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta41769 = meta41769;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint41768.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41770, meta41769__$1) {
      var self__ = this;
      var _41770__$1 = this;
      return new cljs.pprint.t_cljs$pprint41768(self__.downcase_writer, self__.writer, meta41769__$1);
    };
    cljs.pprint.t_cljs$pprint41768.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41770) {
      var self__ = this;
      var _41770__$1 = this;
      return self__.meta41769;
    };
    cljs.pprint.t_cljs$pprint41768.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint41768.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__41771 = cljs.core._EQ_;
      var expr__41772 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__41771.call(null, String, expr__41772))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__41771.call(null, Number, expr__41772))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41772)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint41768.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta41769", "meta41769", -181966450, null)], null);
    };
    cljs.pprint.t_cljs$pprint41768.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint41768.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint41768";
    cljs.pprint.t_cljs$pprint41768.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint41768");
    };
    cljs.pprint.__GT_t_cljs$pprint41768 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint41768(downcase_writer__$1, writer__$1, meta41769) {
      return new cljs.pprint.t_cljs$pprint41768(downcase_writer__$1, writer__$1, meta41769);
    };
  }
  return new cljs.pprint.t_cljs$pprint41768(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint41780 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint41780 = function(upcase_writer, writer, meta41781) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta41781 = meta41781;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint41780.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_41782, meta41781__$1) {
      var self__ = this;
      var _41782__$1 = this;
      return new cljs.pprint.t_cljs$pprint41780(self__.upcase_writer, self__.writer, meta41781__$1);
    };
    cljs.pprint.t_cljs$pprint41780.prototype.cljs$core$IMeta$_meta$arity$1 = function(_41782) {
      var self__ = this;
      var _41782__$1 = this;
      return self__.meta41781;
    };
    cljs.pprint.t_cljs$pprint41780.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint41780.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__41783 = cljs.core._EQ_;
      var expr__41784 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__41783.call(null, String, expr__41784))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__41783.call(null, Number, expr__41784))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41784)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint41780.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta41781", "meta41781", 1928940057, null)], null);
    };
    cljs.pprint.t_cljs$pprint41780.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint41780.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint41780";
    cljs.pprint.t_cljs$pprint41780.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint41780");
    };
    cljs.pprint.__GT_t_cljs$pprint41780 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint41780(upcase_writer__$1, writer__$1, meta41781) {
      return new cljs.pprint.t_cljs$pprint41780(upcase_writer__$1, writer__$1, meta41781);
    };
  }
  return new cljs.pprint.t_cljs$pprint41780(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__26228__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__26228__auto__)) {
      var and__26228__auto____$1 = f;
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__26228__auto__ = m;
          if (cljs.core.truth_(and__26228__auto__)) {
            return m.index + 1;
          } else {
            return and__26228__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t_cljs$pprint41792 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint41792 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta41793) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta41793 = meta41793;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint41792.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_41794, meta41793__$1) {
        var self__ = this;
        var _41794__$1 = this;
        return new cljs.pprint.t_cljs$pprint41792(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta41793__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint41792.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_41794) {
        var self__ = this;
        var _41794__$1 = this;
        return self__.meta41793;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint41792.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint41792.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__41795 = cljs.core._EQ_;
        var expr__41796 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__41795.call(null, String, expr__41796))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__41795.call(null, Number, expr__41796))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41796)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint41792.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta41793", "meta41793", -883530890, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint41792.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint41792.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint41792";
    cljs.pprint.t_cljs$pprint41792.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint41792");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t_cljs$pprint41792 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint41792(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta41793) {
        return new cljs.pprint.t_cljs$pprint41792(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta41793);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t_cljs$pprint41792(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t_cljs$pprint41804 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint41804 = function(init_cap_writer, writer, capped, meta41805) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta41805 = meta41805;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint41804.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_41806, meta41805__$1) {
        var self__ = this;
        var _41806__$1 = this;
        return new cljs.pprint.t_cljs$pprint41804(self__.init_cap_writer, self__.writer, self__.capped, meta41805__$1);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint41804.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_41806) {
        var self__ = this;
        var _41806__$1 = this;
        return self__.meta41805;
      };
    }(capped);
    cljs.pprint.t_cljs$pprint41804.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint41804.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__41807 = cljs.core._EQ_;
        var expr__41808 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__41807.call(null, String, expr__41808))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__26228__auto__ = m;
              if (cljs.core.truth_(and__26228__auto__)) {
                return m.index;
              } else {
                return and__26228__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__41807.call(null, Number, expr__41808))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__26228__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__26228__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__26228__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__41808)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t_cljs$pprint41804.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta41805", "meta41805", 1138354104, null)], null);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint41804.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint41804.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint41804";
    cljs.pprint.t_cljs$pprint41804.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
        return cljs.core._write.call(null, writer__26847__auto__, "cljs.pprint/t_cljs$pprint41804");
      };
    }(capped);
    cljs.pprint.__GT_t_cljs$pprint41804 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint41804(init_cap_writer__$1, writer__$1, capped__$1, meta41805) {
        return new cljs.pprint.t_cljs$pprint41804(init_cap_writer__$1, writer__$1, capped__$1, meta41805);
      };
    }(capped);
  }
  return new cljs.pprint.t_cljs$pprint41804(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_41811 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_41811;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_41814 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_41815 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_41816 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_41817 = current_41816 < colnum_41814 ? colnum_41814 - current_41816 : cljs.core._EQ_.call(null, colinc_41815, 0) ? 0 : colinc_41815 - cljs.core.rem.call(null, current_41816 - colnum_41814, colinc_41815);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_41817, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_41818 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_41819 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_41820 = colrel_41818 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_41821 = colinc_41819 > 0 ? cljs.core.rem.call(null, start_col_41820, colinc_41819) : 0;
  var space_count_41822 = colrel_41818 + (cljs.core._EQ_.call(null, 0, offset_41821) ? 0 : colinc_41819 - offset_41821);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_41822, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__41828 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__41828, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__41828, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_41831_41833 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_41832_41834 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_41832_41834;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_41831_41833;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__41835_SHARP_, p2__41836_SHARP_, p3__41837_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__41835_SHARP_, p2__41836_SHARP_, p3__41837_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__41838_SHARP_, p2__41839_SHARP_, p3__41840_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__41838_SHARP_, p2__41839_SHARP_, p3__41840_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__41841_SHARP_, p2__41842_SHARP_, p3__41843_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__41841_SHARP_, p2__41842_SHARP_, p3__41843_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__41844_SHARP_, p2__41845_SHARP_, p3__41846_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__41844_SHARP_, p2__41845_SHARP_, p3__41846_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__41847_SHARP_, p2__41848_SHARP_, p3__41849_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__41847_SHARP_, p2__41848_SHARP_, p3__41849_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__41850_SHARP_, p2__41851_SHARP_, p3__41852_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__41850_SHARP_, p2__41851_SHARP_, p3__41852_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__41853_SHARP_, p2__41854_SHARP_, p3__41855_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__41853_SHARP_), p1__41853_SHARP_, p2__41854_SHARP_, p3__41855_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__26228__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__26228__auto__;
      }
    }())) {
      return function(p1__41856_SHARP_, p2__41857_SHARP_, p3__41858_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__41856_SHARP_, p2__41857_SHARP_, p3__41858_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__41859_SHARP_, p2__41860_SHARP_, p3__41861_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__41859_SHARP_, p2__41860_SHARP_, p3__41861_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__41862_SHARP_, p2__41863_SHARP_, p3__41864_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__41862_SHARP_, p2__41863_SHARP_, p3__41864_SHARP_);
          };
        } else {
          return function(p1__41865_SHARP_, p2__41866_SHARP_, p3__41867_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__41865_SHARP_, p2__41866_SHARP_, p3__41867_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__41877 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__41877, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__41877, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__27155__auto___41895 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_41896 = 0;
    while (true) {
      if (i_41896 < n__27155__auto___41895) {
        cljs.pprint.prn.call(null);
        var G__41897 = i_41896 + 1;
        i_41896 = G__41897;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_41898 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_41898 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__27155__auto___41899 = cnt_41898 - 1;
    var i_41900 = 0;
    while (true) {
      if (i_41900 < n__27155__auto___41899) {
        cljs.pprint.prn.call(null);
        var G__41901 = i_41900 + 1;
        i_41900 = G__41901;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__27155__auto___41902 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_41903 = 0;
    while (true) {
      if (i_41903 < n__27155__auto___41902) {
        cljs.pprint.print.call(null, "\f");
        var G__41904 = i_41903 + 1;
        i_41903 = G__41904;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__41868_SHARP_, p2__41869_SHARP_, p3__41870_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__41868_SHARP_, p2__41869_SHARP_, p3__41870_SHARP_);
    };
  } else {
    return function(p1__41871_SHARP_, p2__41872_SHARP_, p3__41873_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__41871_SHARP_, p2__41872_SHARP_, p3__41873_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__41880 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__41880, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__41880, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__41883 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__41883, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__41883, 1, null);
      var vec__41886 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__41886, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__41886, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__26228__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__26228__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__26228__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__41874_SHARP_, p2__41875_SHARP_, p3__41876_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__41874_SHARP_, p2__41875_SHARP_, p3__41876_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__26228__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__26228__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__26228__auto__ = arg1;
      if (cljs.core.truth_(and__26228__auto__)) {
        var and__26228__auto____$1 = arg2;
        if (cljs.core.truth_(and__26228__auto____$1)) {
          return arg3;
        } else {
          return and__26228__auto____$1;
        }
      } else {
        return and__26228__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__26228__auto__ = arg1;
        if (cljs.core.truth_(and__26228__auto__)) {
          return arg2;
        } else {
          return and__26228__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__41889 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__41889, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__41889, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__41892 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__41892, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__41892, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__41905) {
  var vec__41909 = p__41905;
  var s = cljs.core.nth.call(null, vec__41909, 0, null);
  var offset = cljs.core.nth.call(null, vec__41909, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__41909, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__41912) {
  var vec__41916 = p__41912;
  var p = cljs.core.nth.call(null, vec__41916, 0, null);
  var offset = cljs.core.nth.call(null, vec__41916, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__41923) {
    var vec__41924 = p__41923;
    var s__$1 = cljs.core.nth.call(null, vec__41924, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__41924, 1, null);
    var flags = cljs.core.nth.call(null, vec__41924, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__26228__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__26228__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__26228__auto__) {
      var and__26228__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__26228__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__26228__auto____$1;
      }
    } else {
      return and__26228__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__26578__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__26579__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__26578__auto__ < y__26579__auto__ ? x__26578__auto__ : y__26579__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__41927_SHARP_, p2__41928_SHARP_) {
    var val = cljs.core.first.call(null, p1__41927_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__41928_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__41928_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__41927_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__27020__auto__ = function cljs$pprint$map_params_$_iter__41960(s__41961) {
      return new cljs.core.LazySeq(null, function() {
        var s__41961__$1 = s__41961;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__41961__$1);
          if (temp__4657__auto__) {
            var s__41961__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__41961__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__41961__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__41963 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__41962 = 0;
                while (true) {
                  if (i__41962 < size__27019__auto__) {
                    var vec__41976 = cljs.core._nth.call(null, c__27018__auto__, i__41962);
                    var name = cljs.core.nth.call(null, vec__41976, 0, null);
                    var vec__41979 = cljs.core.nth.call(null, vec__41976, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__41979, 0, null);
                    cljs.core.chunk_append.call(null, b__41963, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__41988 = i__41962 + 1;
                    i__41962 = G__41988;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41963), cljs$pprint$map_params_$_iter__41960.call(null, cljs.core.chunk_rest.call(null, s__41961__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41963), null);
              }
            } else {
              var vec__41982 = cljs.core.first.call(null, s__41961__$2);
              var name = cljs.core.nth.call(null, vec__41982, 0, null);
              var vec__41985 = cljs.core.nth.call(null, vec__41982, 1, null);
              var default$ = cljs.core.nth.call(null, vec__41985, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__41960.call(null, cljs.core.rest.call(null, s__41961__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__41929_SHARP_, p2__41930_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__41929_SHARP_, p2__41930_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__41931_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__41931_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__42001 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__42001, 0, null);
  var vec__42004 = cljs.core.nth.call(null, vec__42001, 1, null);
  var rest = cljs.core.nth.call(null, vec__42004, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__42004, 1, null);
  var vec__42007 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__42007, 0, null);
  var vec__42010 = cljs.core.nth.call(null, vec__42007, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__42010, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__42010, 1, null);
  var flags = cljs.core.nth.call(null, vec__42010, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__26228__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__26228__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__26228__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__42016 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__42016, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__42016, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__42029) {
    var vec__42030 = p__42029;
    var clause_map = cljs.core.nth.call(null, vec__42030, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__42030, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__42030, 2, null);
    var vec__42033 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__42033, 0, null);
    var vec__42036 = cljs.core.nth.call(null, vec__42033, 1, null);
    var type = cljs.core.nth.call(null, vec__42036, 0, null);
    var right_params = cljs.core.nth.call(null, vec__42036, 1, null);
    var else_params = cljs.core.nth.call(null, vec__42036, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__42036, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_42044 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_42044) {
      return function(p__42045) {
        var vec__42046 = p__42045;
        var s = cljs.core.nth.call(null, vec__42046, 0, null);
        var offset = cljs.core.nth.call(null, vec__42046, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_42044), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_42044;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__26240__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          var or__26240__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__26240__auto____$1)) {
            return or__26240__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__42049 = cljs.core.next.call(null, format__$1);
        format__$1 = G__42049;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var args42050 = [];
  var len__27315__auto___42060 = arguments.length;
  var i__27316__auto___42061 = 0;
  while (true) {
    if (i__27316__auto___42061 < len__27315__auto___42060) {
      args42050.push(arguments[i__27316__auto___42061]);
      var G__42062 = i__27316__auto___42061 + 1;
      i__27316__auto___42061 = G__42062;
      continue;
    } else {
    }
    break;
  }
  var G__42052 = args42050.length;
  switch(G__42052) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42050.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__26228__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__26228__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__26228__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_42053 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_42053;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__42054 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__42054, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__42054, 1, null);
      var vec__42057 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__42057, 0, null);
      var offsets = cljs.core.nth.call(null, vec__42057, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__26228__auto__ = macro_char;
    if (cljs.core.truth_(and__26228__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__26228__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42067_42070 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42068_42071 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count42069_42072 = 0;
      var alis_42073__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count42069_42072 < cljs.core._STAR_print_length_STAR_) {
          if (alis_42073__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_42073__$1));
            if (cljs.core.next.call(null, alis_42073__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__42074 = length_count42069_42072 + 1;
              var G__42075 = cljs.core.next.call(null, alis_42073__$1);
              length_count42069_42072 = G__42074;
              alis_42073__$1 = G__42075;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42068_42071;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42067_42070;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42079_42082 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42080_42083 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count42081_42084 = 0;
      var aseq_42085 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count42081_42084 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_42085) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_42085));
            if (cljs.core.next.call(null, aseq_42085)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__42086 = length_count42081_42084 + 1;
              var G__42087 = cljs.core.next.call(null, aseq_42085);
              length_count42081_42084 = G__42086;
              aseq_42085 = G__42087;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42080_42083;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42079_42082;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__28758__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
  return function(format_in__28758__auto__, cf__28759__auto__) {
    return function() {
      var G__42088__delegate = function(args__28760__auto__) {
        var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
        return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
      };
      var G__42088 = function(var_args) {
        var args__28760__auto__ = null;
        if (arguments.length > 0) {
          var G__42089__i = 0, G__42089__a = new Array(arguments.length - 0);
          while (G__42089__i < G__42089__a.length) {
            G__42089__a[G__42089__i] = arguments[G__42089__i + 0];
            ++G__42089__i;
          }
          args__28760__auto__ = new cljs.core.IndexedSeq(G__42089__a, 0);
        }
        return G__42088__delegate.call(this, args__28760__auto__);
      };
      G__42088.cljs$lang$maxFixedArity = 0;
      G__42088.cljs$lang$applyTo = function(arglist__42090) {
        var args__28760__auto__ = cljs.core.seq(arglist__42090);
        return G__42088__delegate(args__28760__auto__);
      };
      G__42088.cljs$core$IFn$_invoke$arity$variadic = G__42088__delegate;
      return G__42088;
    }();
  }(format_in__28758__auto__, cf__28759__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42096_42101 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42097_42102 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count42098_42103 = 0;
      var aseq_42104 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count42098_42103 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_42104) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_42099_42105 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_42100_42106 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_42104));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_42104)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42100_42106;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42099_42105;
              }
            }
            if (cljs.core.next.call(null, aseq_42104)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__42107 = length_count42098_42103 + 1;
              var G__42108 = cljs.core.next.call(null, aseq_42104);
              length_count42098_42103 = G__42107;
              aseq_42104 = G__42108;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42097_42102;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42096_42101;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__28758__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
  return function(format_in__28758__auto__, cf__28759__auto__) {
    return function() {
      var G__42109__delegate = function(args__28760__auto__) {
        var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
        return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
      };
      var G__42109 = function(var_args) {
        var args__28760__auto__ = null;
        if (arguments.length > 0) {
          var G__42110__i = 0, G__42110__a = new Array(arguments.length - 0);
          while (G__42110__i < G__42110__a.length) {
            G__42110__a[G__42110__i] = arguments[G__42110__i + 0];
            ++G__42110__i;
          }
          args__28760__auto__ = new cljs.core.IndexedSeq(G__42110__a, 0);
        }
        return G__42109__delegate.call(this, args__28760__auto__);
      };
      G__42109.cljs$lang$maxFixedArity = 0;
      G__42109.cljs$lang$applyTo = function(arglist__42111) {
        var args__28760__auto__ = cljs.core.seq(arglist__42111);
        return G__42109__delegate(args__28760__auto__);
      };
      G__42109.cljs$core$IFn$_invoke$arity$variadic = G__42109__delegate;
      return G__42109;
    }();
  }(format_in__28758__auto__, cf__28759__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__26240__auto__ = function() {
    var temp__4657__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var match = temp__4657__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42116_42120 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42117_42121 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__26228__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__26228__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__26228__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42117_42121;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42116_42120;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__28758__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
  return function(format_in__28758__auto__, cf__28759__auto__) {
    return function() {
      var G__42122__delegate = function(args__28760__auto__) {
        var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
        return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
      };
      var G__42122 = function(var_args) {
        var args__28760__auto__ = null;
        if (arguments.length > 0) {
          var G__42123__i = 0, G__42123__a = new Array(arguments.length - 0);
          while (G__42123__i < G__42123__a.length) {
            G__42123__a[G__42123__i] = arguments[G__42123__i + 0];
            ++G__42123__i;
          }
          args__28760__auto__ = new cljs.core.IndexedSeq(G__42123__a, 0);
        }
        return G__42122__delegate.call(this, args__28760__auto__);
      };
      G__42122.cljs$lang$maxFixedArity = 0;
      G__42122.cljs$lang$applyTo = function(arglist__42124) {
        var args__28760__auto__ = cljs.core.seq(arglist__42124);
        return G__42122__delegate(args__28760__auto__);
      };
      G__42122.cljs$core$IFn$_invoke$arity$variadic = G__42122__delegate;
      return G__42122;
    }();
  }(format_in__28758__auto__, cf__28759__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__42143 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__42143, 0, null);
    var end = cljs.core.nth.call(null, vec__42143, 1, null);
    var vec__42146 = reference;
    var seq__42147 = cljs.core.seq.call(null, vec__42146);
    var first__42148 = cljs.core.first.call(null, seq__42147);
    var seq__42147__$1 = cljs.core.next.call(null, seq__42147);
    var keyw = first__42148;
    var args = seq__42147__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_42149_42159 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_42150_42160 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__28758__auto__ = "~w~:i";
          var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
          return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args) {
            return function() {
              var G__42161__delegate = function(args__28760__auto__) {
                var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
              };
              var G__42161 = function(var_args) {
                var args__28760__auto__ = null;
                if (arguments.length > 0) {
                  var G__42162__i = 0, G__42162__a = new Array(arguments.length - 0);
                  while (G__42162__i < G__42162__a.length) {
                    G__42162__a[G__42162__i] = arguments[G__42162__i + 0];
                    ++G__42162__i;
                  }
                  args__28760__auto__ = new cljs.core.IndexedSeq(G__42162__a, 0);
                }
                return G__42161__delegate.call(this, args__28760__auto__);
              };
              G__42161.cljs$lang$maxFixedArity = 0;
              G__42161.cljs$lang$applyTo = function(arglist__42163) {
                var args__28760__auto__ = cljs.core.seq(arglist__42163);
                return G__42161__delegate(args__28760__auto__);
              };
              G__42161.cljs$core$IFn$_invoke$arity$variadic = G__42161__delegate;
              return G__42161;
            }();
          }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args);
        })().call(null, keyw);
        var args_42164__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_42164__$1)) {
            (function() {
              var format_in__28758__auto__ = " ";
              var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
              return function(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args) {
                return function() {
                  var G__42165__delegate = function(args__28760__auto__) {
                    var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                    return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                  };
                  var G__42165 = function(var_args) {
                    var args__28760__auto__ = null;
                    if (arguments.length > 0) {
                      var G__42166__i = 0, G__42166__a = new Array(arguments.length - 0);
                      while (G__42166__i < G__42166__a.length) {
                        G__42166__a[G__42166__i] = arguments[G__42166__i + 0];
                        ++G__42166__i;
                      }
                      args__28760__auto__ = new cljs.core.IndexedSeq(G__42166__a, 0);
                    }
                    return G__42165__delegate.call(this, args__28760__auto__);
                  };
                  G__42165.cljs$lang$maxFixedArity = 0;
                  G__42165.cljs$lang$applyTo = function(arglist__42167) {
                    var args__28760__auto__ = cljs.core.seq(arglist__42167);
                    return G__42165__delegate(args__28760__auto__);
                  };
                  G__42165.cljs$core$IFn$_invoke$arity$variadic = G__42165__delegate;
                  return G__42165;
                }();
              }(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args);
            })().call(null);
            var arg_42168 = cljs.core.first.call(null, args_42164__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_42168)) {
              var vec__42151_42169 = cljs.pprint.brackets.call(null, arg_42168);
              var start_42170__$1 = cljs.core.nth.call(null, vec__42151_42169, 0, null);
              var end_42171__$1 = cljs.core.nth.call(null, vec__42151_42169, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_42154_42172 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_42155_42173 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_42170__$1, null, end_42171__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_42168), 3) && cljs.core.second.call(null, arg_42168) instanceof cljs.core.Keyword) {
                    var vec__42156_42174 = arg_42168;
                    var ns_42175 = cljs.core.nth.call(null, vec__42156_42174, 0, null);
                    var kw_42176 = cljs.core.nth.call(null, vec__42156_42174, 1, null);
                    var lis_42177 = cljs.core.nth.call(null, vec__42156_42174, 2, null);
                    (function() {
                      var format_in__28758__auto__ = "~w ~w ";
                      var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
                      return function(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, vec__42156_42174, ns_42175, kw_42176, lis_42177, _STAR_current_level_STAR_42154_42172, _STAR_current_length_STAR_42155_42173, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args) {
                        return function() {
                          var G__42178__delegate = function(args__28760__auto__) {
                            var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                            return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                          };
                          var G__42178 = function(var_args) {
                            var args__28760__auto__ = null;
                            if (arguments.length > 0) {
                              var G__42179__i = 0, G__42179__a = new Array(arguments.length - 0);
                              while (G__42179__i < G__42179__a.length) {
                                G__42179__a[G__42179__i] = arguments[G__42179__i + 0];
                                ++G__42179__i;
                              }
                              args__28760__auto__ = new cljs.core.IndexedSeq(G__42179__a, 0);
                            }
                            return G__42178__delegate.call(this, args__28760__auto__);
                          };
                          G__42178.cljs$lang$maxFixedArity = 0;
                          G__42178.cljs$lang$applyTo = function(arglist__42180) {
                            var args__28760__auto__ = cljs.core.seq(arglist__42180);
                            return G__42178__delegate(args__28760__auto__);
                          };
                          G__42178.cljs$core$IFn$_invoke$arity$variadic = G__42178__delegate;
                          return G__42178;
                        }();
                      }(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, vec__42156_42174, ns_42175, kw_42176, lis_42177, _STAR_current_level_STAR_42154_42172, _STAR_current_length_STAR_42155_42173, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args);
                    })().call(null, ns_42175, kw_42176);
                    if (cljs.core.sequential_QMARK_.call(null, lis_42177)) {
                      (function() {
                        var format_in__28758__auto__ = cljs.core.vector_QMARK_.call(null, lis_42177) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
                        return function(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, vec__42156_42174, ns_42175, kw_42176, lis_42177, _STAR_current_level_STAR_42154_42172, _STAR_current_length_STAR_42155_42173, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args) {
                          return function() {
                            var G__42181__delegate = function(args__28760__auto__) {
                              var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                              return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                            };
                            var G__42181 = function(var_args) {
                              var args__28760__auto__ = null;
                              if (arguments.length > 0) {
                                var G__42182__i = 0, G__42182__a = new Array(arguments.length - 0);
                                while (G__42182__i < G__42182__a.length) {
                                  G__42182__a[G__42182__i] = arguments[G__42182__i + 0];
                                  ++G__42182__i;
                                }
                                args__28760__auto__ = new cljs.core.IndexedSeq(G__42182__a, 0);
                              }
                              return G__42181__delegate.call(this, args__28760__auto__);
                            };
                            G__42181.cljs$lang$maxFixedArity = 0;
                            G__42181.cljs$lang$applyTo = function(arglist__42183) {
                              var args__28760__auto__ = cljs.core.seq(arglist__42183);
                              return G__42181__delegate(args__28760__auto__);
                            };
                            G__42181.cljs$core$IFn$_invoke$arity$variadic = G__42181__delegate;
                            return G__42181;
                          }();
                        }(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, vec__42156_42174, ns_42175, kw_42176, lis_42177, _STAR_current_level_STAR_42154_42172, _STAR_current_length_STAR_42155_42173, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args);
                      })().call(null, lis_42177);
                    } else {
                      cljs.pprint.write_out.call(null, lis_42177);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__28758__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
                      return function(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42154_42172, _STAR_current_length_STAR_42155_42173, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args) {
                        return function() {
                          var G__42184__delegate = function(args__28760__auto__) {
                            var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                            return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                          };
                          var G__42184 = function(var_args) {
                            var args__28760__auto__ = null;
                            if (arguments.length > 0) {
                              var G__42185__i = 0, G__42185__a = new Array(arguments.length - 0);
                              while (G__42185__i < G__42185__a.length) {
                                G__42185__a[G__42185__i] = arguments[G__42185__i + 0];
                                ++G__42185__i;
                              }
                              args__28760__auto__ = new cljs.core.IndexedSeq(G__42185__a, 0);
                            }
                            return G__42184__delegate.call(this, args__28760__auto__);
                          };
                          G__42184.cljs$lang$maxFixedArity = 0;
                          G__42184.cljs$lang$applyTo = function(arglist__42186) {
                            var args__28760__auto__ = cljs.core.seq(arglist__42186);
                            return G__42184__delegate(args__28760__auto__);
                          };
                          G__42184.cljs$core$IFn$_invoke$arity$variadic = G__42184__delegate;
                          return G__42184;
                        }();
                      }(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42154_42172, _STAR_current_length_STAR_42155_42173, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args);
                    }(), arg_42168);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42155_42173;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42154_42172;
                }
              }
              if (cljs.core.next.call(null, args_42164__$1)) {
                (function() {
                  var format_in__28758__auto__ = "~_";
                  var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
                  return function(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args) {
                    return function() {
                      var G__42187__delegate = function(args__28760__auto__) {
                        var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                        return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                      };
                      var G__42187 = function(var_args) {
                        var args__28760__auto__ = null;
                        if (arguments.length > 0) {
                          var G__42188__i = 0, G__42188__a = new Array(arguments.length - 0);
                          while (G__42188__i < G__42188__a.length) {
                            G__42188__a[G__42188__i] = arguments[G__42188__i + 0];
                            ++G__42188__i;
                          }
                          args__28760__auto__ = new cljs.core.IndexedSeq(G__42188__a, 0);
                        }
                        return G__42187__delegate.call(this, args__28760__auto__);
                      };
                      G__42187.cljs$lang$maxFixedArity = 0;
                      G__42187.cljs$lang$applyTo = function(arglist__42189) {
                        var args__28760__auto__ = cljs.core.seq(arglist__42189);
                        return G__42187__delegate(args__28760__auto__);
                      };
                      G__42187.cljs$core$IFn$_invoke$arity$variadic = G__42187__delegate;
                      return G__42187;
                    }();
                  }(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, vec__42151_42169, start_42170__$1, end_42171__$1, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_42168);
              if (cljs.core.next.call(null, args_42164__$1)) {
                (function() {
                  var format_in__28758__auto__ = "~:_";
                  var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
                  return function(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args) {
                    return function() {
                      var G__42190__delegate = function(args__28760__auto__) {
                        var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                        return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                      };
                      var G__42190 = function(var_args) {
                        var args__28760__auto__ = null;
                        if (arguments.length > 0) {
                          var G__42191__i = 0, G__42191__a = new Array(arguments.length - 0);
                          while (G__42191__i < G__42191__a.length) {
                            G__42191__a[G__42191__i] = arguments[G__42191__i + 0];
                            ++G__42191__i;
                          }
                          args__28760__auto__ = new cljs.core.IndexedSeq(G__42191__a, 0);
                        }
                        return G__42190__delegate.call(this, args__28760__auto__);
                      };
                      G__42190.cljs$lang$maxFixedArity = 0;
                      G__42190.cljs$lang$applyTo = function(arglist__42192) {
                        var args__28760__auto__ = cljs.core.seq(arglist__42192);
                        return G__42190__delegate(args__28760__auto__);
                      };
                      G__42190.cljs$core$IFn$_invoke$arity$variadic = G__42190__delegate;
                      return G__42190;
                    }();
                  }(args_42164__$1, format_in__28758__auto__, cf__28759__auto__, arg_42168, _STAR_current_level_STAR_42149_42159, _STAR_current_length_STAR_42150_42160, vec__42143, start, end, vec__42146, seq__42147, first__42148, seq__42147__$1, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__42193 = cljs.core.next.call(null, args_42164__$1);
            args_42164__$1 = G__42193;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42150_42160;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42149_42159;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__42205 = alis;
    var seq__42206 = cljs.core.seq.call(null, vec__42205);
    var first__42207 = cljs.core.first.call(null, seq__42206);
    var seq__42206__$1 = cljs.core.next.call(null, seq__42206);
    var ns_sym = first__42207;
    var first__42207__$1 = cljs.core.first.call(null, seq__42206__$1);
    var seq__42206__$2 = cljs.core.next.call(null, seq__42206__$1);
    var ns_name = first__42207__$1;
    var stuff = seq__42206__$2;
    var vec__42208 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__42208, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__42208, 1, null);
    var vec__42211 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__42211, 0, null);
    var references = cljs.core.nth.call(null, vec__42211, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_42214_42216 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_42215_42217 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__28758__auto__ = "~w ~1I~@_~w";
          var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
          return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42214_42216, _STAR_current_length_STAR_42215_42217, vec__42205, seq__42206, first__42207, seq__42206__$1, ns_sym, first__42207__$1, seq__42206__$2, ns_name, stuff, vec__42208, doc_str, stuff__$1, vec__42211, attr_map, references) {
            return function() {
              var G__42218__delegate = function(args__28760__auto__) {
                var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
              };
              var G__42218 = function(var_args) {
                var args__28760__auto__ = null;
                if (arguments.length > 0) {
                  var G__42219__i = 0, G__42219__a = new Array(arguments.length - 0);
                  while (G__42219__i < G__42219__a.length) {
                    G__42219__a[G__42219__i] = arguments[G__42219__i + 0];
                    ++G__42219__i;
                  }
                  args__28760__auto__ = new cljs.core.IndexedSeq(G__42219__a, 0);
                }
                return G__42218__delegate.call(this, args__28760__auto__);
              };
              G__42218.cljs$lang$maxFixedArity = 0;
              G__42218.cljs$lang$applyTo = function(arglist__42220) {
                var args__28760__auto__ = cljs.core.seq(arglist__42220);
                return G__42218__delegate(args__28760__auto__);
              };
              G__42218.cljs$core$IFn$_invoke$arity$variadic = G__42218__delegate;
              return G__42218;
            }();
          }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42214_42216, _STAR_current_length_STAR_42215_42217, vec__42205, seq__42206, first__42207, seq__42206__$1, ns_sym, first__42207__$1, seq__42206__$2, ns_name, stuff, vec__42208, doc_str, stuff__$1, vec__42211, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__26240__auto__ = doc_str;
          if (cljs.core.truth_(or__26240__auto__)) {
            return or__26240__auto__;
          } else {
            var or__26240__auto____$1 = attr_map;
            if (cljs.core.truth_(or__26240__auto____$1)) {
              return or__26240__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__28758__auto__ = "~@:_";
            var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
            return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42214_42216, _STAR_current_length_STAR_42215_42217, vec__42205, seq__42206, first__42207, seq__42206__$1, ns_sym, first__42207__$1, seq__42206__$2, ns_name, stuff, vec__42208, doc_str, stuff__$1, vec__42211, attr_map, references) {
              return function() {
                var G__42221__delegate = function(args__28760__auto__) {
                  var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                };
                var G__42221 = function(var_args) {
                  var args__28760__auto__ = null;
                  if (arguments.length > 0) {
                    var G__42222__i = 0, G__42222__a = new Array(arguments.length - 0);
                    while (G__42222__i < G__42222__a.length) {
                      G__42222__a[G__42222__i] = arguments[G__42222__i + 0];
                      ++G__42222__i;
                    }
                    args__28760__auto__ = new cljs.core.IndexedSeq(G__42222__a, 0);
                  }
                  return G__42221__delegate.call(this, args__28760__auto__);
                };
                G__42221.cljs$lang$maxFixedArity = 0;
                G__42221.cljs$lang$applyTo = function(arglist__42223) {
                  var args__28760__auto__ = cljs.core.seq(arglist__42223);
                  return G__42221__delegate(args__28760__auto__);
                };
                G__42221.cljs$core$IFn$_invoke$arity$variadic = G__42221__delegate;
                return G__42221;
              }();
            }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42214_42216, _STAR_current_length_STAR_42215_42217, vec__42205, seq__42206, first__42207, seq__42206__$1, ns_sym, first__42207__$1, seq__42206__$2, ns_name, stuff, vec__42208, doc_str, stuff__$1, vec__42211, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__26240__auto__ = attr_map;
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__28758__auto__ = "~w~:[~;~:@_~]";
            var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
            return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42214_42216, _STAR_current_length_STAR_42215_42217, vec__42205, seq__42206, first__42207, seq__42206__$1, ns_sym, first__42207__$1, seq__42206__$2, ns_name, stuff, vec__42208, doc_str, stuff__$1, vec__42211, attr_map, references) {
              return function() {
                var G__42224__delegate = function(args__28760__auto__) {
                  var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                };
                var G__42224 = function(var_args) {
                  var args__28760__auto__ = null;
                  if (arguments.length > 0) {
                    var G__42225__i = 0, G__42225__a = new Array(arguments.length - 0);
                    while (G__42225__i < G__42225__a.length) {
                      G__42225__a[G__42225__i] = arguments[G__42225__i + 0];
                      ++G__42225__i;
                    }
                    args__28760__auto__ = new cljs.core.IndexedSeq(G__42225__a, 0);
                  }
                  return G__42224__delegate.call(this, args__28760__auto__);
                };
                G__42224.cljs$lang$maxFixedArity = 0;
                G__42224.cljs$lang$applyTo = function(arglist__42226) {
                  var args__28760__auto__ = cljs.core.seq(arglist__42226);
                  return G__42224__delegate(args__28760__auto__);
                };
                G__42224.cljs$core$IFn$_invoke$arity$variadic = G__42224__delegate;
                return G__42224;
              }();
            }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42214_42216, _STAR_current_length_STAR_42215_42217, vec__42205, seq__42206, first__42207, seq__42206__$1, ns_sym, first__42207__$1, seq__42206__$2, ns_name, stuff, vec__42208, doc_str, stuff__$1, vec__42211, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_42227__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_42227__$1));
          var temp__4657__auto___42228 = cljs.core.next.call(null, references_42227__$1);
          if (temp__4657__auto___42228) {
            var references_42229__$2 = temp__4657__auto___42228;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__42230 = references_42229__$2;
            references_42227__$1 = G__42230;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42215_42217;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42214_42216;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__28758__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
  return function(format_in__28758__auto__, cf__28759__auto__) {
    return function() {
      var G__42231__delegate = function(args__28760__auto__) {
        var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
        return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
      };
      var G__42231 = function(var_args) {
        var args__28760__auto__ = null;
        if (arguments.length > 0) {
          var G__42232__i = 0, G__42232__a = new Array(arguments.length - 0);
          while (G__42232__i < G__42232__a.length) {
            G__42232__a[G__42232__i] = arguments[G__42232__i + 0];
            ++G__42232__i;
          }
          args__28760__auto__ = new cljs.core.IndexedSeq(G__42232__a, 0);
        }
        return G__42231__delegate.call(this, args__28760__auto__);
      };
      G__42231.cljs$lang$maxFixedArity = 0;
      G__42231.cljs$lang$applyTo = function(arglist__42233) {
        var args__28760__auto__ = cljs.core.seq(arglist__42233);
        return G__42231__delegate(args__28760__auto__);
      };
      G__42231.cljs$core$IFn$_invoke$arity$variadic = G__42231__delegate;
      return G__42231;
    }();
  }(format_in__28758__auto__, cf__28759__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__28758__auto__ = " ~_";
        var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
        return function(format_in__28758__auto__, cf__28759__auto__) {
          return function() {
            var G__42234__delegate = function(args__28760__auto__) {
              var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
              return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
            };
            var G__42234 = function(var_args) {
              var args__28760__auto__ = null;
              if (arguments.length > 0) {
                var G__42235__i = 0, G__42235__a = new Array(arguments.length - 0);
                while (G__42235__i < G__42235__a.length) {
                  G__42235__a[G__42235__i] = arguments[G__42235__i + 0];
                  ++G__42235__i;
                }
                args__28760__auto__ = new cljs.core.IndexedSeq(G__42235__a, 0);
              }
              return G__42234__delegate.call(this, args__28760__auto__);
            };
            G__42234.cljs$lang$maxFixedArity = 0;
            G__42234.cljs$lang$applyTo = function(arglist__42236) {
              var args__28760__auto__ = cljs.core.seq(arglist__42236);
              return G__42234__delegate(args__28760__auto__);
            };
            G__42234.cljs$core$IFn$_invoke$arity$variadic = G__42234__delegate;
            return G__42234;
          }();
        }(format_in__28758__auto__, cf__28759__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__28758__auto__ = " ~@_";
        var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
        return function(format_in__28758__auto__, cf__28759__auto__) {
          return function() {
            var G__42237__delegate = function(args__28760__auto__) {
              var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
              return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
            };
            var G__42237 = function(var_args) {
              var args__28760__auto__ = null;
              if (arguments.length > 0) {
                var G__42238__i = 0, G__42238__a = new Array(arguments.length - 0);
                while (G__42238__i < G__42238__a.length) {
                  G__42238__a[G__42238__i] = arguments[G__42238__i + 0];
                  ++G__42238__i;
                }
                args__28760__auto__ = new cljs.core.IndexedSeq(G__42238__a, 0);
              }
              return G__42237__delegate.call(this, args__28760__auto__);
            };
            G__42237.cljs$lang$maxFixedArity = 0;
            G__42237.cljs$lang$applyTo = function(arglist__42239) {
              var args__28760__auto__ = cljs.core.seq(arglist__42239);
              return G__42237__delegate(args__28760__auto__);
            };
            G__42237.cljs$core$IFn$_invoke$arity$variadic = G__42237__delegate;
            return G__42237;
          }();
        }(format_in__28758__auto__, cf__28759__auto__);
      })().call(null);
    }
    return function() {
      var format_in__28758__auto__ = "~{~w~^ ~_~}";
      var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
      return function(format_in__28758__auto__, cf__28759__auto__) {
        return function() {
          var G__42240__delegate = function(args__28760__auto__) {
            var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
            return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
          };
          var G__42240 = function(var_args) {
            var args__28760__auto__ = null;
            if (arguments.length > 0) {
              var G__42241__i = 0, G__42241__a = new Array(arguments.length - 0);
              while (G__42241__i < G__42241__a.length) {
                G__42241__a[G__42241__i] = arguments[G__42241__i + 0];
                ++G__42241__i;
              }
              args__28760__auto__ = new cljs.core.IndexedSeq(G__42241__a, 0);
            }
            return G__42240__delegate.call(this, args__28760__auto__);
          };
          G__42240.cljs$lang$maxFixedArity = 0;
          G__42240.cljs$lang$applyTo = function(arglist__42242) {
            var args__28760__auto__ = cljs.core.seq(arglist__42242);
            return G__42240__delegate(args__28760__auto__);
          };
          G__42240.cljs$core$IFn$_invoke$arity$variadic = G__42240__delegate;
          return G__42240;
        }();
      }(format_in__28758__auto__, cf__28759__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__28758__auto__ = " ~_~{~w~^ ~_~}";
      var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
      return function(format_in__28758__auto__, cf__28759__auto__) {
        return function() {
          var G__42243__delegate = function(args__28760__auto__) {
            var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
            return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
          };
          var G__42243 = function(var_args) {
            var args__28760__auto__ = null;
            if (arguments.length > 0) {
              var G__42244__i = 0, G__42244__a = new Array(arguments.length - 0);
              while (G__42244__i < G__42244__a.length) {
                G__42244__a[G__42244__i] = arguments[G__42244__i + 0];
                ++G__42244__i;
              }
              args__28760__auto__ = new cljs.core.IndexedSeq(G__42244__a, 0);
            }
            return G__42243__delegate.call(this, args__28760__auto__);
          };
          G__42243.cljs$lang$maxFixedArity = 0;
          G__42243.cljs$lang$applyTo = function(arglist__42245) {
            var args__28760__auto__ = cljs.core.seq(arglist__42245);
            return G__42243__delegate(args__28760__auto__);
          };
          G__42243.cljs$core$IFn$_invoke$arity$variadic = G__42243__delegate;
          return G__42243;
        }();
      }(format_in__28758__auto__, cf__28759__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__42257 = alis;
    var seq__42258 = cljs.core.seq.call(null, vec__42257);
    var first__42259 = cljs.core.first.call(null, seq__42258);
    var seq__42258__$1 = cljs.core.next.call(null, seq__42258);
    var defn_sym = first__42259;
    var first__42259__$1 = cljs.core.first.call(null, seq__42258__$1);
    var seq__42258__$2 = cljs.core.next.call(null, seq__42258__$1);
    var defn_name = first__42259__$1;
    var stuff = seq__42258__$2;
    var vec__42260 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__42260, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__42260, 1, null);
    var vec__42263 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__42263, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__42263, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_42266_42268 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_42267_42269 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__28758__auto__ = "~w ~1I~@_~w";
          var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
          return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42266_42268, _STAR_current_length_STAR_42267_42269, vec__42257, seq__42258, first__42259, seq__42258__$1, defn_sym, first__42259__$1, seq__42258__$2, defn_name, stuff, vec__42260, doc_str, stuff__$1, vec__42263, attr_map, stuff__$2) {
            return function() {
              var G__42270__delegate = function(args__28760__auto__) {
                var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
              };
              var G__42270 = function(var_args) {
                var args__28760__auto__ = null;
                if (arguments.length > 0) {
                  var G__42271__i = 0, G__42271__a = new Array(arguments.length - 0);
                  while (G__42271__i < G__42271__a.length) {
                    G__42271__a[G__42271__i] = arguments[G__42271__i + 0];
                    ++G__42271__i;
                  }
                  args__28760__auto__ = new cljs.core.IndexedSeq(G__42271__a, 0);
                }
                return G__42270__delegate.call(this, args__28760__auto__);
              };
              G__42270.cljs$lang$maxFixedArity = 0;
              G__42270.cljs$lang$applyTo = function(arglist__42272) {
                var args__28760__auto__ = cljs.core.seq(arglist__42272);
                return G__42270__delegate(args__28760__auto__);
              };
              G__42270.cljs$core$IFn$_invoke$arity$variadic = G__42270__delegate;
              return G__42270;
            }();
          }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42266_42268, _STAR_current_length_STAR_42267_42269, vec__42257, seq__42258, first__42259, seq__42258__$1, defn_sym, first__42259__$1, seq__42258__$2, defn_name, stuff, vec__42260, doc_str, stuff__$1, vec__42263, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__28758__auto__ = " ~_~w";
            var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
            return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42266_42268, _STAR_current_length_STAR_42267_42269, vec__42257, seq__42258, first__42259, seq__42258__$1, defn_sym, first__42259__$1, seq__42258__$2, defn_name, stuff, vec__42260, doc_str, stuff__$1, vec__42263, attr_map, stuff__$2) {
              return function() {
                var G__42273__delegate = function(args__28760__auto__) {
                  var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                };
                var G__42273 = function(var_args) {
                  var args__28760__auto__ = null;
                  if (arguments.length > 0) {
                    var G__42274__i = 0, G__42274__a = new Array(arguments.length - 0);
                    while (G__42274__i < G__42274__a.length) {
                      G__42274__a[G__42274__i] = arguments[G__42274__i + 0];
                      ++G__42274__i;
                    }
                    args__28760__auto__ = new cljs.core.IndexedSeq(G__42274__a, 0);
                  }
                  return G__42273__delegate.call(this, args__28760__auto__);
                };
                G__42273.cljs$lang$maxFixedArity = 0;
                G__42273.cljs$lang$applyTo = function(arglist__42275) {
                  var args__28760__auto__ = cljs.core.seq(arglist__42275);
                  return G__42273__delegate(args__28760__auto__);
                };
                G__42273.cljs$core$IFn$_invoke$arity$variadic = G__42273__delegate;
                return G__42273;
              }();
            }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42266_42268, _STAR_current_length_STAR_42267_42269, vec__42257, seq__42258, first__42259, seq__42258__$1, defn_sym, first__42259__$1, seq__42258__$2, defn_name, stuff, vec__42260, doc_str, stuff__$1, vec__42263, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__28758__auto__ = " ~_~w";
            var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
            return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42266_42268, _STAR_current_length_STAR_42267_42269, vec__42257, seq__42258, first__42259, seq__42258__$1, defn_sym, first__42259__$1, seq__42258__$2, defn_name, stuff, vec__42260, doc_str, stuff__$1, vec__42263, attr_map, stuff__$2) {
              return function() {
                var G__42276__delegate = function(args__28760__auto__) {
                  var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                  return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
                };
                var G__42276 = function(var_args) {
                  var args__28760__auto__ = null;
                  if (arguments.length > 0) {
                    var G__42277__i = 0, G__42277__a = new Array(arguments.length - 0);
                    while (G__42277__i < G__42277__a.length) {
                      G__42277__a[G__42277__i] = arguments[G__42277__i + 0];
                      ++G__42277__i;
                    }
                    args__28760__auto__ = new cljs.core.IndexedSeq(G__42277__a, 0);
                  }
                  return G__42276__delegate.call(this, args__28760__auto__);
                };
                G__42276.cljs$lang$maxFixedArity = 0;
                G__42276.cljs$lang$applyTo = function(arglist__42278) {
                  var args__28760__auto__ = cljs.core.seq(arglist__42278);
                  return G__42276__delegate(args__28760__auto__);
                };
                G__42276.cljs$core$IFn$_invoke$arity$variadic = G__42276__delegate;
                return G__42276;
              }();
            }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42266_42268, _STAR_current_length_STAR_42267_42269, vec__42257, seq__42258, first__42259, seq__42258__$1, defn_sym, first__42259__$1, seq__42258__$2, defn_name, stuff, vec__42260, doc_str, stuff__$1, vec__42263, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__26240__auto__ = doc_str;
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__26240__auto__ = doc_str;
            if (cljs.core.truth_(or__26240__auto__)) {
              return or__26240__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42267_42269;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42266_42268;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42284_42289 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42285_42290 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count42286_42291 = 0;
      var binding_42292 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count42286_42291 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_42292)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_42287_42293 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_42288_42294 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_42292));
                if (cljs.core.next.call(null, binding_42292)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_42292));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42288_42294;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42287_42293;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_42292))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__42295 = length_count42286_42291 + 1;
              var G__42296 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_42292));
              length_count42286_42291 = G__42295;
              binding_42292 = G__42296;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42285_42290;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42284_42289;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42299_42301 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42300_42302 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__28758__auto__ = "~w ~1I~@_";
          var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
          return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42299_42301, _STAR_current_length_STAR_42300_42302, base_sym) {
            return function() {
              var G__42303__delegate = function(args__28760__auto__) {
                var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
              };
              var G__42303 = function(var_args) {
                var args__28760__auto__ = null;
                if (arguments.length > 0) {
                  var G__42304__i = 0, G__42304__a = new Array(arguments.length - 0);
                  while (G__42304__i < G__42304__a.length) {
                    G__42304__a[G__42304__i] = arguments[G__42304__i + 0];
                    ++G__42304__i;
                  }
                  args__28760__auto__ = new cljs.core.IndexedSeq(G__42304__a, 0);
                }
                return G__42303__delegate.call(this, args__28760__auto__);
              };
              G__42303.cljs$lang$maxFixedArity = 0;
              G__42303.cljs$lang$applyTo = function(arglist__42305) {
                var args__28760__auto__ = cljs.core.seq(arglist__42305);
                return G__42303__delegate(args__28760__auto__);
              };
              G__42303.cljs$core$IFn$_invoke$arity$variadic = G__42303__delegate;
              return G__42303;
            }();
          }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42299_42301, _STAR_current_length_STAR_42300_42302, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__28758__auto__ = " ~_~{~w~^ ~_~}";
          var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
          return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42299_42301, _STAR_current_length_STAR_42300_42302, base_sym) {
            return function() {
              var G__42306__delegate = function(args__28760__auto__) {
                var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
              };
              var G__42306 = function(var_args) {
                var args__28760__auto__ = null;
                if (arguments.length > 0) {
                  var G__42307__i = 0, G__42307__a = new Array(arguments.length - 0);
                  while (G__42307__i < G__42307__a.length) {
                    G__42307__a[G__42307__i] = arguments[G__42307__i + 0];
                    ++G__42307__i;
                  }
                  args__28760__auto__ = new cljs.core.IndexedSeq(G__42307__a, 0);
                }
                return G__42306__delegate.call(this, args__28760__auto__);
              };
              G__42306.cljs$lang$maxFixedArity = 0;
              G__42306.cljs$lang$applyTo = function(arglist__42308) {
                var args__28760__auto__ = cljs.core.seq(arglist__42308);
                return G__42306__delegate(args__28760__auto__);
              };
              G__42306.cljs$core$IFn$_invoke$arity$variadic = G__42306__delegate;
              return G__42306;
            }();
          }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42299_42301, _STAR_current_length_STAR_42300_42302, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42300_42302;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42299_42301;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__28758__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
  return function(format_in__28758__auto__, cf__28759__auto__) {
    return function() {
      var G__42309__delegate = function(args__28760__auto__) {
        var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
        return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
      };
      var G__42309 = function(var_args) {
        var args__28760__auto__ = null;
        if (arguments.length > 0) {
          var G__42310__i = 0, G__42310__a = new Array(arguments.length - 0);
          while (G__42310__i < G__42310__a.length) {
            G__42310__a[G__42310__i] = arguments[G__42310__i + 0];
            ++G__42310__i;
          }
          args__28760__auto__ = new cljs.core.IndexedSeq(G__42310__a, 0);
        }
        return G__42309__delegate.call(this, args__28760__auto__);
      };
      G__42309.cljs$lang$maxFixedArity = 0;
      G__42309.cljs$lang$applyTo = function(arglist__42311) {
        var args__28760__auto__ = cljs.core.seq(arglist__42311);
        return G__42309__delegate(args__28760__auto__);
      };
      G__42309.cljs$core$IFn$_invoke$arity$variadic = G__42309__delegate;
      return G__42309;
    }();
  }(format_in__28758__auto__, cf__28759__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42317_42322 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42318_42323 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count42319_42324 = 0;
        var alis_42325__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count42319_42324 < cljs.core._STAR_print_length_STAR_) {
            if (alis_42325__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_42320_42326 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_42321_42327 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_42325__$1));
                  if (cljs.core.next.call(null, alis_42325__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_42325__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42321_42327;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42320_42326;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_42325__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__42328 = length_count42319_42324 + 1;
                var G__42329 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_42325__$1));
                length_count42319_42324 = G__42328;
                alis_42325__$1 = G__42329;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42318_42323;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42317_42322;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_42335_42340 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_42336_42341 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__28758__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
          return function(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42335_42340, _STAR_current_length_STAR_42336_42341) {
            return function() {
              var G__42342__delegate = function(args__28760__auto__) {
                var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
                return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
              };
              var G__42342 = function(var_args) {
                var args__28760__auto__ = null;
                if (arguments.length > 0) {
                  var G__42343__i = 0, G__42343__a = new Array(arguments.length - 0);
                  while (G__42343__i < G__42343__a.length) {
                    G__42343__a[G__42343__i] = arguments[G__42343__i + 0];
                    ++G__42343__i;
                  }
                  args__28760__auto__ = new cljs.core.IndexedSeq(G__42343__a, 0);
                }
                return G__42342__delegate.call(this, args__28760__auto__);
              };
              G__42342.cljs$lang$maxFixedArity = 0;
              G__42342.cljs$lang$applyTo = function(arglist__42344) {
                var args__28760__auto__ = cljs.core.seq(arglist__42344);
                return G__42342__delegate(args__28760__auto__);
              };
              G__42342.cljs$core$IFn$_invoke$arity$variadic = G__42342__delegate;
              return G__42342;
            }();
          }(format_in__28758__auto__, cf__28759__auto__, _STAR_current_level_STAR_42335_42340, _STAR_current_length_STAR_42336_42341);
        }(), alis);
        var length_count42337_42345 = 0;
        var alis_42346__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count42337_42345 < cljs.core._STAR_print_length_STAR_) {
            if (alis_42346__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_42338_42347 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_42339_42348 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_42346__$1));
                  if (cljs.core.next.call(null, alis_42346__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_42346__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42339_42348;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42338_42347;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_42346__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__42349 = length_count42337_42345 + 1;
                var G__42350 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_42346__$1));
                length_count42337_42345 = G__42349;
                alis_42346__$1 = G__42350;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42336_42341;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42335_42340;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_42354 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_42354, args, nlis) {
      return function(p1__42351_SHARP_, p2__42352_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__42351_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__42352_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_42354, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__28758__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__28759__auto__ = typeof format_in__28758__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__28758__auto__) : format_in__28758__auto__;
        return function(format_in__28758__auto__, cf__28759__auto__, _STAR_symbol_map_STAR_42354, args, nlis) {
          return function() {
            var G__42355__delegate = function(args__28760__auto__) {
              var navigator__28761__auto__ = cljs.pprint.init_navigator.call(null, args__28760__auto__);
              return cljs.pprint.execute_format.call(null, cf__28759__auto__, navigator__28761__auto__);
            };
            var G__42355 = function(var_args) {
              var args__28760__auto__ = null;
              if (arguments.length > 0) {
                var G__42356__i = 0, G__42356__a = new Array(arguments.length - 0);
                while (G__42356__i < G__42356__a.length) {
                  G__42356__a[G__42356__i] = arguments[G__42356__i + 0];
                  ++G__42356__i;
                }
                args__28760__auto__ = new cljs.core.IndexedSeq(G__42356__a, 0);
              }
              return G__42355__delegate.call(this, args__28760__auto__);
            };
            G__42355.cljs$lang$maxFixedArity = 0;
            G__42355.cljs$lang$applyTo = function(arglist__42357) {
              var args__28760__auto__ = cljs.core.seq(arglist__42357);
              return G__42355__delegate(args__28760__auto__);
            };
            G__42355.cljs$core$IFn$_invoke$arity$variadic = G__42355__delegate;
            return G__42355;
          }();
        }(format_in__28758__auto__, cf__28759__auto__, _STAR_symbol_map_STAR_42354, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_42354;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_42361_42364 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_42362_42365 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count42363_42366 = 0;
      var alis_42367__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count42363_42366 < cljs.core._STAR_print_length_STAR_) {
          if (alis_42367__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_42367__$1));
            if (cljs.core.next.call(null, alis_42367__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__42368 = length_count42363_42366 + 1;
              var G__42369 = cljs.core.next.call(null, alis_42367__$1);
              length_count42363_42366 = G__42368;
              alis_42367__$1 = G__42369;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_42362_42365;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_42361_42364;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__27020__auto__ = function cljs$pprint$two_forms_$_iter__42374(s__42375) {
      return new cljs.core.LazySeq(null, function() {
        var s__42375__$1 = s__42375;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__42375__$1);
          if (temp__4657__auto__) {
            var s__42375__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__42375__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__42375__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__42377 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__42376 = 0;
                while (true) {
                  if (i__42376 < size__27019__auto__) {
                    var x = cljs.core._nth.call(null, c__27018__auto__, i__42376);
                    cljs.core.chunk_append.call(null, b__42377, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__42378 = i__42376 + 1;
                    i__42376 = G__42378;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__42377), cljs$pprint$two_forms_$_iter__42374.call(null, cljs.core.chunk_rest.call(null, s__42375__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__42377), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__42375__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__42374.call(null, cljs.core.rest.call(null, s__42375__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__42379_SHARP_) {
      var vec__42383 = p1__42379_SHARP_;
      var s = cljs.core.nth.call(null, vec__42383, 0, null);
      var f = cljs.core.nth.call(null, vec__42383, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__26240__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__26240__auto__)) {
          return or__26240__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__42379_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4655__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4655__auto__)) {
      var special_form = temp__4655__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4655__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var arg_num = temp__4655__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__26571__auto__ = 0;
    var y__26572__auto__ = width - cljs.core.count.call(null, s);
    return x__26571__auto__ > y__26572__auto__ ? x__26571__auto__ : y__26572__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var args42389 = [];
  var len__27315__auto___42413 = arguments.length;
  var i__27316__auto___42414 = 0;
  while (true) {
    if (i__27316__auto___42414 < len__27315__auto___42413) {
      args42389.push(arguments[i__27316__auto___42414]);
      var G__42415 = i__27316__auto___42414 + 1;
      i__27316__auto___42414 = G__42415;
      continue;
    } else {
    }
    break;
  }
  var G__42391 = args42389.length;
  switch(G__42391) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42389.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_42392 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_42392) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_42392) {
            return function(p1__42386_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__42386_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_42392), rows));
        };
      }(_STAR_print_newline_STAR_42392), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_42392) {
        return function(p1__42387_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__42387_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_42392), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_42392) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__27020__auto__ = function(widths, spacers, _STAR_print_newline_STAR_42392) {
              return function cljs$pprint$iter__42393(s__42394) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_42392) {
                  return function() {
                    var s__42394__$1 = s__42394;
                    while (true) {
                      var temp__4657__auto__ = cljs.core.seq.call(null, s__42394__$1);
                      if (temp__4657__auto__) {
                        var s__42394__$2 = temp__4657__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__42394__$2)) {
                          var c__27018__auto__ = cljs.core.chunk_first.call(null, s__42394__$2);
                          var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
                          var b__42396 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
                          if (function() {
                            var i__42395 = 0;
                            while (true) {
                              if (i__42395 < size__27019__auto__) {
                                var vec__42403 = cljs.core._nth.call(null, c__27018__auto__, i__42395);
                                var col = cljs.core.nth.call(null, vec__42403, 0, null);
                                var width = cljs.core.nth.call(null, vec__42403, 1, null);
                                cljs.core.chunk_append.call(null, b__42396, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__42417 = i__42395 + 1;
                                i__42395 = G__42417;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__42396), cljs$pprint$iter__42393.call(null, cljs.core.chunk_rest.call(null, s__42394__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__42396), null);
                          }
                        } else {
                          var vec__42406 = cljs.core.first.call(null, s__42394__$2);
                          var col = cljs.core.nth.call(null, vec__42406, 0, null);
                          var width = cljs.core.nth.call(null, vec__42406, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__42393.call(null, cljs.core.rest.call(null, s__42394__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_42392), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_42392);
            return iter__27020__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__27020__auto__, widths, spacers, _STAR_print_newline_STAR_42392) {
              return function(p1__42388_SHARP_) {
                return cljs.core.get.call(null, row, p1__42388_SHARP_);
              };
            }(iter__27020__auto__, widths, spacers, _STAR_print_newline_STAR_42392), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_42392);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__42409 = cljs.core.seq.call(null, rows);
      var chunk__42410 = null;
      var count__42411 = 0;
      var i__42412 = 0;
      while (true) {
        if (i__42412 < count__42411) {
          var row = cljs.core._nth.call(null, chunk__42410, i__42412);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__42418 = seq__42409;
          var G__42419 = chunk__42410;
          var G__42420 = count__42411;
          var G__42421 = i__42412 + 1;
          seq__42409 = G__42418;
          chunk__42410 = G__42419;
          count__42411 = G__42420;
          i__42412 = G__42421;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__42409);
          if (temp__4657__auto__) {
            var seq__42409__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__42409__$1)) {
              var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__42409__$1);
              var G__42422 = cljs.core.chunk_rest.call(null, seq__42409__$1);
              var G__42423 = c__27051__auto__;
              var G__42424 = cljs.core.count.call(null, c__27051__auto__);
              var G__42425 = 0;
              seq__42409 = G__42422;
              chunk__42410 = G__42423;
              count__42411 = G__42424;
              i__42412 = G__42425;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__42409__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__42426 = cljs.core.next.call(null, seq__42409__$1);
              var G__42427 = null;
              var G__42428 = 0;
              var G__42429 = 0;
              seq__42409 = G__42426;
              chunk__42410 = G__42427;
              count__42411 = G__42428;
              i__42412 = G__42429;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_42392;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var args42432 = [];
  var len__27315__auto___42436 = arguments.length;
  var i__27316__auto___42437 = 0;
  while (true) {
    if (i__27316__auto___42437 < len__27315__auto___42436) {
      args42432.push(arguments[i__27316__auto___42437]);
      var G__42438 = i__27316__auto___42437 + 1;
      i__27316__auto___42437 = G__42438;
      continue;
    } else {
    }
    break;
  }
  var G__42434 = args42432.length;
  switch(G__42434) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42432.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__42435 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__42435, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__42435;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__26240__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___42443 = arguments.length;
  var i__27316__auto___42444 = 0;
  while (true) {
    if (i__27316__auto___42444 < len__27315__auto___42443) {
      args__27322__auto__.push(arguments[i__27316__auto___42444]);
      var G__42445 = i__27316__auto___42444 + 1;
      i__27316__auto___42444 = G__42445;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 2 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__27323__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq42440) {
  var G__42441 = cljs.core.first.call(null, seq42440);
  var seq42440__$1 = cljs.core.next.call(null, seq42440);
  var G__42442 = cljs.core.first.call(null, seq42440__$1);
  var seq42440__$2 = cljs.core.next.call(null, seq42440__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__42441, G__42442, seq42440__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__42449 = m;
  var map__42449__$1 = (!(map__42449 == null) ? map__42449.cljs$lang$protocol_mask$partition0$ & 64 || map__42449.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__42449) : map__42449;
  var file = cljs.core.get.call(null, map__42449__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__42449__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__42449__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__42449, map__42449__$1, file, line, column) {
    return function(p1__42446_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__42446_SHARP_));
    };
  }(map__42449, map__42449__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__27165__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__27166__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__27167__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__27168__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__27169__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__, hierarchy__27169__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__27169__auto__, method_table__27165__auto__, prefer_table__27166__auto__, method_cache__27167__auto__, cached_hierarchy__27168__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__26240__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___42451 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___42451)) {
    var message_42452 = temp__4657__auto___42451;
    cljs.core.println.call(null, message_42452);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___42453 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___42453)) {
    var message_42454 = temp__4657__auto___42453;
    cljs.core.println.call(null, message_42454);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var source_map = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var columns = temp__4655__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4655__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4655__auto____$2)) {
          var mapping = temp__4655__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4655__auto__ = function() {
    var and__26228__auto__ = typeof exception.stack === "string";
    if (and__26228__auto__) {
      var G__42464 = exception.stack;
      var G__42464__$1 = G__42464 == null ? null : clojure.string.split_lines.call(null, G__42464);
      var G__42464__$2 = G__42464__$1 == null ? null : cljs.core.get.call(null, G__42464__$1, depth);
      if (G__42464__$2 == null) {
        return null;
      } else {
        return clojure.string.trim.call(null, G__42464__$2);
      }
    } else {
      return and__26228__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var stack_element = temp__4655__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__42465 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__42465, 0, null);
    var column = cljs.core.nth.call(null, vec__42465, 1, null);
    var vec__42468 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__42468, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__42468, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__42468, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__42472 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__42472) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4657__auto__) {
      var xs__5205__auto__ = temp__4657__auto__;
      var f = cljs.core.first.call(null, xs__5205__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__5205__auto__, temp__4657__auto__), null);
          return function(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__);
        }());
      } else {
        var G__42478 = function() {
          var G__42477 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__42477);
          } else {
            return G__42477;
          }
        }();
        fns = G__42478;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__42480 = fns;
  if (G__42480 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__42480, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e42483) {
      var e = e42483;
      var G__42484 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__42484) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var t = temp__4655__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__42489 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__42489, 0, null);
  var types = vec__42489;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str("(not-any? nil? types)")].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str("(\x3e 2 (count types))")].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__42501) {
    var vec__42502 = p__42501;
    var ns = cljs.core.nth.call(null, vec__42502, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__42502, 1, null);
    return function(vec__42502, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__42505 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__42505) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1) {
                    return function() {
                      var seq__42506 = cljs.core.seq.call(null, vars__$1);
                      var chunk__42507 = null;
                      var count__42508 = 0;
                      var i__42509 = 0;
                      while (true) {
                        if (i__42509 < count__42508) {
                          var v = cljs.core._nth.call(null, chunk__42507, i__42509);
                          var temp__4657__auto___42511 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4657__auto___42511)) {
                            var t_42512 = temp__4657__auto___42511;
                            each_fixture_fn.call(null, function(seq__42506, chunk__42507, count__42508, i__42509, t_42512, temp__4657__auto___42511, v, each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_42512)));
                              };
                            }(seq__42506, chunk__42507, count__42508, i__42509, t_42512, temp__4657__auto___42511, v, each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1));
                          } else {
                          }
                          var G__42513 = seq__42506;
                          var G__42514 = chunk__42507;
                          var G__42515 = count__42508;
                          var G__42516 = i__42509 + 1;
                          seq__42506 = G__42513;
                          chunk__42507 = G__42514;
                          count__42508 = G__42515;
                          i__42509 = G__42516;
                          continue;
                        } else {
                          var temp__4657__auto__ = cljs.core.seq.call(null, seq__42506);
                          if (temp__4657__auto__) {
                            var seq__42506__$1 = temp__4657__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__42506__$1)) {
                              var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__42506__$1);
                              var G__42517 = cljs.core.chunk_rest.call(null, seq__42506__$1);
                              var G__42518 = c__27051__auto__;
                              var G__42519 = cljs.core.count.call(null, c__27051__auto__);
                              var G__42520 = 0;
                              seq__42506 = G__42517;
                              chunk__42507 = G__42518;
                              count__42508 = G__42519;
                              i__42509 = G__42520;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__42506__$1);
                              var temp__4657__auto___42521__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4657__auto___42521__$1)) {
                                var t_42522 = temp__4657__auto___42521__$1;
                                each_fixture_fn.call(null, function(seq__42506, chunk__42507, count__42508, i__42509, t_42522, temp__4657__auto___42521__$1, v, seq__42506__$1, temp__4657__auto__, each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_42522)));
                                  };
                                }(seq__42506, chunk__42507, count__42508, i__42509, t_42522, temp__4657__auto___42521__$1, v, seq__42506__$1, temp__4657__auto__, each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1));
                              } else {
                              }
                              var G__42523 = cljs.core.next.call(null, seq__42506__$1);
                              var G__42524 = null;
                              var G__42525 = 0;
                              var G__42526 = 0;
                              seq__42506 = G__42523;
                              chunk__42507 = G__42524;
                              count__42508 = G__42525;
                              i__42509 = G__42526;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1));
                };
              }(each_fixture_fn, G__42505, env, once_fixtures, each_fixtures, vec__42502, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__42502, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "\x3d", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  if (typeof Symbol != "undefined") {
    types.ITERATOR = Symbol.iterator;
  } else {
    types.ITERATOR = "@@iterator";
  }
  types.TaggedValue = function Transit$TaggedValue(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740991");
  types.MIN_INT = Long.fromString("-9007199254740991");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function Transit$Keyword(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this._name;
  };
  types.Keyword.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Keyword.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this._name == other._name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function Transit$Symbol(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Symbol.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Symbol.prototype.toString = function() {
    return this._name;
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this._name == other._name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function Transit$UUID(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function() {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function() {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.TransitMapIterator = function Transit$MapIterator(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.TransitMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.mapEquals = function(me, you) {
    if (me instanceof types.TransitMap && types.isMap(you)) {
      if (me.size !== you.size) {
        return false;
      }
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (me instanceof types.TransitArrayMap && types.isMap(you)) {
        if (me.size !== you.size) {
          return false;
        }
        var entries = me._entries;
        for (var j = 0;j < entries.length;j += 2) {
          if (!eq.equals(entries[j + 1], you.get(entries[j]))) {
            return false;
          }
        }
        return true;
      } else {
        if (you != null && typeof you === "object") {
          var ks = util.objectKeys(you), kslen = ks.length;
          if (me.size === kslen) {
            for (var i = 0;i < kslen;i++) {
              var k = ks[i];
              if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
                return false;
              }
            }
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.print = function(x) {
    if (x == null) {
      return "null";
    }
    if (goog.isArray(x)) {
      return "[" + x.toString() + "]";
    } else {
      if (goog.isString(x)) {
        return '"' + x + '"';
      } else {
        return x.toString();
      }
    }
  };
  types.printMap = function(map) {
    var idx = 0, str = "TransitMap {";
    map.forEach(function(v, k) {
      str += types.print(k) + " \x3d\x3e " + types.print(v);
      if (idx < map.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.printSet = function(set) {
    var idx = 0, str = "TransitSet {";
    set.forEach(function(v) {
      str += types.print(v);
      if (idx < set.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.TransitArrayMap = function Transit$ArrayMap(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitArrayMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      var ret = this.backingMap["delete"](k);
      this.size = this.backingMap.size;
      return ret;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          var ret = this._entries[i + 1];
          this._entries.splice(i, 2);
          this.size--;
          return ret;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitArrayMap.prototype["clone"] = types.TransitArrayMap.prototype.clone;
  types.TransitArrayMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function Transit$Map(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        var ret = bucket[i + 1];
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        return ret;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitMap.prototype["clone"] = types.TransitMap.prototype.clone;
  types.TransitMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function Transit$Set(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return types.printSet(this);
  };
  types.TransitSet.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    var ret = this.map["delete"](value);
    this.size = this.map.size;
    return ret;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.clone = function() {
    var clone = types.set();
    this.forEach(function(k) {
      clone.add(k);
    });
    return clone;
  };
  types.TransitSet.prototype["clone"] = types.TransitSet.prototype.clone;
  types.TransitSet.prototype[types.ITERATOR] = function() {
    return this.values();
  };
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.TaggedValue && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function Transit$WriteCache() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function Transit$ReadCache() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function Transit$Tag(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function Transit$Decoder(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init(node);
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function Transit$JSONUnmarshaller(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function Transit$Reader(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function Transit$NilHandler() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function Transit$StringHandler() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function Transit$NumberHandler() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function Transit$IntegerHandler() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function Transit$BooleanHandler() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function Transit$ArrayHandler() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function Transit$MapHandler() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function Transit$VerboseDateHandler() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function Transit$DateHandler() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function Transit$UUIDHandler() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function Transit$KeywordHandler() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function Transit$SymbolHandler() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function Transit$TaggedHandler() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function Transit$TransitSetHandler() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function Transit$ArrayMapHandler() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function Transit$MapHandler() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function Transit$BufferHandler() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function Transit$Uint8ArrayHandler() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function Transit$Handlers() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function Transit$JSONMarshaller(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        if (k !== undefined) {
          self.handlers.set(k, v);
        } else {
          throw new Error("Cannot create handler for JavaScript undefined");
        }
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString();
    ret = ret.substr("function ".length);
    ret = ret.substr(0, ret.indexOf("("));
    isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    var arr = null, rep = null, tag = null, ks = null, i = 0;
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          ks = util.objectKeys(obj);
          ret = {};
          for (;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            arr = em.unpack(obj);
            ret = ["^ "];
            if (arr) {
              for (;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          ret = ["^ "];
          ks = util.objectKeys(obj);
          for (;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function Transit$Writer(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var util = com.cognitect.transit.util, reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.MapLike;
  transit.SetLike;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashArrayLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.objectToMap = function(obj) {
    var ret = transit.map();
    for (var p in obj) {
      if (obj.hasOwnProperty(p)) {
        ret.set(p, obj[p]);
      }
    }
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = util.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.objectToMap", transit.objectToMap);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", util.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, objectToMap:transit.objectToMap, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:util.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = true;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.hash.call(null, this$__$1.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__42533_42537 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__42534_42538 = null;
  var count__42535_42539 = 0;
  var i__42536_42540 = 0;
  while (true) {
    if (i__42536_42540 < count__42535_42539) {
      var k_42541 = cljs.core._nth.call(null, chunk__42534_42538, i__42536_42540);
      var v_42542 = b[k_42541];
      a[k_42541] = v_42542;
      var G__42543 = seq__42533_42537;
      var G__42544 = chunk__42534_42538;
      var G__42545 = count__42535_42539;
      var G__42546 = i__42536_42540 + 1;
      seq__42533_42537 = G__42543;
      chunk__42534_42538 = G__42544;
      count__42535_42539 = G__42545;
      i__42536_42540 = G__42546;
      continue;
    } else {
      var temp__4657__auto___42547 = cljs.core.seq.call(null, seq__42533_42537);
      if (temp__4657__auto___42547) {
        var seq__42533_42548__$1 = temp__4657__auto___42547;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__42533_42548__$1)) {
          var c__27051__auto___42549 = cljs.core.chunk_first.call(null, seq__42533_42548__$1);
          var G__42550 = cljs.core.chunk_rest.call(null, seq__42533_42548__$1);
          var G__42551 = c__27051__auto___42549;
          var G__42552 = cljs.core.count.call(null, c__27051__auto___42549);
          var G__42553 = 0;
          seq__42533_42537 = G__42550;
          chunk__42534_42538 = G__42551;
          count__42535_42539 = G__42552;
          i__42536_42540 = G__42553;
          continue;
        } else {
          var k_42554 = cljs.core.first.call(null, seq__42533_42548__$1);
          var v_42555 = b[k_42554];
          a[k_42554] = v_42555;
          var G__42556 = cljs.core.next.call(null, seq__42533_42548__$1);
          var G__42557 = null;
          var G__42558 = 0;
          var G__42559 = 0;
          seq__42533_42537 = G__42556;
          chunk__42534_42538 = G__42557;
          count__42535_42539 = G__42558;
          i__42536_42540 = G__42559;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var args42560 = [];
  var len__27315__auto___42563 = arguments.length;
  var i__27316__auto___42564 = 0;
  while (true) {
    if (i__27316__auto___42564 < len__27315__auto___42563) {
      args42560.push(arguments[i__27316__auto___42564]);
      var G__42565 = i__27316__auto___42564 + 1;
      i__27316__auto___42564 = G__42565;
      continue;
    } else {
    }
    break;
  }
  var G__42562 = args42560.length;
  switch(G__42562) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42560.length)].join(""));;
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.call(null, type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
    return cljs.core.symbol.call(null, v);
  }, ":", function(v) {
    return cljs.core.keyword.call(null, v);
  }, "set", function(v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
  }, "list", function(v) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
  }, "cmap", function(v) {
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < v.length) {
        var G__42567 = i + 2;
        var G__42568 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
        i = G__42567;
        ret = G__42568;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, ret);
      }
      break;
    }
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__42569_42573 = cljs.core.seq.call(null, v);
  var chunk__42570_42574 = null;
  var count__42571_42575 = 0;
  var i__42572_42576 = 0;
  while (true) {
    if (i__42572_42576 < count__42571_42575) {
      var x_42577 = cljs.core._nth.call(null, chunk__42570_42574, i__42572_42576);
      ret.push(x_42577);
      var G__42578 = seq__42569_42573;
      var G__42579 = chunk__42570_42574;
      var G__42580 = count__42571_42575;
      var G__42581 = i__42572_42576 + 1;
      seq__42569_42573 = G__42578;
      chunk__42570_42574 = G__42579;
      count__42571_42575 = G__42580;
      i__42572_42576 = G__42581;
      continue;
    } else {
      var temp__4657__auto___42582 = cljs.core.seq.call(null, seq__42569_42573);
      if (temp__4657__auto___42582) {
        var seq__42569_42583__$1 = temp__4657__auto___42582;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__42569_42583__$1)) {
          var c__27051__auto___42584 = cljs.core.chunk_first.call(null, seq__42569_42583__$1);
          var G__42585 = cljs.core.chunk_rest.call(null, seq__42569_42583__$1);
          var G__42586 = c__27051__auto___42584;
          var G__42587 = cljs.core.count.call(null, c__27051__auto___42584);
          var G__42588 = 0;
          seq__42569_42573 = G__42585;
          chunk__42570_42574 = G__42586;
          count__42571_42575 = G__42587;
          i__42572_42576 = G__42588;
          continue;
        } else {
          var x_42589 = cljs.core.first.call(null, seq__42569_42583__$1);
          ret.push(x_42589);
          var G__42590 = cljs.core.next.call(null, seq__42569_42583__$1);
          var G__42591 = null;
          var G__42592 = 0;
          var G__42593 = 0;
          seq__42569_42573 = G__42590;
          chunk__42570_42574 = G__42591;
          count__42571_42575 = G__42592;
          i__42572_42576 = G__42593;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__42594_42598 = cljs.core.seq.call(null, v);
  var chunk__42595_42599 = null;
  var count__42596_42600 = 0;
  var i__42597_42601 = 0;
  while (true) {
    if (i__42597_42601 < count__42596_42600) {
      var x_42602 = cljs.core._nth.call(null, chunk__42595_42599, i__42597_42601);
      ret.push(x_42602);
      var G__42603 = seq__42594_42598;
      var G__42604 = chunk__42595_42599;
      var G__42605 = count__42596_42600;
      var G__42606 = i__42597_42601 + 1;
      seq__42594_42598 = G__42603;
      chunk__42595_42599 = G__42604;
      count__42596_42600 = G__42605;
      i__42597_42601 = G__42606;
      continue;
    } else {
      var temp__4657__auto___42607 = cljs.core.seq.call(null, seq__42594_42598);
      if (temp__4657__auto___42607) {
        var seq__42594_42608__$1 = temp__4657__auto___42607;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__42594_42608__$1)) {
          var c__27051__auto___42609 = cljs.core.chunk_first.call(null, seq__42594_42608__$1);
          var G__42610 = cljs.core.chunk_rest.call(null, seq__42594_42608__$1);
          var G__42611 = c__27051__auto___42609;
          var G__42612 = cljs.core.count.call(null, c__27051__auto___42609);
          var G__42613 = 0;
          seq__42594_42598 = G__42610;
          chunk__42595_42599 = G__42611;
          count__42596_42600 = G__42612;
          i__42597_42601 = G__42613;
          continue;
        } else {
          var x_42614 = cljs.core.first.call(null, seq__42594_42608__$1);
          ret.push(x_42614);
          var G__42615 = cljs.core.next.call(null, seq__42594_42608__$1);
          var G__42616 = null;
          var G__42617 = 0;
          var G__42618 = 0;
          seq__42594_42598 = G__42615;
          chunk__42595_42599 = G__42616;
          count__42596_42600 = G__42617;
          i__42597_42601 = G__42618;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__42619_42623 = cljs.core.seq.call(null, v);
  var chunk__42620_42624 = null;
  var count__42621_42625 = 0;
  var i__42622_42626 = 0;
  while (true) {
    if (i__42622_42626 < count__42621_42625) {
      var x_42627 = cljs.core._nth.call(null, chunk__42620_42624, i__42622_42626);
      ret.push(x_42627);
      var G__42628 = seq__42619_42623;
      var G__42629 = chunk__42620_42624;
      var G__42630 = count__42621_42625;
      var G__42631 = i__42622_42626 + 1;
      seq__42619_42623 = G__42628;
      chunk__42620_42624 = G__42629;
      count__42621_42625 = G__42630;
      i__42622_42626 = G__42631;
      continue;
    } else {
      var temp__4657__auto___42632 = cljs.core.seq.call(null, seq__42619_42623);
      if (temp__4657__auto___42632) {
        var seq__42619_42633__$1 = temp__4657__auto___42632;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__42619_42633__$1)) {
          var c__27051__auto___42634 = cljs.core.chunk_first.call(null, seq__42619_42633__$1);
          var G__42635 = cljs.core.chunk_rest.call(null, seq__42619_42633__$1);
          var G__42636 = c__27051__auto___42634;
          var G__42637 = cljs.core.count.call(null, c__27051__auto___42634);
          var G__42638 = 0;
          seq__42619_42623 = G__42635;
          chunk__42620_42624 = G__42636;
          count__42621_42625 = G__42637;
          i__42622_42626 = G__42638;
          continue;
        } else {
          var x_42639 = cljs.core.first.call(null, seq__42619_42633__$1);
          ret.push(x_42639);
          var G__42640 = cljs.core.next.call(null, seq__42619_42633__$1);
          var G__42641 = null;
          var G__42642 = 0;
          var G__42643 = 0;
          seq__42619_42623 = G__42640;
          chunk__42620_42624 = G__42641;
          count__42621_42625 = G__42642;
          i__42622_42626 = G__42643;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
  return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var args42644 = [];
  var len__27315__auto___42659 = arguments.length;
  var i__27316__auto___42660 = 0;
  while (true) {
    if (i__27316__auto___42660 < len__27315__auto___42659) {
      args42644.push(arguments[i__27316__auto___42660]);
      var G__42661 = i__27316__auto___42660 + 1;
      i__27316__auto___42660 = G__42661;
      continue;
    } else {
    }
    break;
  }
  var G__42646 = args42644.length;
  switch(G__42646) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42644.length)].join(""));;
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.call(null, type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
  cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
  symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
  return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__42647 = obj;
          G__42647.push(kfn.call(null, k), vfn.call(null, v));
          return G__42647;
        };
      }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x42648 = cljs.core.clone.call(null, handlers);
    x42648.forEach = function(x42648, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__42649 = cljs.core.seq.call(null, coll);
        var chunk__42650 = null;
        var count__42651 = 0;
        var i__42652 = 0;
        while (true) {
          if (i__42652 < count__42651) {
            var vec__42653 = cljs.core._nth.call(null, chunk__42650, i__42652);
            var k = cljs.core.nth.call(null, vec__42653, 0, null);
            var v = cljs.core.nth.call(null, vec__42653, 1, null);
            f.call(null, v, k);
            var G__42663 = seq__42649;
            var G__42664 = chunk__42650;
            var G__42665 = count__42651;
            var G__42666 = i__42652 + 1;
            seq__42649 = G__42663;
            chunk__42650 = G__42664;
            count__42651 = G__42665;
            i__42652 = G__42666;
            continue;
          } else {
            var temp__4657__auto__ = cljs.core.seq.call(null, seq__42649);
            if (temp__4657__auto__) {
              var seq__42649__$1 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__42649__$1)) {
                var c__27051__auto__ = cljs.core.chunk_first.call(null, seq__42649__$1);
                var G__42667 = cljs.core.chunk_rest.call(null, seq__42649__$1);
                var G__42668 = c__27051__auto__;
                var G__42669 = cljs.core.count.call(null, c__27051__auto__);
                var G__42670 = 0;
                seq__42649 = G__42667;
                chunk__42650 = G__42668;
                count__42651 = G__42669;
                i__42652 = G__42670;
                continue;
              } else {
                var vec__42656 = cljs.core.first.call(null, seq__42649__$1);
                var k = cljs.core.nth.call(null, vec__42656, 0, null);
                var v = cljs.core.nth.call(null, vec__42656, 1, null);
                f.call(null, v, k);
                var G__42671 = cljs.core.next.call(null, seq__42649__$1);
                var G__42672 = null;
                var G__42673 = 0;
                var G__42674 = 0;
                seq__42649 = G__42671;
                chunk__42650 = G__42672;
                count__42651 = G__42673;
                i__42652 = G__42674;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x42648, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x42648;
  }(), "unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var args42675 = [];
  var len__27315__auto___42681 = arguments.length;
  var i__27316__auto___42682 = 0;
  while (true) {
    if (i__27316__auto___42682 < len__27315__auto___42681) {
      args42675.push(arguments[i__27316__auto___42682]);
      var G__42683 = i__27316__auto___42682 + 1;
      i__27316__auto___42682 = G__42683;
      continue;
    } else {
    }
    break;
  }
  var G__42677 = args42675.length;
  switch(G__42677) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42675.length)].join(""));;
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t_cognitect$transit42678 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit42678 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta42679) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta42679 = meta42679;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit42678.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_42680, meta42679__$1) {
      var self__ = this;
      var _42680__$1 = this;
      return new cognitect.transit.t_cognitect$transit42678(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta42679__$1);
    };
    cognitect.transit.t_cognitect$transit42678.prototype.cljs$core$IMeta$_meta$arity$1 = function(_42680) {
      var self__ = this;
      var _42680__$1 = this;
      return self__.meta42679;
    };
    cognitect.transit.t_cognitect$transit42678.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit42678.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit42678.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.str_rep_fn)) {
        return self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit42678.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.verbose_handler_fn)) {
        return self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit42678.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta42679", "meta42679", 1753901469, null)], null);
    };
    cognitect.transit.t_cognitect$transit42678.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit42678.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit42678";
    cognitect.transit.t_cognitect$transit42678.cljs$lang$ctorPrWriter = function(this__26846__auto__, writer__26847__auto__, opt__26848__auto__) {
      return cljs.core._write.call(null, writer__26847__auto__, "cognitect.transit/t_cognitect$transit42678");
    };
    cognitect.transit.__GT_t_cognitect$transit42678 = function cognitect$transit$__GT_t_cognitect$transit42678(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta42679) {
      return new cognitect.transit.t_cognitect$transit42678(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta42679);
    };
  }
  return new cognitect.transit.t_cognitect$transit42678(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  var or__26240__auto__ = com.cognitect.transit.types.isUUID.call(null, x);
  if (cljs.core.truth_(or__26240__auto__)) {
    return or__26240__auto__;
  } else {
    return x instanceof cljs.core.UUID;
  }
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("butler.core");
goog.require("cljs.core");
goog.require("cognitect.transit");
butler.core.webworker_QMARK_ = function butler$core$webworker_QMARK_() {
  return void 0 === self.document;
};
butler.core.not_webworker_QMARK_ = cljs.core.complement.call(null, butler.core.webworker_QMARK_);
butler.core.event_message = "message";
butler.core.deserialize = function butler$core$deserialize(data) {
  var r = cognitect.transit.reader.call(null, new cljs.core.Keyword(null, "json", "json", 1279968570));
  return cognitect.transit.read.call(null, r, data);
};
butler.core.serialize = function butler$core$serialize(data) {
  var w = cognitect.transit.writer.call(null, new cljs.core.Keyword(null, "json", "json", 1279968570));
  return cognitect.transit.write.call(null, w, data);
};
butler.core.map_key = function butler$core$map_key(f, m) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__27020__auto__ = function butler$core$map_key_$_iter__42703(s__42704) {
      return new cljs.core.LazySeq(null, function() {
        var s__42704__$1 = s__42704;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__42704__$1);
          if (temp__4657__auto__) {
            var s__42704__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__42704__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__42704__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__42706 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__42705 = 0;
                while (true) {
                  if (i__42705 < size__27019__auto__) {
                    var vec__42713 = cljs.core._nth.call(null, c__27018__auto__, i__42705);
                    var k = cljs.core.nth.call(null, vec__42713, 0, null);
                    var v = cljs.core.nth.call(null, vec__42713, 1, null);
                    cljs.core.chunk_append.call(null, b__42706, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, k), v], null));
                    var G__42719 = i__42705 + 1;
                    i__42705 = G__42719;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__42706), butler$core$map_key_$_iter__42703.call(null, cljs.core.chunk_rest.call(null, s__42704__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__42706), null);
              }
            } else {
              var vec__42716 = cljs.core.first.call(null, s__42704__$2);
              var k = cljs.core.nth.call(null, vec__42716, 0, null);
              var v = cljs.core.nth.call(null, vec__42716, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, k), v], null), butler$core$map_key_$_iter__42703.call(null, cljs.core.rest.call(null, s__42704__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, m);
  }());
};
butler.core.message_handler = function butler$core$message_handler(handlers, e) {
  var deserialized = butler.core.deserialize.call(null, e.data["serialized"]);
  var name = cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(deserialized));
  var data = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(deserialized);
  var transferables = butler.core.map_key.call(null, butler.core.deserialize, cljs.core.js__GT_clj.call(null, e.data["transferables"]));
  var copied = cljs.core.reduce.call(null, function(deserialized, name, data, transferables) {
    return function(p1__42720_SHARP_, p2__42721_SHARP_) {
      return cljs.core.assoc_in.call(null, p1__42720_SHARP_, cljs.core.first.call(null, p2__42721_SHARP_), cljs.core.second.call(null, p2__42721_SHARP_));
    };
  }(deserialized, name, data, transferables), data, transferables);
  var temp__4657__auto__ = cljs.core.get.call(null, handlers, name);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var handler = temp__4657__auto__;
    return handler.call(null, copied);
  } else {
    return null;
  }
};
butler.core.post_message_BANG_ = function butler$core$post_message_BANG_(worker, name, copying_data, transferable_keys) {
  var without_transferables = cljs.core.reduce.call(null, function(p1__42722_SHARP_, p2__42723_SHARP_) {
    return cljs.core.assoc_in.call(null, p1__42722_SHARP_, p2__42723_SHARP_, null);
  }, copying_data, transferable_keys);
  var transferables = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(without_transferables) {
    return function(key) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [butler.core.serialize.call(null, key), cljs.core.get_in.call(null, copying_data, key)], null);
    };
  }(without_transferables), transferable_keys));
  var serialized = butler.core.serialize.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), name, new cljs.core.Keyword(null, "data", "data", -232669377), without_transferables], null));
  var copying = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["serialized", serialized, "transferables", transferables], null));
  return worker.postMessage(copying, cljs.core.clj__GT_js.call(null, function() {
    var or__26240__auto__ = cljs.core.vals.call(null, transferables);
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }()));
};
butler.core.butler = function butler$core$butler(script, handlers) {
  var w = new Worker(script);
  w.addEventListener(butler.core.event_message, cljs.core.partial.call(null, butler.core.message_handler, handlers));
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "worker", "worker", 938239996), w], null);
};
butler.core.work_BANG_ = function butler$core$work_BANG_(var_args) {
  var args42724 = [];
  var len__27315__auto___42727 = arguments.length;
  var i__27316__auto___42728 = 0;
  while (true) {
    if (i__27316__auto___42728 < len__27315__auto___42727) {
      args42724.push(arguments[i__27316__auto___42728]);
      var G__42729 = i__27316__auto___42728 + 1;
      i__27316__auto___42728 = G__42729;
      continue;
    } else {
    }
    break;
  }
  var G__42726 = args42724.length;
  switch(G__42726) {
    case 4:
      return butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 3:
      return butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42724.length)].join(""));;
  }
};
butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$4 = function(b, name, copying_data, transferable_keys) {
  return butler.core.post_message_BANG_.call(null, (new cljs.core.Keyword(null, "worker", "worker", 938239996)).cljs$core$IFn$_invoke$arity$1(b), name, copying_data, transferable_keys);
};
butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$3 = function(b, name, copying_data) {
  return butler.core.work_BANG_.call(null, b, name, copying_data, cljs.core.PersistentVector.EMPTY);
};
butler.core.work_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, name) {
  return butler.core.work_BANG_.call(null, b, name, null);
};
butler.core.work_BANG_.cljs$lang$maxFixedArity = 4;
butler.core.serve_BANG_ = function butler$core$serve_BANG_(handlers) {
  return self.addEventListener(butler.core.event_message, cljs.core.partial.call(null, butler.core.message_handler, handlers));
};
butler.core.bring_BANG_ = function butler$core$bring_BANG_(var_args) {
  var args42731 = [];
  var len__27315__auto___42734 = arguments.length;
  var i__27316__auto___42735 = 0;
  while (true) {
    if (i__27316__auto___42735 < len__27315__auto___42734) {
      args42731.push(arguments[i__27316__auto___42735]);
      var G__42736 = i__27316__auto___42735 + 1;
      i__27316__auto___42735 = G__42736;
      continue;
    } else {
    }
    break;
  }
  var G__42733 = args42731.length;
  switch(G__42733) {
    case 3:
      return butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args42731.length)].join(""));;
  }
};
butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$3 = function(name, copying_data, transferable_keys) {
  return butler.core.post_message_BANG_.call(null, self, name, copying_data, transferable_keys);
};
butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$2 = function(name, copying_data) {
  return butler.core.bring_BANG_.call(null, name, copying_data, cljs.core.PersistentVector.EMPTY);
};
butler.core.bring_BANG_.cljs$core$IFn$_invoke$arity$1 = function(name) {
  return butler.core.bring_BANG_.call(null, name, null);
};
butler.core.bring_BANG_.cljs$lang$maxFixedArity = 3;
goog.provide("tictactoe.workers.ai");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("butler.core");
cljs.core.enable_console_print_BANG_.call(null);
tictactoe.workers.ai.winning_k = 3;
tictactoe.workers.ai.X = "X";
tictactoe.workers.ai.O = "O";
tictactoe.workers.ai.B = "B";
tictactoe.workers.ai.board_size = 3;
tictactoe.workers.ai.opponent = new cljs.core.PersistentArrayMap(null, 2, ["X", "O", "O", "X"], null);
tictactoe.workers.ai.free_spots = function tictactoe$workers$ai$free_spots(var_args) {
  var args31015 = [];
  var len__27315__auto___31024 = arguments.length;
  var i__27316__auto___31025 = 0;
  while (true) {
    if (i__27316__auto___31025 < len__27315__auto___31024) {
      args31015.push(arguments[i__27316__auto___31025]);
      var G__31026 = i__27316__auto___31025 + 1;
      i__27316__auto___31025 = G__31026;
      continue;
    } else {
    }
    break;
  }
  var G__31017 = args31015.length;
  switch(G__31017) {
    case 1:
      return tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31015.length)].join(""));;
  }
};
tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$1 = function(board) {
  var iter__27020__auto__ = function tictactoe$workers$ai$iter__31018(s__31019) {
    return new cljs.core.LazySeq(null, function() {
      var s__31019__$1 = s__31019;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__31019__$1);
        if (temp__4657__auto__) {
          var xs__5205__auto__ = temp__4657__auto__;
          var i = cljs.core.first.call(null, xs__5205__auto__);
          var iterys__27016__auto__ = function(s__31019__$1, i, xs__5205__auto__, temp__4657__auto__) {
            return function tictactoe$workers$ai$iter__31018_$_iter__31020(s__31021) {
              return new cljs.core.LazySeq(null, function(s__31019__$1, i, xs__5205__auto__, temp__4657__auto__) {
                return function() {
                  var s__31021__$1 = s__31021;
                  while (true) {
                    var temp__4657__auto____$1 = cljs.core.seq.call(null, s__31021__$1);
                    if (temp__4657__auto____$1) {
                      var s__31021__$2 = temp__4657__auto____$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__31021__$2)) {
                        var c__27018__auto__ = cljs.core.chunk_first.call(null, s__31021__$2);
                        var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
                        var b__31023 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
                        if (function() {
                          var i__31022 = 0;
                          while (true) {
                            if (i__31022 < size__27019__auto__) {
                              var j = cljs.core._nth.call(null, c__27018__auto__, i__31022);
                              if (cljs.core._EQ_.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null)), "B")) {
                                cljs.core.chunk_append.call(null, b__31023, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null));
                                var G__31028 = i__31022 + 1;
                                i__31022 = G__31028;
                                continue;
                              } else {
                                var G__31029 = i__31022 + 1;
                                i__31022 = G__31029;
                                continue;
                              }
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31023), tictactoe$workers$ai$iter__31018_$_iter__31020.call(null, cljs.core.chunk_rest.call(null, s__31021__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31023), null);
                        }
                      } else {
                        var j = cljs.core.first.call(null, s__31021__$2);
                        if (cljs.core._EQ_.call(null, cljs.core.get_in.call(null, board, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null)), "B")) {
                          return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, j], null), tictactoe$workers$ai$iter__31018_$_iter__31020.call(null, cljs.core.rest.call(null, s__31021__$2)));
                        } else {
                          var G__31030 = cljs.core.rest.call(null, s__31021__$2);
                          s__31021__$1 = G__31030;
                          continue;
                        }
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(s__31019__$1, i, xs__5205__auto__, temp__4657__auto__), null, null);
            };
          }(s__31019__$1, i, xs__5205__auto__, temp__4657__auto__);
          var fs__27017__auto__ = cljs.core.seq.call(null, iterys__27016__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size)));
          if (fs__27017__auto__) {
            return cljs.core.concat.call(null, fs__27017__auto__, tictactoe$workers$ai$iter__31018.call(null, cljs.core.rest.call(null, s__31019__$1)));
          } else {
            var G__31031 = cljs.core.rest.call(null, s__31019__$1);
            s__31019__$1 = G__31031;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.free_spots.cljs$core$IFn$_invoke$arity$2 = function(board, line_coords) {
  return cljs.core.filter.call(null, function(p1__31014_SHARP_) {
    return cljs.core._EQ_.call(null, "B", cljs.core.get_in.call(null, board, p1__31014_SHARP_));
  }, line_coords);
};
tictactoe.workers.ai.free_spots.cljs$lang$maxFixedArity = 2;
tictactoe.workers.ai.draw_QMARK_ = function tictactoe$workers$ai$draw_QMARK_(board) {
  return cljs.core.empty_QMARK_.call(null, tictactoe.workers.ai.free_spots.call(null, board));
};
tictactoe.workers.ai.vertical_coords = function tictactoe$workers$ai$vertical_coords(y) {
  return cljs.core.map.call(null, function(p1__31032_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__31032_SHARP_, y], null);
  }, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.horizontal_coords = function tictactoe$workers$ai$horizontal_coords(x) {
  return cljs.core.map.call(null, function(p1__31033_SHARP_) {
    return cljs.core.vec.call(null, cljs.core.rseq.call(null, p1__31033_SHARP_));
  }, tictactoe.workers.ai.vertical_coords.call(null, x));
};
tictactoe.workers.ai.diagonal_down_coords = function tictactoe$workers$ai$diagonal_down_coords() {
  var iter__27020__auto__ = function tictactoe$workers$ai$diagonal_down_coords_$_iter__31038(s__31039) {
    return new cljs.core.LazySeq(null, function() {
      var s__31039__$1 = s__31039;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__31039__$1);
        if (temp__4657__auto__) {
          var s__31039__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__31039__$2)) {
            var c__27018__auto__ = cljs.core.chunk_first.call(null, s__31039__$2);
            var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
            var b__31041 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
            if (function() {
              var i__31040 = 0;
              while (true) {
                if (i__31040 < size__27019__auto__) {
                  var i = cljs.core._nth.call(null, c__27018__auto__, i__31040);
                  cljs.core.chunk_append.call(null, b__31041, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, i], null));
                  var G__31042 = i__31040 + 1;
                  i__31040 = G__31042;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31041), tictactoe$workers$ai$diagonal_down_coords_$_iter__31038.call(null, cljs.core.chunk_rest.call(null, s__31039__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31041), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__31039__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, i], null), tictactoe$workers$ai$diagonal_down_coords_$_iter__31038.call(null, cljs.core.rest.call(null, s__31039__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.diagonal_up_coords = function tictactoe$workers$ai$diagonal_up_coords() {
  var iter__27020__auto__ = function tictactoe$workers$ai$diagonal_up_coords_$_iter__31047(s__31048) {
    return new cljs.core.LazySeq(null, function() {
      var s__31048__$1 = s__31048;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__31048__$1);
        if (temp__4657__auto__) {
          var s__31048__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__31048__$2)) {
            var c__27018__auto__ = cljs.core.chunk_first.call(null, s__31048__$2);
            var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
            var b__31050 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
            if (function() {
              var i__31049 = 0;
              while (true) {
                if (i__31049 < size__27019__auto__) {
                  var i = cljs.core._nth.call(null, c__27018__auto__, i__31049);
                  cljs.core.chunk_append.call(null, b__31050, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, tictactoe.workers.ai.board_size - 1 - i], null));
                  var G__31051 = i__31049 + 1;
                  i__31049 = G__31051;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31050), tictactoe$workers$ai$diagonal_up_coords_$_iter__31047.call(null, cljs.core.chunk_rest.call(null, s__31048__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31050), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__31048__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, tictactoe.workers.ai.board_size - 1 - i], null), tictactoe$workers$ai$diagonal_up_coords_$_iter__31047.call(null, cljs.core.rest.call(null, s__31048__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
};
tictactoe.workers.ai.get_coords = function tictactoe$workers$ai$get_coords(board, coords) {
  return cljs.core.map.call(null, function(p1__31052_SHARP_) {
    return cljs.core.get_in.call(null, board, p1__31052_SHARP_);
  }, coords);
};
tictactoe.workers.ai.all_lines_coords = function tictactoe$workers$ai$all_lines_coords() {
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tictactoe.workers.ai.diagonal_down_coords.call(null), tictactoe.workers.ai.diagonal_up_coords.call(null)], null), function() {
    var iter__27020__auto__ = function tictactoe$workers$ai$all_lines_coords_$_iter__31061(s__31062) {
      return new cljs.core.LazySeq(null, function() {
        var s__31062__$1 = s__31062;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__31062__$1);
          if (temp__4657__auto__) {
            var s__31062__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__31062__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__31062__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__31064 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__31063 = 0;
                while (true) {
                  if (i__31063 < size__27019__auto__) {
                    var i = cljs.core._nth.call(null, c__27018__auto__, i__31063);
                    cljs.core.chunk_append.call(null, b__31064, tictactoe.workers.ai.horizontal_coords.call(null, i));
                    var G__31069 = i__31063 + 1;
                    i__31063 = G__31069;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31064), tictactoe$workers$ai$all_lines_coords_$_iter__31061.call(null, cljs.core.chunk_rest.call(null, s__31062__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31064), null);
              }
            } else {
              var i = cljs.core.first.call(null, s__31062__$2);
              return cljs.core.cons.call(null, tictactoe.workers.ai.horizontal_coords.call(null, i), tictactoe$workers$ai$all_lines_coords_$_iter__31061.call(null, cljs.core.rest.call(null, s__31062__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
  }(), function() {
    var iter__27020__auto__ = function tictactoe$workers$ai$all_lines_coords_$_iter__31065(s__31066) {
      return new cljs.core.LazySeq(null, function() {
        var s__31066__$1 = s__31066;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__31066__$1);
          if (temp__4657__auto__) {
            var s__31066__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__31066__$2)) {
              var c__27018__auto__ = cljs.core.chunk_first.call(null, s__31066__$2);
              var size__27019__auto__ = cljs.core.count.call(null, c__27018__auto__);
              var b__31068 = cljs.core.chunk_buffer.call(null, size__27019__auto__);
              if (function() {
                var i__31067 = 0;
                while (true) {
                  if (i__31067 < size__27019__auto__) {
                    var i = cljs.core._nth.call(null, c__27018__auto__, i__31067);
                    cljs.core.chunk_append.call(null, b__31068, tictactoe.workers.ai.vertical_coords.call(null, i));
                    var G__31070 = i__31067 + 1;
                    i__31067 = G__31070;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31068), tictactoe$workers$ai$all_lines_coords_$_iter__31065.call(null, cljs.core.chunk_rest.call(null, s__31066__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__31068), null);
              }
            } else {
              var i = cljs.core.first.call(null, s__31066__$2);
              return cljs.core.cons.call(null, tictactoe.workers.ai.vertical_coords.call(null, i), tictactoe$workers$ai$all_lines_coords_$_iter__31065.call(null, cljs.core.rest.call(null, s__31066__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__27020__auto__.call(null, cljs.core.range.call(null, tictactoe.workers.ai.board_size));
  }());
};
tictactoe.workers.ai.all_lines = function tictactoe$workers$ai$all_lines(board) {
  return cljs.core.map.call(null, function(p1__31071_SHARP_) {
    return tictactoe.workers.ai.get_coords.call(null, board, p1__31071_SHARP_);
  }, tictactoe.workers.ai.all_lines_coords.call(null));
};
tictactoe.workers.ai.winning_by_QMARK_ = function tictactoe$workers$ai$winning_by_QMARK_(player, line) {
  return cljs.core.every_QMARK_.call(null, function(p1__31072_SHARP_) {
    return cljs.core._EQ_.call(null, p1__31072_SHARP_, player);
  }, cljs.core.take.call(null, tictactoe.workers.ai.winning_k, line));
};
tictactoe.workers.ai.winning_QMARK_ = function tictactoe$workers$ai$winning_QMARK_(board, player) {
  return cljs.core.some.call(null, cljs.core.partial.call(null, tictactoe.workers.ai.winning_by_QMARK_, player), tictactoe.workers.ai.all_lines.call(null, board));
};
tictactoe.workers.ai.evaluate_board = function tictactoe$workers$ai$evaluate_board(board, player) {
  if (cljs.core.truth_(tictactoe.workers.ai.winning_QMARK_.call(null, board, player))) {
    return 1;
  } else {
    if (cljs.core.truth_(tictactoe.workers.ai.winning_QMARK_.call(null, board, tictactoe.workers.ai.opponent.call(null, player)))) {
      return -1;
    } else {
      if (cljs.core.truth_(tictactoe.workers.ai.draw_QMARK_.call(null, board))) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
tictactoe.workers.ai.evaluate_moves_deep = function tictactoe$workers$ai$evaluate_moves_deep(var_args) {
  var args__27322__auto__ = [];
  var len__27315__auto___31080 = arguments.length;
  var i__27316__auto___31081 = 0;
  while (true) {
    if (i__27316__auto___31081 < len__27315__auto___31080) {
      args__27322__auto__.push(arguments[i__27316__auto___31081]);
      var G__31082 = i__27316__auto___31081 + 1;
      i__27316__auto___31081 = G__31082;
      continue;
    } else {
    }
    break;
  }
  var argseq__27323__auto__ = 4 < args__27322__auto__.length ? new cljs.core.IndexedSeq(args__27322__auto__.slice(4), 0, null) : null;
  return tictactoe.workers.ai.evaluate_moves_deep.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__27323__auto__);
};
tictactoe.workers.ai.evaluate_moves_deep.cljs$core$IFn$_invoke$arity$variadic = function(board, player, max_depth, computer, last_move) {
  var score = tictactoe.workers.ai.evaluate_board.call(null, board, computer);
  if (cljs.core.truth_(function() {
    var or__26240__auto__ = score;
    if (cljs.core.truth_(or__26240__auto__)) {
      return or__26240__auto__;
    } else {
      return max_depth < 0;
    }
  }())) {
    return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "score", "score", -1963588780), new cljs.core.Keyword(null, "move", "move", -2110884309)], [score, last_move]);
  } else {
    var legal_moves = cljs.core.map.call(null, function(score) {
      return function(p1__31073_SHARP_) {
        return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "board", "board", -1907017633), new cljs.core.Keyword(null, "move", "move", -2110884309)], [cljs.core.assoc_in.call(null, board, p1__31073_SHARP_, player), p1__31073_SHARP_]);
      };
    }(score), tictactoe.workers.ai.free_spots.call(null, board));
    var evaluated_moves = cljs.core.map.call(null, function(legal_moves, score) {
      return function(p1__31074_SHARP_) {
        return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "score", "score", -1963588780), new cljs.core.Keyword(null, "move", "move", -2110884309)], [cljs.core.trampoline.call(null, tictactoe.workers.ai.evaluate_moves_deep, p1__31074_SHARP_.call(null, new cljs.core.Keyword(null, "board", "board", -1907017633)), tictactoe.workers.ai.opponent.call(null, player), max_depth - 1, computer, p1__31074_SHARP_.call(null, new cljs.core.Keyword(null, "move", "move", -2110884309))).call(null, 
        new cljs.core.Keyword(null, "score", "score", -1963588780)), p1__31074_SHARP_.call(null, new cljs.core.Keyword(null, "move", "move", -2110884309))]);
      };
    }(legal_moves, score), legal_moves);
    return cljs.core.first.call(null, cljs.core._EQ_.call(null, player, computer) ? cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "score", "score", -1963588780), cljs.core._GT_, evaluated_moves) : cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "score", "score", -1963588780), cljs.core._LT_, evaluated_moves));
  }
};
tictactoe.workers.ai.evaluate_moves_deep.cljs$lang$maxFixedArity = 4;
tictactoe.workers.ai.evaluate_moves_deep.cljs$lang$applyTo = function(seq31075) {
  var G__31076 = cljs.core.first.call(null, seq31075);
  var seq31075__$1 = cljs.core.next.call(null, seq31075);
  var G__31077 = cljs.core.first.call(null, seq31075__$1);
  var seq31075__$2 = cljs.core.next.call(null, seq31075__$1);
  var G__31078 = cljs.core.first.call(null, seq31075__$2);
  var seq31075__$3 = cljs.core.next.call(null, seq31075__$2);
  var G__31079 = cljs.core.first.call(null, seq31075__$3);
  var seq31075__$4 = cljs.core.next.call(null, seq31075__$3);
  return tictactoe.workers.ai.evaluate_moves_deep.cljs$core$IFn$_invoke$arity$variadic(G__31076, G__31077, G__31078, G__31079, seq31075__$4);
};
tictactoe.workers.ai.find_best_move = function tictactoe$workers$ai$find_best_move(board) {
  return tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 5, "O").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
};
tictactoe.workers.ai.analyze_handler = function tictactoe$workers$ai$analyze_handler(board) {
  return butler.core.bring_BANG_.call(null, new cljs.core.Keyword(null, "analyze-result", "analyze-result", 1074901422), tictactoe.workers.ai.find_best_move.call(null, board));
};
butler.core.serve_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "request-analyze", "request-analyze", -185801518), tictactoe.workers.ai.analyze_handler], null));
tictactoe.workers.ai.eval_lost_pos = function tictactoe$workers$ai$eval_lost_pos() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$eval_lost_pos.cljs$lang$var);
};
tictactoe.workers.ai.eval_lost_pos.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "O"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "X"], null)], null);
  var score = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 1, "O").call(null, new cljs.core.Keyword(null, "score", "score", -1963588780));
  try {
    var values__27616__auto__ = function() {
      var x__27074__auto__ = score;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, -1), x__27074__auto__);
    }();
    var result__27617__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__27616__auto__);
    if (cljs.core.truth_(result__27617__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), -1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, 
      values__27616__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), -1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__27616__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__27617__auto__;
  } catch (e31083) {
    var t__27654__auto__ = e31083;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), -1), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__27654__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.eval_lost_pos.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.eval_lost_pos;
}, new cljs.core.Symbol("tictactoe.workers.ai", "eval-lost-pos", "tictactoe.workers.ai/eval-lost-pos", 1157531051, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "eval-lost-pos", "eval-lost-pos", 882566934, null), "src/tictactoe/workers/ai.cljs", 23, 1, 84, 84, cljs.core.List.EMPTY, null, 
cljs.core.truth_(tictactoe.workers.ai.eval_lost_pos) ? tictactoe.workers.ai.eval_lost_pos.cljs$lang$test : null]));
tictactoe.workers.ai.eval_won_pos = function tictactoe$workers$ai$eval_won_pos() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$eval_won_pos.cljs$lang$var);
};
tictactoe.workers.ai.eval_won_pos.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "O"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "X"], null)], null);
  var score = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "X", 1, "X").call(null, new cljs.core.Keyword(null, "score", "score", -1963588780));
  try {
    var values__27616__auto__ = function() {
      var x__27074__auto__ = score;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 1), x__27074__auto__);
    }();
    var result__27617__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__27616__auto__);
    if (cljs.core.truth_(result__27617__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), 1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, 
      values__27616__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), 1), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__27616__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__27617__auto__;
  } catch (e31084) {
    var t__27654__auto__ = e31084;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "score", "score", -323057253, null), 1), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__27654__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.eval_won_pos.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.eval_won_pos;
}, new cljs.core.Symbol("tictactoe.workers.ai", "eval-won-pos", "tictactoe.workers.ai/eval-won-pos", 787533079, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "eval-won-pos", "eval-won-pos", -1634260860, null), "src/tictactoe/workers/ai.cljs", 22, 1, 91, 91, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.eval_won_pos) ? 
tictactoe.workers.ai.eval_won_pos.cljs$lang$test : null]));
tictactoe.workers.ai.one_move_win = function tictactoe$workers$ai$one_move_win() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$one_move_win.cljs$lang$var);
};
tictactoe.workers.ai.one_move_win.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "O"], null)], null);
  var result = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 1, "O");
  var move = result.call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__27616__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__27617__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__27616__auto__);
    if (cljs.core.truth_(result__27617__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__27616__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__27616__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__27617__auto__;
  } catch (e31085) {
    var t__27654__auto__ = e31085;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__27654__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.one_move_win.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.one_move_win;
}, new cljs.core.Symbol("tictactoe.workers.ai", "one-move-win", "tictactoe.workers.ai/one-move-win", -72104046, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "one-move-win", "one-move-win", 186100031, null), "src/tictactoe/workers/ai.cljs", 22, 1, 98, 98, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.one_move_win) ? 
tictactoe.workers.ai.one_move_win.cljs$lang$test : null]));
tictactoe.workers.ai.block_one_move_win = function tictactoe$workers$ai$block_one_move_win() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$block_one_move_win.cljs$lang$var);
};
tictactoe.workers.ai.block_one_move_win.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["B", "X", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "O"], null)], null);
  var move = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "X", 1, "X").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__27616__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__27617__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__27616__auto__);
    if (cljs.core.truth_(result__27617__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__27616__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__27616__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__27617__auto__;
  } catch (e31086) {
    var t__27654__auto__ = e31086;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 1], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__27654__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.block_one_move_win.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.block_one_move_win;
}, new cljs.core.Symbol("tictactoe.workers.ai", "block-one-move-win", "tictactoe.workers.ai/block-one-move-win", -856680658, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "block-one-move-win", "block-one-move-win", -1131122085, null), "src/tictactoe/workers/ai.cljs", 28, 1, 106, 106, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tictactoe.workers.ai.block_one_move_win) ? tictactoe.workers.ai.block_one_move_win.cljs$lang$test : null]));
tictactoe.workers.ai.fork = function tictactoe$workers$ai$fork() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$fork.cljs$lang$var);
};
tictactoe.workers.ai.fork.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "X", "X"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "B"], null)], null);
  var move = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "O", 5, "O").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__27616__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__27617__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__27616__auto__);
    if (cljs.core.truth_(result__27617__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__27616__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__27616__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__27617__auto__;
  } catch (e31087) {
    var t__27654__auto__ = e31087;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 2], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__27654__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.fork.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.fork;
}, new cljs.core.Symbol("tictactoe.workers.ai", "fork", "tictactoe.workers.ai/fork", -795304713, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
"end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "fork", "fork", -1591461534, null), "src/tictactoe/workers/ai.cljs", 14, 1, 113, 113, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.fork) ? tictactoe.workers.ai.fork.cljs$lang$test : 
null]));
tictactoe.workers.ai.block_fork = function tictactoe$workers$ai$block_fork() {
  return cljs.test.test_var.call(null, tictactoe$workers$ai$block_fork.cljs$lang$var);
};
tictactoe.workers.ai.block_fork.cljs$lang$test = function() {
  var board = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "X", "X"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "B", "B"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O", "B", "B"], null)], null);
  var move = tictactoe.workers.ai.evaluate_moves_deep.call(null, board, "X", 5, "X").call(null, new cljs.core.Keyword(null, "move", "move", -2110884309));
  try {
    var values__27616__auto__ = function() {
      var x__27074__auto__ = move;
      return cljs.core._conj.call(null, function() {
        var x__27074__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto____$1);
      }(), x__27074__auto__);
    }();
    var result__27617__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__27616__auto__);
    if (cljs.core.truth_(result__27617__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__27616__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__27074__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__27616__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__27074__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__27617__auto__;
  } catch (e31088) {
    var t__27654__auto__ = e31088;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "move", "move", -470352782, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__27654__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tictactoe.workers.ai.block_fork.cljs$lang$var = new cljs.core.Var(function() {
  return tictactoe.workers.ai.block_fork;
}, new cljs.core.Symbol("tictactoe.workers.ai", "block-fork", "tictactoe.workers.ai/block-fork", 128787680, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tictactoe.workers.ai", "tictactoe.workers.ai", 1915594111, null), new cljs.core.Symbol(null, "block-fork", "block-fork", -163477635, null), "src/tictactoe/workers/ai.cljs", 20, 1, 120, 120, cljs.core.List.EMPTY, null, cljs.core.truth_(tictactoe.workers.ai.block_fork) ? 
tictactoe.workers.ai.block_fork.cljs$lang$test : null]));
