{:rename-macros {}, :renames {}, :use-macros {testing cljs.test, is cljs.test, deftest cljs.test, run-tests cljs.test}, :excludes #{}, :name tictactoe.workers.ai, :imports nil, :requires {cljs.test cljs.test, butler butler.core, butler.core butler.core}, :uses nil, :defs {X {:name tictactoe.workers.ai/X, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 9, :column 1, :end-line 9, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 9, :column 6, :end-line 9, :end-column 7}}, vertical-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 29, :column 7, :end-line 29, :end-column 22, :arglists (quote ([y]))}, :name tictactoe.workers.ai/vertical-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 22, :method-params ([y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([y]))}, fork {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 113, :column 10, :end-line 113, :end-column 14}, :name tictactoe.workers.ai/fork, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 113, :end-line 113, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, get-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 41, :column 7, :end-line 41, :end-column 17, :arglists (quote ([board coords]))}, :name tictactoe.workers.ai/get-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 17, :method-params ([board coords]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board coords]))}, eval-won-pos {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 91, :column 10, :end-line 91, :end-column 22}, :name tictactoe.workers.ai/eval-won-pos, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 91, :end-line 91, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, find-best-move {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 75, :column 7, :end-line 75, :end-column 21, :arglists (quote ([board]))}, :name tictactoe.workers.ai/find-best-move, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 21, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, horizontal-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 32, :column 7, :end-line 32, :end-column 24, :arglists (quote ([x]))}, :name tictactoe.workers.ai/horizontal-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, opponent {:name tictactoe.workers.ai/opponent, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 15, :column 1, :end-line 15, :end-column 14, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 15, :column 6, :end-line 15, :end-column 14}}, winning-k {:name tictactoe.workers.ai/winning-k, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 7, :column 6, :end-line 7, :end-column 15}}, winning-by? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 52, :column 7, :end-line 52, :end-column 18, :arglists (quote ([player line]))}, :name tictactoe.workers.ai/winning-by?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 18, :method-params ([player line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player line]))}, evaluate-moves-deep {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 64, :column 7, :end-line 64, :end-column 26, :arglists (quote ([board player max-depth computer & last-move])), :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(board player max-depth computer last-move)], :arglists ([board player max-depth computer & last-move]), :arglists-meta (nil)}}, :name tictactoe.workers.ai/evaluate-moves-deep, :variadic true, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 4, :method-params [(board player max-depth computer last-move)], :arglists ([board player max-depth computer & last-move]), :arglists-meta (nil)}, :method-params [(board player max-depth computer last-move)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 4, :fn-var true, :arglists ([board player max-depth computer & last-move])}, all-lines-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 44, :column 7, :end-line 44, :end-column 23, :arglists (quote ([]))}, :name tictactoe.workers.ai/all-lines-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, O {:name tictactoe.workers.ai/O, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 10, :column 1, :end-line 10, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 10, :column 6, :end-line 10, :end-column 7}}, free-spots {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([board] [board line-coords])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([board] [board line-coords]), :arglists ([board] [board line-coords]), :arglists-meta (nil nil)}}, :name tictactoe.workers.ai/free-spots, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([board] [board line-coords]), :arglists ([board] [board line-coords]), :arglists-meta (nil nil)}, :method-params ([board] [board line-coords]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists ([board] [board line-coords])}, all-lines {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 49, :column 7, :end-line 49, :end-column 16, :arglists (quote ([board]))}, :name tictactoe.workers.ai/all-lines, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 16, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, board-size {:name tictactoe.workers.ai/board-size, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 13, :column 1, :end-line 13, :end-column 16, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 13, :column 6, :end-line 13, :end-column 16}}, B {:name tictactoe.workers.ai/B, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 11, :column 1, :end-line 11, :end-column 7, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 11, :column 6, :end-line 11, :end-column 7}}, diagonal-up-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 38, :column 7, :end-line 38, :end-column 25, :arglists (quote ([]))}, :name tictactoe.workers.ai/diagonal-up-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, eval-lost-pos {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 84, :column 10, :end-line 84, :end-column 23}, :name tictactoe.workers.ai/eval-lost-pos, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, winning? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 55, :column 7, :end-line 55, :end-column 15, :arglists (quote ([board player]))}, :name tictactoe.workers.ai/winning?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 15, :method-params ([board player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board player]))}, draw? {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 26, :column 7, :end-line 26, :end-column 12, :arglists (quote ([board]))}, :name tictactoe.workers.ai/draw?, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 12, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, block-one-move-win {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 106, :column 10, :end-line 106, :end-column 28}, :name tictactoe.workers.ai/block-one-move-win, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 106, :end-line 106, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, evaluate-board {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 58, :column 7, :end-line 58, :end-column 21, :arglists (quote ([board player]))}, :name tictactoe.workers.ai/evaluate-board, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 21, :method-params ([board player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([board player]))}, diagonal-down-coords {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 35, :column 7, :end-line 35, :end-column 27, :arglists (quote ([]))}, :name tictactoe.workers.ai/diagonal-down-coords, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, block-fork {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 120, :column 10, :end-line 120, :end-column 20}, :name tictactoe.workers.ai/block-fork, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 120, :end-line 120, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, analyze-handler {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 78, :column 7, :end-line 78, :end-column 22, :arglists (quote ([board]))}, :name tictactoe.workers.ai/analyze-handler, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 22, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, one-move-win {:protocol-inline nil, :meta {:file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :line 98, :column 10, :end-line 98, :end-column 22}, :name tictactoe.workers.ai/one-move-win, :variadic false, :file "/Users/moti/tictactoe/src/tictactoe/workers/ai.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{tictactoe.workers.ai/block-fork fork = eval-won-pos :else :ns :name :file :end-column tictactoe.workers.ai/eval-lost-pos :move :type :analyze-result tictactoe.workers.ai/block-one-move-win :column move :request-analyze :fail tictactoe.workers.ai/one-move-win :line not :score :expected eval-lost-pos :end-line tictactoe.workers.ai/fork tictactoe.workers.ai/eval-won-pos :error :pass :arglists :actual score block-one-move-win :doc :test block-fork :message :board one-move-win tictactoe.workers.ai}, :order [:else :score :move :board :analyze-result :request-analyze :type :expected :actual :message :error = score :pass :fail not tictactoe.workers.ai/eval-lost-pos :ns :name :file :end-column :column :line :end-line :arglists :doc :test tictactoe.workers.ai eval-lost-pos tictactoe.workers.ai/eval-won-pos eval-won-pos move tictactoe.workers.ai/one-move-win one-move-win tictactoe.workers.ai/block-one-move-win block-one-move-win tictactoe.workers.ai/fork fork tictactoe.workers.ai/block-fork block-fork]}, :doc nil}